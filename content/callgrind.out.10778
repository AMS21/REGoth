version: 1
creator: callgrind-3.12.0
pid: 10778
cmd:  ../build/bin/REGoth -g /run/media/desktop/Data/Games/Gothic II/ -w newworld.zen
part: 1


desc: I1 cache: 
desc: D1 cache: 
desc: LL cache: 

desc: Timerange: Basic block 0 - 377285739
desc: Trigger: Program termination

positions: line
events: Ir
summary: 0


ob=(13) /usr/lib/nvidia/libGL.so.1.0.0
fl=(157) ???
fn=(18320) glXSwapBuffers
0 484
cob=(3) /usr/lib/libGLX.so.0.0.0
cfi=(158) ???
cfn=(18322) glXSwapBuffers
calls=121 0 
0 3530443

ob=(12) /usr/lib/libxcb.so.1.1.0
fl=(148) ???
fn=(7166) xcb_writev
0 224
cob=(10) /usr/lib/libpthread-2.24.so
cfi=(119) ???
cfn=(948) pthread_mutex_lock
calls=14 0 
0 450
0 14
0 70
cfn=(7170) 0x000000000000cf60
calls=14 0 
0 5237
0 42
cob=(10)
cfi=(119)
cfn=(952) pthread_mutex_unlock
calls=14 0 
0 350
0 14
0 98

fn=(7326) 0x000000000000e2f0
0 1162
cfn=(7176) 0x000000000000c840
calls=14 0 
0 10575
0 238
cfn=(7340) 0x000000000000da70
calls=42 0 
0 2800
0 364
cob=(10)
cfi=(119)
cfn=(7586) pthread_cond_destroy@@GLIBC_2.3.2
calls=28 0 
0 812
0 28
0 56
cfn=(7272) 0x000000000000e270
calls=28 0 
0 784
0 378

fn=(7272)
0 546
cob=(10)
cfi=(119)
cfn=(7280) pthread_cond_signal@@GLIBC_2.3.2
calls=42 0 
0 546
0 42
0 42

fn=(7340)
0 948
cfn=(7568) 0x000000000000fa90
calls=14 0 
0 112
0 126
cob=(2) /usr/lib/libc-2.24.so
cfi=(7) ???
cfn=(204) free
calls=14 0 
0 1274
0 14
0 353

fn=(7394) xcb_poll_for_event
0 8890
cob=(10)
cfi=(119)
cfn=(948)
calls=635 0 
0 21702
0 635
0 8255
cob=(10)
cfi=(119)
cfn=(952)
calls=635 0 
0 16057
0 635
0 4529
cfn=(7444) 0x000000000000eb00
calls=42 0 
0 6174
0 2750

fn=(20304) xcb_poll_for_reply64
0 17
cob=(10)
cfi=(119)
cfn=(948)
calls=1 0 
0 45
0 1
0 5
cfn=(7340)
calls=1 0 
0 27
0 3
cob=(10)
cfi=(119)
cfn=(952)
calls=1 0 
0 25
0 1
0 7

fn=(7324) xcb_wait_for_reply64
0 504
cob=(10)
cfi=(119)
cfn=(948)
calls=28 0 
0 1020
0 28
0 112
cfn=(7326)
calls=28 0 
0 17197
0 84
cob=(10)
cfi=(119)
cfn=(952)
calls=28 0 
0 882
0 28
0 196

fn=(7444)
0 2464
cob=(10)
cfi=(119)
cfn=(7452) recvmsg
calls=56 0 
0 3066
0 56
0 2646
cob=(10)
cfi=(119)
cfn=(7280)
calls=14 0 
0 182
0 14
0 210
cob=(2)
cfi=(7)
cfn=(312) malloc
calls=14 0 
0 1694
0 14
0 98
cfn=(7508) 0x000000000000e940
calls=14 0 
0 966
0 140
cob=(2)
cfi=(7)
cfn=(312)
calls=14 0 
0 1694
0 14
0 672
cob=(10)
cfi=(119)
cfn=(7610) __errno_location
calls=42 0 
0 126
0 42
0 84

fn=(7508)
0 322
cob=(2)
cfi=(7)
cfn=(12) memcpy@GLIBC_2.2.5
calls=14 0 
0 140
0 14
0 98
cob=(2)
cfi=(7)
cfn=(12)
calls=14 0 
0 154
0 14
0 224

fn=(7568)
0 112

fn=(7170)
0 294
cfn=(7176)
calls=14 0 
0 4117
0 112
cob=(10)
cfi=(119)
cfn=(7268) pthread_cond_broadcast@@GLIBC_2.3.2
calls=14 0 
0 168
0 14
0 28
cfn=(7272)
calls=14 0 
0 392
0 112

fn=(7176)
0 658
cob=(10)
cfi=(119)
cfn=(952)
calls=14 0 
0 350
0 14
0 70
cob=(10)
cfi=(119)
cfn=(952)
calls=14 0 
0 350
0 14
0 140
cob=(2)
cfi=(7)
cfn=(7190) poll
calls=28 0 
0 1064
0 28
0 280
cob=(10)
cfi=(119)
cfn=(948)
calls=28 0 
0 930
0 28
0 2058
cob=(2)
cfi=(7)
cfn=(7230) writev
calls=14 0 
0 532
0 14
0 70
cfn=(7444)
calls=14 0 
0 8008
0 84

fn=(7432) xcb_connection_has_error
0 1214

ob=(11) /usr/lib/libstdc++.so.6.0.22
fl=(104) /build/gcc-multilib/src/gcc/libstdc++-v3/libsupc++/del_ops.cc
fn=(766) operator delete(void*, unsigned long)
32 1753
cfi=(41) /build/gcc-multilib/src/gcc/libstdc++-v3/libsupc++/del_op.cc
cfn=(200) operator delete(void*)
calls=1753 +17 
* 214018
* 1753

fl=(35) /build/gcc-multilib/src/gcc/libstdc++-v3/libsupc++/hash_bytes.cc
fn=(158) std::_Hash_bytes(void const*, unsigned long, unsigned long)
139 327294
-2 163647
+2 163647
-2 163647
+1 327294
+1 163647
+1 341808
+2 14514
-2 14514
+2 14514
-80 43542
+80 14514
+1 14514
+1 29028
-4 29028
+2 14206
-2 14206
+2 14206
-80 42618
+80 14206
+1 14206
+1 28412
-4 28412
+6 327294
-93 326446
-1 326446
+3 652892
-1 326446
+1 2490304
-1 1245152
+95 163223
+1 326446
-88 489669
+90 326446
-90 489669
+93 163223
-93 1272
+90 848
-90 1272
+93 424

fl=(10) /build/gcc-multilib/src/gcc/libstdc++-v3/src/c++98/tree.cc
fn=(30) std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
62 19302887
+3 19171971
+27 2761849
-22 2754335
+1 8314122
+3 1406183
-3 2812366
+3 1355066
-3 2710132
+5 4065198
-5 1399269
+21 1399269

fl=(37) /build/gcc-multilib/src/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/basic_string.tcc
fn=(632) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
137 125163
+6 208605
+4 42618
-2 14206
fi=(98) /build/gcc-multilib/src/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/ext/new_allocator.h
-41 14206
cfi=(95) /build/gcc-multilib/src/gcc/libstdc++-v3/libsupc++/new_op.cc
cfn=(510) operator new(unsigned long)
calls=14206 -61 
* 1807272
* 14206
* 55030
cfi=(95)
cfn=(510)
calls=27515 -61 
* 3436327
* 27515
fe=(37)

fn=(646) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
310 70450
fi=(38) /build/gcc-multilib/src/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/basic_string.h
152 14090
fe=(37)
310 70450
fi=(38)
796 14090
fe=(37)
310 42270
+6 14090
-2 14090
+2 14090
-2 14090
+2 14090
-2 14090
fi=(38)
854 14090
fe=(37)
316 14090
fi=(38)
854 26490
fe=(37)
317 62000
cfn=(632)
calls=12400 137 
* 1754600
* 12400
* 8450
cfn=(632)
calls=1690 137 
* 234504
* 1690
+2 14090
-2 14090
+2 42270
fi=(38)
-22 14090
136 14090
297 14090
fi=(39) /build/gcc-multilib/src/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/char_traits.h
-7 70450
cob=(2)
cfi=(7)
cfn=(12)
calls=14090 0 
* 140900
* 14090
* 28180
fe=(37)
+31 56360
fi=(38)
-24 14090
fe=(37)
+25 14090
fi=(38)
-25 14090
fi=(39)
-7 56360
cob=(2)
cfi=(7)
cfn=(12)
calls=14090 0 
* 169080
* 14090
* 28180
fe=(37)
+33 28180
fi=(38)
136 14090
+44 28180
fi=(98)
-70 12400
cfi=(41)
cfn=(200)
calls=12400 -61 
* 1153200
* 12400
fi=(38)
+50 14090
-32 14090
+32 14090
fe=(37)
330 154990
fi=(38)
854 3380
fe=(37)

fn=(618) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
1389 46354
fi=(38)
790 6622
fi=(39)
267 13244
cob=(2)
cfi=(7)
cfn=(622) strlen
calls=6622 0 
* 105952
* 6622
* 26488
-7 13244
+2 19866
cob=(2)
cfi=(7)
cfn=(22) __memcmp_sse4_1
calls=6622 0 
* 125818
* 6622
fe=(37)
1397 13244
fi=(38)
352 6622
+3 6622
-1 13244
+5 19866
fe=(37)
1400 39732

fn=(640) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long)
359 42282
fi=(38)
152 14094
fe=(37)
359 14094
fi=(38)
790 14094
136 14094
854 14094
fe=(37)
362 14094
fi=(38)
854 26496
fe=(37)
364 28188
+2 8
+1 4
fi=(38)
-70 10
fi=(39)
-54 4
fi=(38)
132 2
fi=(39)
243 2
fe=(37)
374 10
fi=(38)
132 14092
fi=(39)
243 14092
fe=(37)
374 70460
-4 84540
cfn=(646)
calls=14090 -60 
* 4605974
* 14090
* 28180
fi=(39)
-80 2
cob=(2)
cfi=(7)
cfn=(12)
calls=2 0 
* 24
* 2
* 4
fi=(38)
854 3384
fe=(37)

fn=(176) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
254 486963
+3 108214
fi=(38)
136 54107
+16 162321
796 54107
+58 121036
fe=(37)
262 108214
+9 108214
fi=(38)
132 54107
fi=(39)
243 54107
fe=(37)
+33 541070
fi=(38)
+21 35330
136 35330
297 35330
fe=(37)
-32 232
-1 116
+1 116
cfn=(632)
calls=116 137 
* 17052
* 116
fi=(38)
136 116
fe=(37)
265 116
fi=(38)
-85 232
-20 116
-32 116
+32 232
fi=(39)
290 105990
cob=(2)
cfi=(7)
cfn=(12)
calls=35330 0 
* 396876
* 35330
* 70660
fi=(38)
854 82570
fe=(37)

fl=(182) /build/gcc-multilib/src/gcc/libstdc++-v3/src/c++98/list.cc
fn=(20286) std::__detail::_List_node_base::_M_unhook()
139 23
+1 23
+1 23
+1 46

fn=(20298) std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
131 23
-1 23
+1 23
+1 46
+1 46

fl=(41)
fn=(200)
49 269697
cob=(2)
cfi=(7)
cfn=(204)
calls=269697 -49 
* 28527260
* 269697

fl=(9) ???
fn=(28) std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0 5516184
cfi=(10)
cfn=(30)
calls=5516184 62 
0 67452647

fl=(95)
fn=(510)
43 274261
+5 274261
-5 274261
+5 548522
+2 548522
cob=(2)
cfi=(7)
cfn=(312)
calls=274261 -50 
* 46979102
* 274261
* 548522
+9 548522

ob=(10)
fl=(119)
fn=(1226) __pthread_enable_asynccancel
0 3091

fn=(7456) __pthread_disable_asynccancel
0 3360

fn=(18446) pthread_rwlock_unlock
0 9196

fn=(952)
0 47766
cfn=(954) __pthread_mutex_unlock_usercnt
calls=23883 0 
0 662925

fn=(954)
0 440735
cfn=(7184) __lll_unlock_elision
calls=1597 0 
0 13448
0 208742

fn=(948)
0 246805
cfn=(7118) __lll_lock_elision
calls=1597 0 
0 27337
0 489026

fn=(1220) __new_sem_wait_slow.constprop.0
0 3150
cfn=(1222) _pthread_cleanup_push
calls=225 0 
0 1350
0 1350
cfn=(1224) do_futex_wait.constprop.1
calls=225 0 
0 11218
0 3584
cfn=(19194) _pthread_cleanup_pop
calls=224 0 
0 1120
0 1344

fn=(7118)
0 17239
cfn=(7454) __lll_lock_wait
calls=24 0 
0 480
0 9618

fn=(7610)
0 126

fn=(1224)
0 1575
cfn=(1226)
calls=225 0 
0 2475
0 3136
cfn=(7456)
calls=224 0 
0 2688
0 1344

fn=(1894) pthread_self
0 90228

fn=(7280)
0 728

fn=(7594) __lll_unlock_wake
0 480

fn=(3324) pthread_equal
0 5328

fn=(7452)
0 616
cfn=(1226)
calls=56 0 
0 616
0 616
cfn=(7456)
calls=56 0 
0 672
0 546

fn=(18422) pthread_rwlock_rdlock
0 13770

fn=(1218) __new_sem_wait_fast
0 1773

fn=(7268)
0 504

fn=(7454)
0 480

fn=(7184)
0 9726
cfn=(7594)
calls=48 0 
0 480
0 3242

fn=(1222)
0 1350

fn=(7586)
0 812

fn=(18306) sem_post@@GLIBC_2.2.5
0 6156

fn=(19194)
0 1120

fn=(1216) sem_wait@@GLIBC_2.2.5
0 729
cfn=(1218)
calls=243 0 
0 1773
0 990
cfn=(1220)
calls=225 0 
0 23116

ob=(7) ???
fl=(6) ???
fn=(3732) 0x0000000008370b80
0 4356
cob=(4) /usr/lib/libnvidia-glcore.so.375.20
cfi=(140) ???
cfn=(3736) 0x0000000000c55aa0
calls=1089 0 
0 1816998

fn=(4984) 0x0000000008373d60
0 484
cob=(4)
cfi=(140)
cfn=(4988) 0x0000000000c551d0
calls=121 0 
0 1244818

fn=(11032) 0x0000000008371600
0 484
cob=(4)
cfi=(140)
cfn=(11036) 0x0000000000c95b30
calls=121 0 
0 1868675

fn=(13852) 0x0000000008373e20
0 1452
cob=(4)
cfi=(140)
cfn=(13856) 0x0000000000c5b6c0
calls=363 0 
0 18513

fn=(15682) 0x000000000421ff00
0 10985

fn=(4036) 0x0000000008377060
0 73732
cob=(4)
cfi=(140)
cfn=(4040) 0x0000000000cd3280
calls=18433 0 
0 460825

fn=(4720) 0x00000000083738a0
0 968
cob=(4)
cfi=(140)
cfn=(4724) 0x0000000000c854b0
calls=242 0 
0 6726300

fn=(14830) 0x0000000008387c00
0 4840
cob=(4)
cfi=(140)
cfn=(14834) 0x0000000000dc1c90
calls=1210 0 
0 518366

fn=(18106) 0x0000000008374600
0 484
cob=(4)
cfi=(140)
cfn=(18110) 0x0000000000db80a0
calls=121 0 
0 1713157

fn=(4048) 0x0000000008370800
0 3872
cob=(4)
cfi=(140)
cfn=(4052) 0x0000000000cb9f20
calls=968 0 
0 8773398

fn=(4130) 0x0000000008374080
0 8712
cob=(4)
cfi=(140)
cfn=(4134) 0x0000000000c62990
calls=2178 0 
0 238249

fn=(14600) 0x0000000008370f60
0 484
cob=(4)
cfi=(140)
cfn=(14604) 0x0000000000c5e0b0
calls=121 0 
0 2420

fn=(10880) 0x0000000008388580
0 968
cob=(4)
cfi=(140)
cfn=(10884) 0x0000000000de53d0
calls=242 0 
0 10164

fn=(10948) 0x0000000008374c80
0 3872
cob=(4)
cfi=(140)
cfn=(10952) 0x0000000000c672c0
calls=968 0 
0 182831

fn=(13884) 0x000000000837eda0
0 484
cob=(4)
cfi=(140)
cfn=(13888) 0x0000000000c5a970
calls=121 0 
0 1210

fn=(17276) 0x0000000008374fc0
0 484
cob=(4)
cfi=(140)
cfn=(17280) 0x0000000000d086d0
calls=121 0 
0 150562

fn=(4176) 0x0000000008380a20
0 484
cob=(4)
cfi=(140)
cfn=(4180) 0x0000000000d0b600
calls=121 0 
0 121438

fn=(10908) 0x0000000008371720
0 484
cob=(4)
cfi=(140)
cfn=(10912) 0x0000000000c58e90
calls=121 0 
0 4477

fn=(10924) 0x00000000083722a0
0 1936
cob=(4)
cfi=(140)
cfn=(10928) 0x0000000000c59820
calls=484 0 
0 26378

fn=(14376) 0x0000000008384660
0 968
cob=(4)
cfi=(140)
cfn=(14380) 0x0000000000e51430
calls=242 0 
0 66066

ob=(9) /usr/lib/libX11.so.6.3.0
fl=(146) ???
fn=(7162) _XSend
0 20334
cob=(12)
cfi=(148)
cfn=(7166)
calls=14 0 
0 6499
0 14
0 112
cfn=(7290) 0x00000000000413d0
calls=14 0 
0 350
0 28
cfn=(7298) 0x0000000000043480
calls=14 0 
0 224
0 14

fn=(7382) 0x0000000000041ad0
0 12065
cob=(12)
cfi=(148)
cfn=(7394)
calls=635 0 
0 69627
0 635
0 6350

fn=(18560) XEHeadOfExtensionList
0 242

fn=(7378) 0x0000000000041c50
0 11538
cob=(12)
cfi=(148)
cfn=(20304)
calls=1 0 
0 131
0 1
0 1216
cfn=(7382)
calls=607 0 
0 80775
0 8498

fn=(7124) 0x00000000000423a0
0 2484

fn=(7158) _XReply
0 518
cfn=(7162)
calls=14 0 
0 8151
0 14
0 126
cfn=(7304) 0x00000000000418d0
calls=14 0 
0 1976
0 350
cfn=(7318) 0x0000000000030040
calls=28 0 
0 966
0 112
cob=(12)
cfi=(148)
cfn=(7324)
calls=28 0 
0 20051
0 28
0 196
cfn=(7596) 0x0000000000030260
calls=28 0 
0 1629
0 308
cfn=(7622) 0x0000000000030010
calls=28 0 
0 392
0 462
cfn=(7382)
calls=28 0 
0 7902
0 168
cfn=(7626) 0x0000000000041720
calls=14 0 
0 1526
0 56
cfn=(7290)
calls=14 0 
0 350
0 378
cob=(2)
cfi=(7)
cfn=(12)
calls=14 0 
0 140
0 14
0 140
cob=(2)
cfi=(7)
cfn=(204)
calls=14 0 
0 1274
0 14
0 126

fn=(7372) XPending
0 4856
cfn=(7114) 0x0000000000030070
calls=607 0 
0 49064
0 4856
cfn=(7318)
calls=607 0 
0 17757
0 4856
cfn=(7376) _XEventsQueued
calls=607 0 
0 142828
0 607
0 1214

fn=(7596)
0 224
cob=(10)
cfi=(119)
cfn=(948)
calls=28 0 
0 1209
0 28
0 168

fn=(7298)
0 224

fn=(7376)
0 12140
cfn=(7378)
calls=607 0 
0 102159
0 3035
cob=(12)
cfi=(148)
cfn=(7432)
calls=607 0 
0 1214
0 607
0 3035
cfn=(7162)
calls=607 0 
0 19424
0 607
0 607

fn=(7318)
0 1947
cob=(10)
cfi=(119)
cfn=(952)
calls=649 0 
0 16533
0 649

ob=(7)
fl=(6)
fn=(14668) 0x0000000008376560
0 484
cob=(4)
cfi=(140)
cfn=(14672) 0x0000000000c55580
calls=121 0 
0 46947

fn=(17724) 0x0000000008370a20
0 484
cob=(4)
cfi=(140)
cfn=(17728) 0x0000000000d68cc0
calls=121 0 
0 18513

fn=(5238) 0x00000000083761a0
0 968
cob=(4)
cfi=(140)
cfn=(5242) 0x0000000000c8c710
calls=242 0 
0 160688

fn=(6038) 0x0000000008371480
0 1936
cob=(4)
cfi=(140)
cfn=(6042) 0x0000000000c74a00
calls=484 0 
0 3365840

fn=(11012) 0x0000000008381a80
0 484
cob=(4)
cfi=(140)
cfn=(11016) 0x0000000000de2620
calls=121 0 
0 3025

fn=(13922) 0x0000000008385580
0 1452
cob=(4)
cfi=(140)
cfn=(13926) 0x0000000000dff740
calls=363 0 
0 1104367

fn=(14482) 0x0000000008385300
0 2904
cob=(4)
cfi=(140)
cfn=(14486) 0x0000000000e41e60
calls=726 0 
0 291956

fn=(14932) 0x00000000083746a0
0 1452
cob=(4)
cfi=(140)
cfn=(14936) 0x0000000000db9e90
calls=363 0 
0 1217329

fn=(17652) 0x00000000083700c0
0 484
cob=(4)
cfi=(140)
cfn=(17656) 0x0000000000b481f0
calls=121 0 
0 1694

fn=(17662) 0x0000000008370a80
0 484
cob=(4)
cfi=(140)
cfn=(17666) 0x0000000000d65910
calls=121 0 
0 24079

fn=(4526) 0x0000000008370460
0 484
cob=(4)
cfi=(140)
cfn=(4530) 0x0000000000d09ba0
calls=121 0 
0 111441

fn=(14582) 0x0000000008371120
0 484
cob=(4)
cfi=(140)
cfn=(14586) 0x0000000000c5d0e0
calls=121 0 
0 2904

fn=(14780) 0x0000000008374de0
0 4840
cob=(4)
cfi=(140)
cfn=(14784) 0x0000000000c57e00
calls=1210 0 
0 44044

fn=(14804) 0x0000000008386fc0
0 4840
cob=(4)
cfi=(140)
cfn=(14808) 0x0000000000dc3bb0
calls=1210 0 
0 88330

fn=(17516) 0x0000000008378c40
0 976
cob=(4)
cfi=(140)
cfn=(17520) 0x0000000000d0b540
calls=244 0 
0 95282

fn=(17640) 0x00000000083845a0
0 484
cob=(4)
cfi=(140)
cfn=(17644) 0x0000000000e51590
calls=121 0 
0 33275

fn=(4584) 0x00000000083705e0
0 9680
cob=(4)
cfi=(140)
cfn=(4588) 0x0000000000c6e380
calls=2420 0 
0 6789416

fn=(5876) 0x00000000083713a0
0 968
cob=(4)
cfi=(140)
cfn=(5880) 0x0000000000c87a20
calls=242 0 
0 258160

fn=(10932) 0x00000000083717c0
0 484
cob=(4)
cfi=(140)
cfn=(10936) 0x0000000000c58da0
calls=121 0 
0 6292

fn=(10940) 0x0000000008373e40
0 484

ob=(9)
fl=(146)
fn=(18566) XFindOnExtensionList
0 847

fn=(7114)
0 3105
cob=(10)
cfi=(119)
cfn=(948)
calls=621 0 
0 20955
0 621
0 3726
cfn=(7124)
calls=621 0 
0 2484
0 19251

fn=(7290)
0 700

fn=(7304)
0 98
cob=(2)
cfi=(7)
cfn=(312)
calls=14 0 
0 1584
0 14
0 280

fn=(7622)
0 28
cob=(10)
cfi=(119)
cfn=(7268)
calls=28 0 
0 336
0 28

fn=(7626)
0 238
cob=(2)
cfi=(7)
cfn=(204)
calls=14 0 
0 1274
0 14

ob=(7)
fl=(6)
fn=(10940)
0 484
cob=(4)
cfi=(140)
cfn=(10944) 0x0000000000c5b630
calls=242 0 
0 6292

fn=(13876) 0x00000000083735a0
0 484
cob=(4)
cfi=(140)
cfn=(13880) 0x0000000000c58bf0
calls=121 0 
0 1573

fn=(16166) 0x00000000083712e0
0 484
cob=(4)
cfi=(140)
cfn=(16170) 0x0000000000cb6c60
calls=121 0 
0 2359962

fn=(17380) 0x0000000008378be0
0 640
cob=(4)
cfi=(140)
cfn=(17384) 0x0000000000d0b5d0
calls=160 0 
0 1256299

ob=(6) /usr/lib/libGLdispatch.so.0.0.0
fl=(159) ???
fn=(18364) 0x00000000000523d0
0 242
cob=(10)
cfi=(119)
cfn=(948)
calls=242 0 
0 8175

fn=(18356) __glDispatchCheckMultithreaded
0 1936
cfn=(18360) _glapi_get_current
calls=242 0 
0 968
0 242
0 968
cfn=(18364)
calls=242 0 
0 8417
0 1694
cfn=(18366) 0x00000000000523f0
calls=242 0 
0 6292
0 2420
cob=(5) /usr/lib/libGLX_nvidia.so.375.20
cfi=(139) ???
cfn=(18368) 0x00000000000a4ea0
calls=242 0 
0 65098

fn=(18360)
0 968

fn=(18366)
0 242
cob=(10)
cfi=(119)
cfn=(952)
calls=242 0 
0 6050

ob=(5)
fl=(139)
fn=(1230) 0x00000000000b17eb
cob=(2)
cfi=(7)
cfn=(1228) sched_yield
calls=1 0 
0 3
0 2

fn=(1830) 0x00000000000bc000
0 13942

fn=(2696) 0x00000000000537a0
0 7544
cfn=(2698) 0x0000000000086a50
calls=943 0 
0 8487
0 7544
cfn=(2706) 0x00000000000bc050
calls=943 0 
0 171663
0 4715

fn=(2742) 0x0000000000053680
0 9576
cfn=(2746) 0x00000000000b3090
calls=1064 0 
0 27664
0 2128

fn=(3506) 0x0000000000053980
0 2196
cfn=(1882) 0x00000000000b4d20
calls=122 0 
0 6344
0 244
cfn=(1892) 0x00000000000b1340
calls=122 0 
0 1220
0 1830
cfn=(1820) 0x0000000000053850
calls=122 0 
0 854
0 3538
cfn=(1922) 0x00000000000b4ad0
calls=122 0 
0 5002
0 1756

fn=(3940) 0x00000000000b3a90
0 93909
cob=(2)
cfi=(7)
cfn=(312)
calls=4083 0 
0 685259
0 4083
0 12249

fn=(8470) 0x0000000000053af0
0 5808

fn=(18512) 0x0000000000086900
0 605
cfn=(18514) 0x00000000000868a0
calls=121 0 
0 1089
0 363
cfn=(18522) 0x0000000000083020
calls=121 0 
0 605
0 1936
cob=(4)
cfi=(140)
cfn=(3278) 0x0000000000cfcf90
calls=121 0 
0 1089
0 242
cob=(4)
cfi=(140)
cfn=(8498) 0x0000000000ca5310
calls=121 0 
0 968
0 1331
cob=(4)
cfi=(140)
cfn=(3278)
calls=121 0 
0 1089

fn=(1922)
0 125004
cob=(10)
cfi=(119)
cfn=(952)
calls=20834 0 
0 622178
0 41668

fn=(2722) 0x0000000000053800
0 5320
cfn=(1820)
calls=1064 0 
0 7448
0 8512

fn=(3414) 0x0000000000055280
0 2318
cfn=(1882)
calls=122 0 
0 6344
0 244
cfn=(1892)
calls=122 0 
0 1220
0 2318
cfn=(2696)
calls=122 0 
0 23912
0 244
cfn=(3426) 0x00000000000abf30
calls=122 0 
0 1586
0 976
cfn=(1814) 0x0000000000053720
calls=122 0 
0 6100
0 1708
cfn=(1922)
calls=122 0 
0 5002
0 1708

fn=(4842) 0x00000000000b4510
0 16448
cob=(2)
cfi=(7)
cfn=(4848) realloc
calls=1028 0 
0 388491
0 10280

fn=(18484) glXSwapBuffers
0 1210
cfn=(18586) 0x0000000000056790
calls=121 0 
0 50336
0 4235
cfn=(18370) 0x000000000008c500
calls=121 0 
0 32428
0 121
cfn=(18486) 0x0000000000058d50
calls=121 0 
0 8712
0 484
cfn=(18502) 0x00000000000869b0
calls=121 0 
0 78408
0 484
cfn=(18514)
calls=121 0 
0 1089
0 484
cob=(4)
cfi=(140)
cfn=(18582) 0x000000000102d520
calls=121 0 
0 726
0 3509
cob=(2)
cfi=(7)
cfn=(914) __GI_memset
calls=121 0 
0 15851
0 121
0 1331
cfn=(1882)
calls=121 0 
0 6292
0 242
cfn=(1892)
calls=121 0 
0 1210
0 1936
cob=(4)
cfi=(140)
cfn=(18694) 0x000000000101d0e0
calls=121 0 
0 2662
0 1815
cfn=(1922)
calls=121 0 
0 4961
0 847
cob=(4)
cfi=(140)
cfn=(18714) 0x00000000010204f0
calls=121 0 
0 968
0 2178
cfn=(3246) 0x00000000000ab630
calls=121 0 
0 21538
0 1815
cob=(4)
cfi=(140)
cfn=(3278)
calls=121 0 
0 1089
0 242
cob=(4)
cfi=(140)
cfn=(8498)
calls=121 0 
0 968
0 847
cob=(4)
cfi=(140)
cfn=(11042) 0x00000000010429d0
calls=121 0 
0 48037
0 242
cob=(4)
cfi=(140)
cfn=(18744) 0x0000000001040680
calls=121 0 
0 242
0 1210
cob=(4)
cfi=(140)
cfn=(18750) 0x00000000010204b0
calls=121 0 
0 1089
0 1573
cfn=(3246)
calls=121 0 
0 21538
0 726
cob=(4)
cfi=(140)
cfn=(3278)
calls=121 0 
0 1089
0 242
cfn=(3284) 0x00000000000ab540
calls=121 0 
0 38599
0 484
cob=(4)
cfi=(140)
cfn=(18768) 0x000000000101d4b0
calls=121 0 
0 217710
0 1210
cfn=(3246)
calls=121 0 
0 21538
0 726
cob=(4)
cfi=(140)
cfn=(3278)
calls=121 0 
0 1089
0 242
cfn=(3284)
calls=121 0 
0 38599
0 968
cob=(4)
cfi=(140)
cfn=(19086) 0x00000000010f51a0
calls=121 0 
0 1705519
0 1089
cfn=(3246)
calls=121 0 
0 21538
0 847
cob=(4)
cfi=(140)
cfn=(3278)
calls=121 0 
0 1089
0 242
cfn=(3284)
calls=121 0 
0 38599
0 484
cob=(4)
cfi=(140)
cfn=(3374) 0x00000000010f3a00
calls=121 0 
0 877056
0 726
cob=(4)
cfi=(140)
cfn=(3278)
calls=121 0 
0 1089
0 484
cob=(4)
cfi=(140)
cfn=(3628) 0x0000000001040cb0
calls=121 0 
0 50820
0 1210
cfn=(1882)
calls=121 0 
0 6292
0 242
cfn=(1892)
calls=121 0 
0 1210
0 1936
cob=(4)
cfi=(140)
cfn=(3682) 0x000000000101d110
calls=121 0 
0 3267
0 1815
cfn=(1922)
calls=121 0 
0 4961
0 2299

fn=(18586)
0 2662
cfn=(1882)
calls=121 0 
0 6292
0 242
cfn=(1892)
calls=121 0 
0 1210
0 2420
cob=(4)
cfi=(140)
cfn=(18598) 0x000000000101f260
calls=121 0 
0 25894
0 2420
cfn=(1922)
calls=121 0 
0 4961
0 1815
cfn=(3426)
calls=121 0 
0 1573
0 847

fn=(2706)
0 32062
cfn=(2710) 0x00000000000536a0
calls=943 0 
0 30176
0 1210
cfn=(2710)
calls=121 0 
0 3872
0 22682
cfn=(2722)
calls=1064 0 
0 21280
0 5320
cfn=(2742)
calls=1064 0 
0 39368
0 15693

fn=(2710)
0 12768
cfn=(1820)
calls=1064 0 
0 7448
0 13832

fn=(2746)
0 19152
cob=(2)
cfi=(7)
cfn=(1228)
calls=1064 0 
0 5320
0 1064
0 2128

fn=(3284)
0 5824
cfn=(1882)
calls=364 0 
0 18928
0 728
cfn=(1892)
calls=364 0 
0 3640
0 5824
cfn=(3294) 0x0000000000054c20
calls=364 0 
0 54964
0 6552
cfn=(1922)
calls=364 0 
0 14924
0 4732

fn=(3298) 0x00000000000b1f40
0 3636

fn=(3452) 0x00000000000553e0
0 2440
cfn=(1882)
calls=122 0 
0 6344
0 244
cfn=(1892)
calls=122 0 
0 1220
0 4026
cfn=(1922)
calls=122 0 
0 5002
0 2928
cfn=(2698)
calls=122 0 
0 1098
0 854
cfn=(1820)
calls=122 0 
0 854
0 1342

fn=(18486)
0 1694
cfn=(3298)
calls=242 0 
0 1452
0 726
cfn=(1892)
calls=242 0 
0 2420
0 2178
cob=(4)
cfi=(140)
cfn=(18492) 0x0000000001054800
calls=242 0 
0 7744
0 1210

fn=(18502)
0 2541
cfn=(1882)
calls=121 0 
0 6292
0 242
cfn=(1892)
calls=121 0 
0 1210
0 1936
cob=(15) /usr/lib/libXext.so.6.4.0
cfi=(147) ???
cfn=(7146) XextFindDisplay
calls=121 0 
0 1815
0 121
0 968
cob=(9)
cfi=(146)
cfn=(18560)
calls=121 0 
0 242
0 121
0 726
cob=(9)
cfi=(146)
cfn=(18566)
calls=121 0 
0 847
0 121
0 2178
cfn=(1922)
calls=121 0 
0 4961
0 2541
cfn=(18370)
calls=121 0 
0 32428
0 363
cfn=(18486)
calls=121 0 
0 8712
0 363
cfn=(18512)
calls=121 0 
0 9317
0 363

fn=(3246)
0 8730
cfn=(1882)
calls=485 0 
0 25220
0 970
cfn=(1892)
calls=485 0 
0 4850
0 7760
cob=(4)
cfi=(140)
cfn=(3256) 0x000000000101d2a0
calls=485 0 
0 4365
0 7760
cfn=(1922)
calls=485 0 
0 19885
0 6790

fn=(3294)
0 4004
cfn=(1892)
calls=364 0 
0 3640
0 2184
cfn=(3298)
calls=364 0 
0 2184
0 1820
cob=(4)
cfi=(140)
cfn=(3304) 0x0000000001052e60
calls=364 0 
0 4368
0 6552
cfn=(3318) 0x00000000000b1360
calls=364 0 
0 9100
0 2184
cob=(4)
cfi=(140)
cfn=(3332) 0x0000000001052cc0
calls=364 0 
0 13468
0 5460

fn=(4940) 0x00000000000b4790
0 61457
cob=(2)
cfi=(7)
cfn=(204)
calls=5356 0 
0 622319
0 5356
0 39307

fn=(18370)
0 4840
cfn=(1882)
calls=242 0 
0 12584
0 968
cfn=(1892)
calls=242 0 
0 2420
0 7744
cfn=(3318)
calls=242 0 
0 6050
0 7260
cfn=(1922)
calls=242 0 
0 9922
0 1936
cfn=(18372) 0x00000000000b1f20
calls=242 0 
0 5082
0 726
cfn=(1892)
calls=242 0 
0 2420
0 2904

fn=(1882)
0 270829
cob=(10)
cfi=(119)
cfn=(948)
calls=20833 0 
0 659314
0 104165

fn=(3196) 0x00000000000b2ad0
0 8766
cfn=(3202) 0x00000000000ad340
calls=974 0 
0 22402
0 11688

fn=(3896) 0x00000000000b3870
0 35952
cob=(2)
cfi=(7)
cfn=(3904) calloc
calls=1284 0 
0 415588
0 2568

fn=(7108) 0x00000000000bf550
0 252
cob=(9)
cfi=(146)
cfn=(7114)
calls=14 0 
0 1078
0 154
cob=(15)
cfi=(147)
cfn=(7146)
calls=14 0 
0 210
0 14
0 350
cob=(9)
cfi=(146)
cfn=(7158)
calls=14 0 
0 47367
0 14
0 98
cob=(9)
cfi=(146)
cfn=(7318)
calls=14 0 
0 406
0 70

fn=(18368)
0 4840
cfn=(1882)
calls=242 0 
0 12584
0 968
cfn=(1892)
calls=242 0 
0 2420
0 7744
cfn=(3318)
calls=242 0 
0 6050
0 7260
cfn=(1922)
calls=242 0 
0 9922
0 1936
cfn=(18372)
calls=242 0 
0 5082
0 726
cfn=(1892)
calls=242 0 
0 2420
0 3146

fn=(18372)
0 1936
cob=(2)
cfi=(7)
cfn=(3206) syscall
calls=484 0 
0 5324
0 484
0 2420

fn=(18522)
0 605

fn=(1814)
0 16048
cfn=(1820)
calls=944 0 
0 6608
0 363
cfn=(1820)
calls=121 0 
0 847
0 3195
cfn=(1830)
calls=1065 0 
0 13942
0 8738

fn=(1820)
0 24059

fn=(1892)
0 135342
cob=(10)
cfi=(119)
cfn=(1894)
calls=45114 0 
0 90228
0 225570

fn=(2698)
0 14067

fn=(3426)
0 3159

fn=(8772) 0x0000000000055700
0 9196
cfn=(1882)
calls=484 0 
0 22264
0 968
cfn=(1892)
calls=484 0 
0 4840
0 5808
cfn=(2698)
calls=484 0 
0 4356
0 14036
cfn=(1922)
calls=484 0 
0 15972
0 5324

fn=(18514)
0 2178

fn=(3202)
0 5844
cob=(2)
cfi=(7)
cfn=(3206)
calls=974 0 
0 10714
0 974
0 4870

fn=(3318)
0 144974
cob=(10)
cfi=(119)
cfn=(3324)
calls=1332 0 
0 5328
0 6660

fn=(1234) 0x00000000000bc184
cfn=(1230)
calls=1 0 
0 5
0 13

fn=(1242) 0x00000000000537e8
cfn=(1234)
calls=1 0 
0 18
0 5

fn=(3240) 0x00000000000abd96
cob=(4)
cfi=(140)
cfn=(2042) 0x00000000010f51ed
calls=1 0 
0 10556
0 9
cfn=(3246)
calls=1 0 
0 178
0 7
cob=(4)
cfi=(140)
cfn=(3278)
calls=1 0 
0 9
0 2
cfn=(3284)
calls=1 0 
0 319
0 4
cob=(4)
cfi=(140)
cfn=(3374)
calls=1 0 
0 7248
0 6
cob=(4)
cfi=(140)
cfn=(3278)
calls=1 0 
0 9
0 4
cob=(4)
cfi=(140)
cfn=(3628)
calls=1 0 
0 420
0 10
cfn=(1882)
calls=1 0 
0 52
0 2
cfn=(1892)
calls=1 0 
0 10
0 16
cob=(4)
cfi=(140)
cfn=(3682)
calls=1 0 
0 27
0 15
cfn=(1922)
calls=1 0 
0 41
0 15

fn=(7096) 0x0000000000089ff0
0 112
cfn=(2698)
calls=14 0 
0 126
0 238
cfn=(7108)
calls=14 0 
0 50013
0 56

ob=(4)
fl=(140)
fn=(13218) 0x00000000011585c0
0 16577
cfn=(1486) 0x000000000102d5a0
calls=121 0 
0 3388
0 31339

fn=(1486)
0 10097
cob=(2)
cfi=(7)
cfn=(914)
calls=10097 0 
0 729875
0 10097

fn=(1574) 0x0000000001207930
0 53739

fn=(1726) 0x0000000001130b40
0 17370

fn=(1966) 0x00000000010a05a0
0 5790
cfn=(1976) 0x0000000001146560
calls=579 0 
0 38793
0 19107

fn=(1986) 0x0000000001142dd0
0 25718

fn=(1996) 0x0000000001145950
0 7348

fn=(2070) 0x0000000001115230
0 22167
cob=(5)
cfi=(139)
cfn=(1882)
calls=821 0 
0 39224
0 2463
cob=(5)
cfi=(139)
cfn=(1892)
calls=821 0 
0 8210
0 22167
cfn=(2116) 0x0000000001111790
calls=821 0 
0 521380
0 19298
cfn=(1252) 0x000000000101d810
calls=821 0 
0 2525839
0 9031
cfn=(1844) 0x0000000001110810
calls=821 0 
0 102368
0 8210
cfn=(1870) 0x0000000001111690
calls=821 0 
0 173448
0 22988
cob=(5)
cfi=(139)
cfn=(1922)
calls=821 0 
0 29037
0 17241
cob=(5)
cfi=(139)
cfn=(2696)
calls=821 0 
0 176041
0 3284
cob=(5)
cfi=(139)
cfn=(1814)
calls=821 0 
0 43591
0 5747
cfn=(2206) 0x0000000001114ff0
calls=821 0 
0 2286513
0 5319
cfn=(2084) 0x0000000001110140
calls=821 0 
0 82921
0 821

fn=(2296) 0x0000000001143da0
0 54188

fn=(2920) 0x00000000011360b0
0 3538
cfn=(2928) 0x0000000001135d70
calls=122 0 
0 370782
0 976

fn=(3046) 0x000000000113c140
0 3538

fn=(3304)
0 10176

fn=(3500) 0x000000000105edb0
0 1830
cob=(5)
cfi=(139)
cfn=(3196)
calls=610 0 
0 26840

fn=(3682)
0 1220
cfn=(1908) 0x000000000101cfb0
calls=122 0 
0 1220
0 854

fn=(3744) 0x0000000000d050f0
0 39439

fn=(3964) 0x0000000000d01fa0
0 35013
cob=(5)
cfi=(139)
cfn=(3940)
calls=242 0 
0 35816
0 34537
cob=(5)
cfi=(139)
cfn=(3940)
calls=121 0 
0 17908
0 14999

fn=(4066) 0x0000000000cb4030
0 29887
cfn=(4072) 0x0000000000cb21d0
calls=847 0 
0 717069
0 1210
cfn=(4072)
calls=121 0 
0 93163
0 8228
cfn=(8448) 0x0000000000cc0b50
calls=363 0 
0 3872
0 2662
cfn=(8448)
calls=484 0 
0 1452
0 6171
cfn=(8460) 0x0000000000cb2580
calls=484 0 
0 2793562
0 1936
cfn=(9490) 0x00000000010c9b60
calls=484 0 
0 4775507
0 6292
cfn=(4072)
calls=726 0 
0 238370
0 3630

fn=(4416) 0x000000000110f750
0 6534

fn=(9204) 0x0000000000dea8d0
0 42350
cfn=(2122) 0x0000000001021a50
calls=1694 0 
0 465850
0 35574

fn=(9222) 0x0000000000dea7f0
0 46706

fn=(4588)
0 114466
cfn=(4620) 0x0000000000c82e40
calls=1210 0 
0 135021
0 6050
cfn=(4620)
calls=1210 0 
0 382935
0 63404
cfn=(4604) 0x0000000000c6e100
calls=2420 0 
0 91960
0 13310
cfn=(5370) 0x0000000001034420
calls=242 0 
0 293633
0 1936
cfn=(3918) 0x0000000000d051a0
calls=242 0 
0 5685733
0 968

fn=(4684) 0x000000000109dc50
0 13623

fn=(4800) 0x0000000000d02f90
0 20821
cob=(5)
cfi=(139)
cfn=(4842)
calls=61 0 
0 10126
0 1330
cob=(5)
cfi=(139)
cfn=(3940)
calls=302 0 
0 43409
0 5436
cob=(5)
cfi=(139)
cfn=(3940)
calls=302 0 
0 141124
0 4202641
cob=(5)
cfi=(139)
cfn=(4842)
calls=302 0 
0 77198
0 1812
cfn=(3964)
calls=302 0 
0 29544
0 786
cfn=(5512) 0x0000000000d02530
calls=242 0 
0 9196
0 1210
cob=(5)
cfi=(139)
cfn=(4940)
calls=242 0 
0 26620
0 484
cob=(5)
cfi=(139)
cfn=(4940)
calls=242 0 
0 26620
0 242

fn=(4988)
0 2299
cob=(5)
cfi=(139)
cfn=(3896)
calls=121 0 
0 22869
0 1089
cfn=(4742) 0x0000000000d03f70
calls=121 0 
0 79581
0 1210
cfn=(4028) 0x0000000000c555e0
calls=121 0 
0 1122887
0 1573
cob=(5)
cfi=(139)
cfn=(4940)
calls=121 0 
0 13310

fn=(5174) 0x000000000101d930
0 1936
cob=(5)
cfi=(139)
cfn=(4940)
calls=242 0 
0 83235

fn=(5242)
0 9922
cfn=(5258) 0x0000000000d03bc0
calls=242 0 
0 139876
0 5566
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 2904

fn=(5748) 0x00000000011d9560
0 484

fn=(5880)
0 5082
cfn=(5888) 0x0000000000c70eb0
calls=242 0 
0 4598
0 1936
cfn=(5906) 0x0000000000c86df0
calls=242 0 
0 230088
0 6292
cfn=(4604)
calls=242 0 
0 9196
0 968

fn=(6238) 0x0000000001030240
0 6640
cfn=(2492) 0x000000000102d5c0
calls=415 0 
0 11620
0 10790
cfn=(6246) 0x000000000102ea60
calls=415 0 
0 12007
0 1660
cfn=(6266) 0x000000000102ee60
calls=415 0 
0 4565
0 6600
cfn=(6282) 0x000000000102fa80
calls=415 0 
0 656413
0 5179

fn=(7832) 0x000000000102d7a0
0 39
cob=(5)
cfi=(139)
cfn=(3940)
calls=13 0 
0 1924

fn=(7860) 0x00000000010eb7b0
0 299
cfn=(6586) 0x00000000013dd7e0
calls=13 0 
0 377
0 604
cfn=(6464) 0x00000000013ddb00
calls=13 0 
0 845
0 104
cfn=(7884) 0x00000000013dcee0
calls=13 0 
0 2145
0 221

fn=(7884)
0 39
cob=(5)
cfi=(139)
cfn=(4940)
calls=13 0 
0 1430
0 312
cob=(2)
cfi=(7)
cfn=(7820) getpagesize
calls=13 0 
0 65
0 13
0 104
cob=(2)
cfi=(7)
cfn=(7902) munmap
calls=13 0 
0 65
0 13
0 104

fn=(8198) 0x0000000001040690
0 36784

fn=(8358) 0x0000000000deb160
0 14036

fn=(8488) 0x0000000001043ea0
0 9680
cob=(5)
cfi=(139)
cfn=(1892)
calls=484 0 
0 4840
0 1936
cfn=(8492) 0x0000000001052c80
calls=484 0 
0 3388
0 2420
cfn=(8498)
calls=484 0 
0 3872
0 2904
cfn=(2048) 0x00000000010eb5a0
calls=484 0 
0 968
0 13880
cfn=(8518) 0x0000000001042030
calls=324 0 
0 134784
0 3872
cfn=(8644) 0x0000000000cc2380
calls=484 0 
0 234619
0 7744
cfn=(8664) 0x000000000134ced0
calls=484 0 
0 2904
0 5324
cfn=(8670) 0x0000000001042340
calls=484 0 
0 4356
0 6284
cfn=(8518)
calls=160 0 
0 66560
0 1288
cfn=(8448)
calls=242 0 
0 726
0 1210
cfn=(8448)
calls=121 0 
0 1452
0 363

fn=(8670)
0 4356

fn=(8972) 0x0000000000dec7c0
0 3993
cfn=(8980) 0x0000000000a7eef0
calls=363 0 
0 5203
0 15004
cfn=(8976) 0x0000000000debde0
calls=363 0 
0 21901
0 9075

fn=(9276) 0x0000000001203dc0
0 67760

fn=(9990) 0x00000000010fa450
0 2904

fn=(10070) 0x0000000000d70c90
0 4356

fn=(10144) 0x0000000001142590
0 26136
cfn=(10146) 0x00000000011552b0
calls=1452 0 
0 376068
0 14520

fn=(10510) 0x0000000000a7ef50
0 2904

fn=(10696) 0x00000000010ccb60
0 57112
cfn=(2492)
calls=484 0 
0 34485
0 14036
cfn=(2484) 0x0000000000a7f6d0
calls=484 0 
0 6292
0 27830
cfn=(2492)
calls=484 0 
0 34485
0 28556
cfn=(8520) 0x0000000001041bb0
calls=484 0 
0 49005
0 30734
cfn=(2524) 0x0000000001207a70
calls=484 0 
0 7744
0 3146
cfn=(2524)
calls=484 0 
0 7744
0 3146
cfn=(2524)
calls=484 0 
0 7744
0 3146
cfn=(2524)
calls=484 0 
0 7744
0 3146
cfn=(2524)
calls=484 0 
0 7744
0 3146
cfn=(2524)
calls=484 0 
0 7744
0 3146
cfn=(2524)
calls=484 0 
0 7744
0 3146
cfn=(2524)
calls=484 0 
0 7744
0 3146
cfn=(2562) 0x0000000001207b50
calls=484 0 
0 12947
0 1936
cfn=(2578) 0x0000000001207bb0
calls=484 0 
0 8712
0 47916

fn=(11118) 0x0000000000d3db30
0 14399

fn=(11380) 0x0000000001103aa0
0 15004
cob=(5)
cfi=(139)
cfn=(1882)
calls=242 0 
0 11132
0 484
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 4356
cfn=(4684)
calls=242 0 
0 726
0 3630
cob=(5)
cfi=(139)
cfn=(1922)
calls=242 0 
0 7986
0 6776

fn=(11540) 0x0000000000d3d710
0 3630

fn=(11680) 0x0000000000deb130
0 2904

fn=(11912) 0x0000000000d396b0
0 19360
cfn=(13170) 0x0000000000d39910
calls=363 0 
0 23595
cfn=(11920) 0x0000000000d38e40
calls=242 0 
0 3388
0 6050

fn=(11954) 0x00000000011a8bf0
0 5808
cfn=(11958) 0x00000000011a73e0
calls=363 0 
0 2904
0 2178
cfn=(11970) 0x000000000119da10
calls=363 0 
0 268983
0 5808
cfn=(12216) 0x0000000000de9940
calls=363 0 
0 3267
0 1815
cfn=(12224) 0x00000000011a6df0
calls=363 0 
0 7623
0 13431

fn=(12254) 0x00000000011a88e0
0 20570

fn=(12358) 0x0000000000d3d9f0
0 12584

fn=(12414) 0x00000000011f1790
0 9680

fn=(12620) 0x00000000011a9e70
0 6776

fn=(12698) 0x00000000010fe250
0 4598

fn=(12802) 0x00000000010c9bc0
0 968
cfn=(12804) 0x00000000011190c0
calls=242 0 
0 4840
0 726
cfn=(12804)
calls=242 0 
0 4840
0 484
cfn=(12812) 0x0000000000d3e4f0
calls=242 0 
0 39688
0 726

fn=(13066) 0x00000000011f7ab0
0 93170
cfn=(13122) 0x00000000011f77f0
calls=242 0 
0 29766
0 726

fn=(13396) 0x0000000001042370
0 6776

fn=(13856)
0 18513

fn=(13926)
0 13794
cfn=(13944) 0x0000000000dfe870
calls=363 0 
0 934604
0 1815
cfn=(14302) 0x0000000000dfe1d0
calls=363 0 
0 123662
0 1089
cfn=(14348) 0x0000000000dfd210
calls=363 0 
0 10890
0 10527
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356

fn=(14002) 0x0000000000d440e0
0 13794

fn=(14100) 0x0000000000cc7710
0 5445
cfn=(14030) 0x0000000000d44000
calls=363 0 
0 5808
0 9317
cfn=(14044) 0x0000000000f10fd0
calls=363 0 
0 2541
0 2783

fn=(14348)
0 10890

fn=(14816) 0x0000000000dc04a0
0 38720

fn=(17070) 0x00000000012041d0
0 484

fn=(17160) 0x0000000001203f70
0 4114
cfn=(9276)
calls=121 0 
0 9680
0 968
cfn=(9316) 0x0000000001202fd0
calls=121 0 
0 9559
0 1210
cfn=(2296)
calls=121 0 
0 4598
0 1815
cfn=(2308) 0x000000000113c210
calls=121 0 
0 24563
0 2299

fn=(17590) 0x00000000011d0860
0 3872
cfn=(4280) 0x00000000011cfc20
calls=121 0 
0 1121231
0 605

fn=(17656)
0 1694

fn=(17752) 0x0000000000d58bd0
0 1936
cfn=(17762) 0x0000000000d56680
calls=121 0 
0 1815
0 2299

fn=(18000) 0x000000000113f000
0 41300
cfn=(1644) 0x000000000113bcd0
calls=1050 0 
0 7350
0 2100

fn=(18714)
0 968

fn=(19052) 0x00000000010fc520
0 7018

fn=(19764) 0x000000000102e530
0 1512
cfn=(6322) 0x00000000010a6660
calls=216 0 
0 648
0 864

fn=(20500) 0x000000000102eba0
0 6

fn=(13170)
0 7623
cfn=(2492)
calls=363 0 
0 10164
0 5808

fn=(1348) 0x000000000113e9e0
0 2895
cfn=(1350) 0x000000000113e950
calls=579 0 
0 1168679
0 4053

fn=(1606) 0x000000000113dd40
0 101928
cfn=(1616) 0x000000000113bd70
calls=1644 0 
0 123300
0 8220
cfn=(1644)
calls=1644 0 
0 11508
0 3288

fn=(1768) 0x000000000113ec40
0 66606
cfn=(1486)
calls=1306 0 
0 185465
0 1306

fn=(1870)
0 10686
cfn=(1876) 0x0000000001111540
calls=822 0 
0 157206
0 5754

fn=(1876)
0 14796
cob=(5)
cfi=(139)
cfn=(1882)
calls=822 0 
0 37812
0 1644
cob=(5)
cfi=(139)
cfn=(1892)
calls=822 0 
0 8220
0 23237
cfn=(1904) 0x000000000101d0c0
calls=1185 0 
0 16590
0 19561
cob=(5)
cfi=(139)
cfn=(1922)
calls=822 0 
0 27126
0 8220

fn=(1908)
0 1220

fn=(1974) 0x000000000109fc30
0 12580
cfn=(1976)
calls=1258 0 
0 84286
0 17621

fn=(2134) 0x0000000001021570
0 118222
cfn=(2138) 0x0000000001026da0
calls=4547 0 
0 45470
0 22544
cfn=(2174) 0x000000000101dd60
calls=1452 0 
0 18876
0 29040
cfn=(8836) 0x0000000001021280
calls=1452 0 
0 53724
0 107740

fn=(2236) 0x00000000011c0b60
0 179355

fn=(2524)
0 230928

fn=(2858) 0x0000000001145620
0 2684

fn=(2978) 0x00000000011ff310
0 3538
cfn=(2980) 0x00000000011fe850
calls=122 0 
0 45994
0 244

fn=(2992) 0x00000000011fe740
0 6100

fn=(3374)
0 610
cfn=(3596) 0x000000000115a9b0
calls=122 0 
0 6832
0 2196
cfn=(1486)
calls=122 0 
0 17080
0 3294
cfn=(2070)
calls=122 0 
0 657458
0 2806
cob=(5)
cfi=(139)
cfn=(1882)
calls=122 0 
0 6344
0 244
cob=(5)
cfi=(139)
cfn=(1892)
calls=122 0 
0 1220
0 1586
cfn=(1966)
calls=122 0 
0 13420
0 1830
cob=(5)
cfi=(139)
cfn=(1922)
calls=122 0 
0 5002
0 3538
cob=(5)
cfi=(139)
cfn=(3414)
calls=122 0 
0 53680
0 488
cob=(5)
cfi=(139)
cfn=(3452)
calls=122 0 
0 26352
0 488
cfn=(3494) 0x00000000011466f0
calls=122 0 
0 8052
0 366
cob=(5)
cfi=(139)
cfn=(3506)
calls=122 0 
0 22984
0 976
cfn=(3536) 0x00000000011468c0
calls=122 0 
0 27450
0 854
cfn=(3586) 0x00000000011466b0
calls=122 0 
0 7442
0 3416
cfn=(3384) 0x000000000110fe70
calls=122 0 
0 2684
0 366
cfn=(3394) 0x00000000010f3790
calls=122 0 
0 3904
0 1342

fn=(3586)
0 976
cfn=(3500)
calls=122 0 
0 5734
0 732

fn=(3606) 0x00000000010d0bd0
0 6384
cfn=(1486)
calls=456 0 
0 67032
0 12433
cfn=(2070)
calls=456 0 
0 2850042
0 10488
cob=(5)
cfi=(139)
cfn=(1882)
calls=456 0 
0 21702
0 912
cob=(5)
cfi=(139)
cfn=(1892)
calls=456 0 
0 4560
0 5928
cfn=(1966)
calls=456 0 
0 50160
0 6840
cob=(5)
cfi=(139)
cfn=(1922)
calls=456 0 
0 16016
0 7417

fn=(4042) 0x0000000001040b40
0 221196

fn=(9196) 0x0000000000f0e750
0 2904
cfn=(9198) 0x0000000000deab20
calls=484 0 
0 493801
0 6292

fn=(20170) 0x000000000113bba0
0 440

fn=(5906)
0 7018
cfn=(4912) 0x0000000000c6e1a0
calls=242 0 
0 1936
0 3146
cfn=(5162) 0x0000000000ca1b60
calls=242 0 
0 968
0 3630
cfn=(5124) 0x0000000001037e10
calls=242 0 
0 4356
0 15488
cfn=(4604)
calls=242 0 
0 9196
0 1210
cfn=(5966) 0x0000000000ca1d30
calls=242 0 
0 164748
0 484
cfn=(5162)
calls=242 0 
0 968
0 8470
cfn=(5918) 0x0000000000cad610
calls=242 0 
0 5082
0 3388

fn=(5918)
0 11494
cfn=(5926) 0x0000000000f0ff10
calls=821 0 
0 1642
0 4105

fn=(6312) 0x000000000102e640
0 10675
cob=(5)
cfi=(139)
cfn=(3896)
calls=30 0 
0 6570
0 120
cfn=(6346) 0x000000000102e4a0
calls=30 0 
0 450
0 660
cfn=(6362) 0x00000000010a66e0
calls=30 0 
0 66007
0 183
cfn=(20542) 0x000000000102f120
calls=2 0 
0 50
0 262
cfn=(6672) 0x000000000102e560
calls=28 0 
0 616
0 112
cfn=(6680) 0x000000000102e510
calls=28 0 
0 196
0 168
cob=(5)
cfi=(139)
cfn=(4940)
calls=28 0 
0 3080
0 1536
cfn=(6320) 0x000000000102e5d0
calls=321 0 
0 8838
0 702

fn=(6322)
0 1695

fn=(6546) 0x00000000010eb700
0 1530
cfn=(6464)
calls=30 0 
0 1950
0 270

fn=(6608) 0x00000000013dcde0
0 5568

fn=(7050) 0x00000000010a2490
0 7620

fn=(8264) 0x0000000000f0fc10
0 139392
cfn=(2484)
calls=484 0 
0 6292
0 3872
cfn=(8308) 0x0000000000a7f500
calls=484 0 
0 2904
0 73326
cfn=(8340) 0x0000000000dea240
calls=726 0 
0 13068
0 3872
cfn=(8348) 0x0000000000dea010
calls=605 0 
0 9438
0 242
cfn=(8348)
calls=121 0 
0 3630
0 6897
cfn=(8356) 0x0000000000de9f10
calls=605 0 
0 10164
0 847
cfn=(8356)
calls=121 0 
0 2057
0 6534
cfn=(8372) 0x0000000000de9f00
calls=726 0 
0 80465
0 77561

fn=(8478) 0x000000000101ead0
0 13552
cfn=(3278)
calls=484 0 
0 4356
0 968
cfn=(8488)
calls=484 0 
0 515374
0 9680

fn=(8962) 0x0000000000dec830
0 16940
cfn=(8340)
calls=1210 0 
0 20328
0 13068
cfn=(2484)
calls=968 0 
0 12584
0 10648
cfn=(8980)
calls=968 0 
0 14520
0 9680
cfn=(8972)
calls=968 0 
0 39204
0 3146
cfn=(8348)
calls=363 0 
0 11858
0 2178
cfn=(9026) 0x0000000000deba00
calls=363 0 
0 5929
0 13068
cfn=(9026)
calls=847 0 
0 5929
0 1331
cfn=(2484)
calls=242 0 
0 3146
0 1210
cfn=(8972)
calls=242 0 
0 15972
0 242

fn=(10106) 0x0000000001142700
0 15972

fn=(10156) 0x00000000011550a0
0 58080

fn=(10928)
0 26378

fn=(11042)
0 4598
cfn=(3278)
calls=242 0 
0 2178
0 484
cfn=(9370) 0x00000000010a5dc0
calls=242 0 
0 77440
0 1694
cfn=(3278)
calls=242 0 
0 2178
0 7502

fn=(11296) 0x0000000000d41f30
0 12100

fn=(11332) 0x0000000000d3f930
0 12342

fn=(11358) 0x000000000110b660
0 4840
cob=(5)
cfi=(139)
cfn=(1882)
calls=242 0 
0 12584
0 484
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 12342
cfn=(11380)
calls=242 0 
0 52514
0 12584
cob=(5)
cfi=(139)
cfn=(1922)
calls=242 0 
0 9922
0 4114
cfn=(5734) 0x00000000011c4480
calls=242 0 
0 3146
0 484

fn=(11588) 0x0000000000d3e9d0
0 7260
cfn=(11592) 0x00000000011a9220
calls=363 0 
0 2662
0 4356
cfn=(11622) 0x00000000011a8870
calls=363 0 
0 7502
0 10527
cfn=(11642) 0x00000000011a68a0
calls=363 0 
0 726
0 2541
cfn=(5918)
calls=363 0 
0 7623
0 2904
cfn=(11894) 0x0000000000d39fd0
calls=363 0 
0 39446
0 2178
cfn=(11934) 0x000000000120b710
calls=363 0 
0 726
0 1815
cfn=(11940) 0x00000000010aa9c0
calls=363 0 
0 7623
0 726
cfn=(11540)
calls=363 0 
0 2178
0 2178
cfn=(11954)
calls=363 0 
0 311817
0 3630
cfn=(12244) 0x00000000011aa1f0
calls=363 0 
0 273823
0 13068
cfn=(12438) 0x00000000011b14f0
calls=242 0 
0 166012
0 2783
cfn=(12438)
calls=121 0 
0 9922
0 7986
cfn=(11650) 0x0000000000deb040
calls=363 0 
0 2178
0 1815
cfn=(11656) 0x0000000000deb070
calls=363 0 
0 2904
0 1815
cfn=(11662) 0x0000000000deb0a0
calls=363 0 
0 4598
0 1815
cfn=(11668) 0x0000000000deb0d0
calls=363 0 
0 2904
0 1815
cfn=(11674) 0x0000000000deb100
calls=363 0 
0 2904
0 1815
cfn=(11680)
calls=363 0 
0 2904
0 8712
cfn=(11696) 0x0000000000efec20
calls=363 0 
0 341704
0 1694
cfn=(12414)
calls=242 0 
0 9680
0 1452
cfn=(12400) 0x00000000011f16f0
calls=242 0 
0 5324
0 1452
cfn=(12428) 0x00000000011f18b0
calls=242 0 
0 14036
0 726
cfn=(11606) 0x0000000000cf9280
calls=242 0 
0 151734
0 242

fn=(11606)
0 151734

fn=(11674)
0 2904

fn=(11700) 0x00000000011a7d70
0 9075

fn=(11810) 0x00000000011a7230
0 14520

fn=(12070) 0x00000000010aa600
0 6171

fn=(12244)
0 9075
cfn=(12254)
calls=242 0 
0 20570
0 58564
cfn=(12316) 0x0000000000f13c60
calls=363 0 
0 4719
0 15972
cfn=(12358)
calls=363 0 
0 12584
0 1815
cfn=(12386) 0x0000000000de9950
calls=363 0 
0 3267
0 7865
cfn=(12330) 0x00000000011cf4b0
calls=242 0 
0 137698
0 1694

fn=(12400)
0 5324

fn=(12494) 0x00000000011c3730
0 15609
cfn=(12128) 0x00000000011bf850
calls=363 0 
0 9438
0 7260

fn=(12536) 0x00000000011c3c80
0 14520
cfn=(12542) 0x00000000010adce0
calls=363 0 
0 6534
0 2178
cfn=(12088) 0x0000000001087a60
calls=363 0 
0 48642
0 2904
cfn=(12128)
calls=363 0 
0 24321
0 13068

fn=(12668) 0x00000000011ce870
0 7986
cfn=(12674) 0x00000000011cd320
calls=242 0 
0 47674
0 1694

fn=(13490) 0x000000000118e800
0 14157
cfn=(13532) 0x0000000000f0fd10
calls=121 0 
0 111562
0 3751
cfn=(2484)
calls=121 0 
0 1573
0 2299
cfn=(13562) 0x000000000118e1a0
calls=121 0 
0 41745
0 21417
cfn=(13660) 0x000000000118e380
calls=121 0 
0 53240
0 16698
cfn=(13510) 0x000000000113fbe0
calls=121 0 
0 17762
0 363
cfn=(13510)
calls=121 0 
0 17763
0 3267

fn=(13660)
0 3872
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3630
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 2178
cfn=(2484)
calls=121 0 
0 1573
0 4961
cfn=(13578) 0x000000000118c8d0
calls=121 0 
0 23111
0 1210

fn=(14186) 0x0000000000d4eed0
0 10890
cfn=(14044)
calls=363 0 
0 2541
0 726
cfn=(14052) 0x0000000000d44530
calls=363 0 
0 8712
0 4719
cfn=(14030)
calls=363 0 
0 5082
0 1089

fn=(15402) 0x0000000001038c30
0 2002

fn=(15492) 0x00000000011dd390
0 897
cfn=(15592) 0x00000000011dc540
calls=39 0 
0 2613
0 1950
cob=(7)
cfi=(6)
cfn=(15682)
calls=39 0 
0 10985
0 858
cfn=(15602) 0x00000000011403b0
calls=39 0 
0 3549
0 429
cfn=(15654) 0x0000000001209a00
calls=39 0 
0 1482
0 1833
cfn=(15706) 0x000000000113fc60
calls=39 0 
0 1092
0 715
cfn=(15498) 0x000000000111bbc0
calls=26 0 
0 7566
0 520

fn=(15654)
0 3040
cfn=(15656) 0x00000000012099b0
calls=160 0 
0 2720
0 320

fn=(15798) 0x0000000000db1420
0 1694
cfn=(4742)
calls=242 0 
0 157784
0 484

fn=(16276) 0x0000000000a7f030
0 5324

fn=(17130) 0x0000000001209620
0 2178

fn=(17246) 0x00000000011a7350
0 1936
cfn=(17250) 0x0000000000f10f90
calls=121 0 
0 3267
0 1331
cfn=(11476) 0x00000000010c9fe0
calls=121 0 
0 3267
0 605

fn=(17252) 0x0000000000de9f40
0 1573

fn=(17644)
0 1694
cfn=(14386) 0x0000000000e51020
calls=121 0 
0 31339
0 242

fn=(17822) 0x00000000011be0b0
0 7786

fn=(18750)
0 1089

fn=(18948) 0x00000000010d0a60
0 7474

fn=(19030) 0x000000000102f590
0 2904

fn=(19674) 0x00000000010a4800
0 10880
cfn=(1974)
calls=436 0 
0 39679
0 8090
cfn=(6834) 0x000000000109d390
calls=240 0 
0 1680
0 30086
cfn=(6850) 0x000000000109d3d0
calls=480 0 
0 3360
0 4304
cfn=(6872) 0x00000000010a28b0
calls=236 0 
0 280581
0 7570
cfn=(19678) 0x00000000010a27b0
calls=254 0 
0 21082
0 7630
cfn=(3080) 0x00000000011465b0
calls=214 0 
0 21828
0 1498
cfn=(3606)
calls=214 0 
0 1244731
0 3488
cfn=(1974)
calls=436 0 
0 39682
0 3714

fn=(19950) 0x000000000109da40
0 5120
cob=(5)
cfi=(139)
cfn=(3896)
calls=256 0 
0 67483
0 44544

fn=(1904)
0 27246

fn=(1976)
0 9185
cfn=(1980) 0x000000000113bf50
calls=1837 0 
0 93687
0 20207

fn=(2422) 0x00000000010cb9a0
0 153990
cfn=(2492)
calls=1305 0 
0 92776
0 37845
cfn=(2484)
calls=1305 0 
0 16965
0 75448
cfn=(2492)
calls=1305 0 
0 92776
0 93960
cfn=(2524)
calls=1305 0 
0 20880
0 8072
cfn=(2524)
calls=1305 0 
0 20880
0 8072
cfn=(2524)
calls=1305 0 
0 20880
0 8072
cfn=(2524)
calls=1305 0 
0 20880
0 8072
cfn=(2524)
calls=1305 0 
0 20880
0 8072
cfn=(2524)
calls=1305 0 
0 20880
0 8072
cfn=(2524)
calls=1305 0 
0 20880
0 8072
cfn=(2524)
calls=1305 0 
0 20880
0 8072
cfn=(2562)
calls=1305 0 
0 35114
0 5220
cfn=(2578)
calls=1305 0 
0 23490
0 129195

fn=(2562)
0 48061

fn=(2980)
0 3660
cfn=(2492)
calls=122 0 
0 7198
0 732
cfn=(2492)
calls=122 0 
0 7198
0 3538
cfn=(2992)
calls=122 0 
0 6100
0 610
cfn=(3000) 0x00000000011fc240
calls=122 0 
0 6344
0 10614

fn=(3130) 0x0000000001149870
0 3782

fn=(3278)
0 16353

fn=(3384)
0 2684

fn=(4266) 0x000000000101cd90
0 2181

fn=(4328) 0x00000000011d1d40
0 9100
cfn=(4266)
calls=364 0 
0 1092
0 34098
cfn=(4376) 0x0000000000d05ac0
calls=364 0 
0 4732
0 2179
cfn=(4354) 0x000000000110f830
calls=121 0 
0 1210
0 1580
cfn=(4354)
calls=122 0 
0 1220
0 1708

fn=(4530)
0 5082
cfn=(4188) 0x0000000000d08d00
calls=121 0 
0 15246
0 15851
cfn=(4280)
calls=121 0 
0 27467
0 6655
cfn=(4416)
calls=121 0 
0 2178
0 7502
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3388
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 14157
cfn=(4266)
calls=121 0 
0 363
0 847

fn=(9198)
0 2904
cfn=(9200) 0x0000000000deaae0
calls=484 0 
0 425557
0 23716
cfn=(9316)
calls=484 0 
0 38236
0 3388

fn=(5132) 0x00000000010371d0
0 16672
cfn=(5918)
calls=216 0 
0 4536
0 864

fn=(5394) 0x0000000001040460
0 726
cob=(5)
cfi=(139)
cfn=(3940)
calls=242 0 
0 35816

fn=(6320)
0 3531
cfn=(6322)
calls=321 0 
0 963
0 4344

fn=(6738) 0x000000000102f4c0
0 11078
cfn=(19758) 0x000000000102f350
calls=1 0 
0 1075
0 7911

fn=(6850)
0 23814

fn=(6872)
0 3458
cob=(5)
cfi=(139)
cfn=(4940)
calls=247 0 
0 33765
0 12080
cfn=(6834)
calls=247 0 
0 1729
0 27324
cfn=(6916) 0x00000000010a15b0
calls=22 0 
0 12452
0 745
cfn=(20440) 0x000000000103e400
calls=1 0 
0 486
0 6175
cfn=(7004) 0x000000000102f980
calls=247 0 
0 45994
0 1729
cfn=(6850)
calls=494 0 
0 3458
0 4358
cfn=(6910) 0x00000000010a23d0
calls=225 0 
0 136564
0 2805

fn=(7994) 0x00000000010329a0
0 6567
cfn=(5162)
calls=269 0 
0 1076
0 1614
cfn=(8002) 0x0000000000ca1b70
calls=269 0 
0 4842
0 4546

fn=(8382) 0x0000000000a7f610
0 16456

fn=(8870) 0x0000000001052ca0
0 3872

fn=(8902) 0x0000000000de9ff0
0 1452

fn=(9260) 0x0000000000dea4e0
0 38115

fn=(9574) 0x0000000000c66210
0 8712
cfn=(1486)
calls=484 0 
0 7260
0 7018
cfn=(15994) 0x0000000000a7f7f0
calls=363 0 
0 17424
0 28314
cfn=(5760) 0x0000000001033d30
calls=484 0 
0 103092
0 19118
cfn=(2484)
calls=363 0 
0 4719
0 6171
cfn=(9590) 0x0000000000f0fcf0
calls=484 0 
0 288464
0 1452
cfn=(9602) 0x0000000000c8e0d0
calls=484 0 
0 5324
0 1573

fn=(9986) 0x000000000105f8b0
0 15246
cfn=(9988) 0x000000000110d1a0
calls=726 0 
0 120516
0 7986
cfn=(10070)
calls=726 0 
0 4356
0 14520
cfn=(10080) 0x000000000105f540
calls=726 0 
0 1099164
0 19602
cob=(5)
cfi=(139)
cfn=(1882)
calls=726 0 
0 37752
0 1452
cob=(5)
cfi=(139)
cfn=(1892)
calls=726 0 
0 7260
0 13068
cfn=(10240) 0x00000000010fd010
calls=726 0 
0 27588
0 17424
cob=(5)
cfi=(139)
cfn=(1922)
calls=726 0 
0 29766
0 15246

fn=(10080)
0 45738
cfn=(2492)
calls=726 0 
0 164802
0 8712
cfn=(10102) 0x00000000011428e0
calls=726 0 
0 431970
0 9438
cfn=(10102)
calls=726 0 
0 423258
0 15246

fn=(10102)
0 23232
cfn=(10104) 0x00000000011427f0
calls=1452 0 
0 162624
0 68244
cfn=(10142) 0x0000000001142650
calls=1452 0 
0 474804
0 23232
cfn=(10156)
calls=1452 0 
0 29040
0 74052

fn=(11668)
0 2904

fn=(11876) 0x0000000000deba40
0 2541
cob=(2)
cfi=(7)
cfn=(12)
calls=363 0 
0 9438
0 363

fn=(11998) 0x0000000001062420
0 50699

fn=(12092) 0x0000000000c8d9e0
0 132616

fn=(12128)
0 72358
cfn=(12138) 0x00000000011bf730
calls=1331 0 
0 33275
0 4114

fn=(12138)
0 33275

fn=(12158) 0x000000000119d6b0
0 24563
cfn=(12172) 0x000000000119c620
calls=484 0 
0 21054
0 9559

fn=(12172)
0 21054

fn=(12316)
0 4719

fn=(12438)
0 7986
cfn=(12446) 0x00000000011a17d0
calls=242 0 
0 24442
0 21054
cfn=(12536)
calls=242 0 
0 74778
0 7986
cfn=(12584) 0x0000000000f10fe0
calls=363 0 
0 6897
0 3993
cfn=(12494)
calls=242 0 
0 21538
0 2662
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 2178

fn=(12606) 0x00000000011ab2b0
0 6534

fn=(14140) 0x0000000000cc91c0
0 11253
cfn=(14044)
calls=363 0 
0 2541
0 726
cfn=(14052)
calls=363 0 
0 8712
0 5082
cfn=(14030)
calls=363 0 
0 5082
0 726

fn=(14278) 0x0000000000ca0e30
0 4356
cfn=(14030)
calls=363 0 
0 5082
0 8349
cfn=(14044)
calls=363 0 
0 2541
0 2904

fn=(14616) 0x0000000000e3a010
0 59290
cob=(5)
cfi=(139)
cfn=(1892)
calls=1694 0 
0 16940
0 20328
cob=(5)
cfi=(139)
cfn=(3318)
calls=1694 0 
0 23716
0 8470

fn=(15370) 0x00000000010327b0
0 1729

fn=(16082) 0x0000000000cb1250
0 19360

fn=(16232) 0x0000000000c6ddb0
0 1089
cfn=(16234) 0x0000000000c6d7c0
calls=363 0 
0 2541
0 4719

fn=(16774) 0x00000000011c0db0
0 11495

fn=(16810) 0x000000000114e5f0
0 16698
cfn=(16852) 0x0000000001205040
calls=121 0 
0 694430
0 6655
cfn=(1350)
calls=121 0 
0 11616
0 1089

fn=(17520)
0 1952
cfn=(17386) 0x0000000000d0a840
calls=244 0 
0 92842
0 488

fn=(17706) 0x0000000000d551f0
0 1089

fn=(17888) 0x000000000120b920
0 6870
cfn=(2492)
calls=458 0 
0 27022
0 8066
cfn=(17910) 0x0000000001136740
calls=108 0 
0 9542
0 4744

fn=(18254) 0x00000000011d95d0
0 31595

fn=(18276) 0x0000000001034340
0 7120

fn=(18852) 0x000000000105ce40
0 1573

fn=(18880) 0x000000000136e1e0
0 726

fn=(19014) 0x0000000001140320
0 3388

fn=(19086)
0 1694
cfn=(19088) 0x00000000010f4c00
calls=121 0 
0 30613
0 242
cfn=(19144) 0x00000000010f4810
calls=121 0 
0 3388
0 363
cfn=(19152) 0x00000000010f4c60
calls=121 0 
0 772827
0 242
cfn=(2046) 0x00000000010f4620
calls=121 0 
0 1573
0 847
cfn=(2056) 0x00000000010f5030
calls=121 0 
0 859971
0 242
cfn=(3166) 0x00000000010f48f0
calls=121 0 
0 32549
0 968

fn=(19776) 0x000000000102e390
0 860

fn=(20542)
0 50

fn=(10338) 0x0000000000cc0be0
0 87846
cfn=(10356) 0x0000000000f0d890
calls=363 0 
0 1452
0 18029
cfn=(10356)
calls=726 0 
0 2904
0 14883

fn=(10462) 0x0000000001020840
0 10164
cfn=(8394) 0x0000000000a7efa0
calls=363 0 
0 13068
0 1452
cfn=(8980)
calls=363 0 
0 7986
0 3993
cfn=(10510)
calls=363 0 
0 2904
0 1452
cfn=(8382)
calls=363 0 
0 2904
0 22506
cfn=(2484)
calls=363 0 
0 4719
0 3267
cfn=(10476) 0x0000000000a7f4f0
calls=363 0 
0 3267
0 1815
cfn=(10476)
calls=363 0 
0 3267
0 4719

fn=(1252)
0 11508
cfn=(1256) 0x000000000114e9a0
calls=822 0 
0 2514237
0 2466

fn=(1562) 0x000000000120b440
0 14796
cfn=(1568) 0x000000000113bb30
calls=822 0 
0 4932
0 23016
cfn=(1574)
calls=822 0 
0 17262
0 11508
cfn=(1574)
calls=822 0 
0 17262
0 4932

fn=(1604) 0x000000000113df30
0 50964
cfn=(1616)
calls=822 0 
0 60757
0 4110
cfn=(1644)
calls=822 0 
0 5754
0 4110

fn=(1644)
0 24612

fn=(1980)
0 34903
cfn=(1986)
calls=1837 0 
0 25718
0 5511
cfn=(1996)
calls=1837 0 
0 7348
0 20207

fn=(2046)
0 732
cfn=(2048)
calls=122 0 
0 244
0 610

fn=(2308)
0 496741

fn=(2578)
0 32202

fn=(2598) 0x00000000011c1190
0 296235

fn=(2782) 0x0000000001140cd0
0 610

fn=(2928)
0 2440
cfn=(1350)
calls=122 0 
0 228262
0 4270
cfn=(2940) 0x0000000001133580
calls=122 0 
0 3660
0 1464
cfn=(2948) 0x0000000001130e90
calls=122 0 
0 92842
0 2928
cfn=(3044) 0x000000000120a210
calls=122 0 
0 7076
0 610
cfn=(3072) 0x0000000001145bc0
calls=122 0 
0 27108
0 122

fn=(3044)
0 1098
cfn=(3046)
calls=122 0 
0 3538
0 2440

fn=(3194) 0x0000000001056df0
0 488
cob=(5)
cfi=(139)
cfn=(3196)
calls=122 0 
0 5368
0 488

fn=(3256)
0 13077

fn=(3394)
0 1952
cfn=(3398) 0x0000000001143e90
calls=122 0 
0 1342
0 610

fn=(3840) 0x0000000000db23b0
0 149314

fn=(4188)
0 4356
cfn=(4200) 0x0000000000d059f0
calls=242 0 
0 12342
0 7744
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 3630

fn=(9158) 0x0000000000c56f40
0 6776

fn=(9202) 0x0000000000deaa30
0 11011
cfn=(9204)
calls=847 0 
0 266321
0 5929
cfn=(9204)
calls=847 0 
0 277453
0 3388
cfn=(9222)
calls=847 0 
0 46706
0 2541
cfn=(9244) 0x0000000000dea680
calls=847 0 
0 37752
0 1694
cfn=(9260)
calls=847 0 
0 38115
0 11858

fn=(4604)
0 68970
cob=(5)
cfi=(139)
cfn=(1892)
calls=3630 0 
0 36300
0 32670

fn=(5162)
0 3980

fn=(5168) 0x0000000000ca1c90
0 3388
cfn=(5174)
calls=242 0 
0 85171
0 968

fn=(5568) 0x0000000000d02d50
0 14331
cob=(5)
cfi=(139)
cfn=(4842)
calls=363 0 
0 139382
0 2473739
cob=(5)
cfi=(139)
cfn=(4940)
calls=363 0 
0 65324
0 2904
cob=(5)
cfi=(139)
cfn=(4940)
calls=363 0 
0 39930
0 9609
cob=(5)
cfi=(139)
cfn=(4842)
calls=302 0 
0 188513
0 2469920
cob=(5)
cfi=(139)
cfn=(4940)
calls=302 0 
0 60780
0 906
cob=(5)
cfi=(139)
cfn=(4940)
calls=302 0 
0 33220
0 6586

fn=(5722) 0x00000000011d73e0
0 15730
cob=(5)
cfi=(139)
cfn=(1922)
calls=242 0 
0 9922
0 19118
cob=(5)
cfi=(139)
cfn=(1882)
calls=242 0 
0 12584
0 484
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 19602
cfn=(5748)
calls=242 0 
0 484
0 726
cfn=(5734)
calls=242 0 
0 3146
0 242

fn=(5734)
0 15730

fn=(6082) 0x0000000001037e80
0 5082
cfn=(6088) 0x0000000001035220
calls=242 0 
0 34848
0 968
cfn=(6154) 0x0000000001037060
calls=242 0 
0 1088162
0 2420
cfn=(5132)
calls=242 0 
0 13688
0 2178
cfn=(7980) 0x0000000001036180
calls=242 0 
0 577681
0 2662

fn=(6564) 0x00000000010ef7c0
0 768
cob=(5)
cfi=(139)
cfn=(4940)
calls=15 0 
0 2175
0 130
cob=(5)
cfi=(139)
cfn=(4940)
calls=13 0 
0 1885
0 121
cfn=(6572) 0x00000000010ef3f0
calls=28 0 
0 18402
0 28

fn=(6572)
0 494
cfn=(7860)
calls=13 0 
0 4595
0 303
cfn=(6578) 0x00000000010eb910
calls=29 0 
0 12557
0 941

fn=(6582) 0x00000000013dd120
0 377
cfn=(6586)
calls=29 0 
0 928
0 348
cfn=(6586)
calls=29 0 
0 841
0 174
cfn=(6608)
calls=29 0 
0 5568
0 87

fn=(6804) 0x00000000010a2d10
0 4876
cfn=(1974)
calls=212 0 
0 19292
0 3714
cfn=(6834)
calls=10 0 
0 70
0 4190
cfn=(6850)
calls=20 0 
0 140
0 180
cfn=(6872)
calls=10 0 
0 10860
0 358

fn=(7004)
0 10374
cfn=(7014) 0x000000000102f6d0
calls=247 0 
0 34728
0 892

fn=(7814) 0x00000000013dd1f0
0 195
cob=(2)
cfi=(7)
cfn=(7820)
calls=13 0 
0 65
0 13
0 234
cob=(2)
cfi=(7)
cfn=(7826) mmap
calls=13 0 
0 429
0 13
0 78
cfn=(7832)
calls=13 0 
0 1963
0 520

fn=(8162) 0x0000000000d04010
0 14762

fn=(8282) 0x0000000000f0f480
0 141207
cfn=(2484)
calls=605 0 
0 7865
0 4840
cfn=(8308)
calls=605 0 
0 3630
0 81554
cfn=(8340)
calls=726 0 
0 13068
0 3872
cfn=(8348)
calls=605 0 
0 9438
0 242
cfn=(8348)
calls=121 0 
0 3630
0 6897
cfn=(8356)
calls=605 0 
0 10043
0 847
cfn=(8356)
calls=121 0 
0 1936
0 6534
cfn=(8372)
calls=726 0 
0 86515
0 20570

fn=(8372)
0 21780
cfn=(8378) 0x0000000000a7f640
calls=1452 0 
0 30492
0 8712
cfn=(8394)
calls=1452 0 
0 47553
0 13068
cfn=(8424) 0x0000000000deb9a0
calls=1452 0 
0 29040
0 10890
cfn=(2484)
calls=363 0 
0 4719
0 726

fn=(8466) 0x0000000001026770
0 10164
cob=(5)
cfi=(139)
cfn=(8470)
calls=484 0 
0 5808
0 1936
cfn=(8478)
calls=484 0 
0 543930
0 6292
cob=(5)
cfi=(139)
cfn=(1882)
calls=484 0 
0 25168
0 968
cob=(5)
cfi=(139)
cfn=(1892)
calls=484 0 
0 4840
0 8712
cfn=(8696) 0x000000000101ebd0
calls=484 0 
0 2134440
0 8712
cob=(5)
cfi=(139)
cfn=(1922)
calls=484 0 
0 19844
0 7744

fn=(8520)
0 37752
cfn=(8198)
calls=605 0 
0 17424
0 1936
cfn=(8198)
calls=484 0 
0 9196
0 10648
cfn=(2484)
calls=363 0 
0 4719
0 726
cfn=(15994)
calls=363 0 
0 17424
0 195778
cfn=(8212) 0x00000000010416a0
calls=968 0 
0 166496
0 1210

fn=(8664)
0 2904

fn=(8808) 0x000000000108c6c0
0 22990

fn=(8836)
0 53724

fn=(9076) 0x0000000000c6dd70
0 8712
cfn=(8976)
calls=968 0 
0 58322
0 14520
cfn=(9080) 0x0000000000c57ae0
calls=968 0 
0 39930
0 2904
cfn=(9084) 0x0000000000f0e8c0
calls=968 0 
0 114466
0 7744

fn=(9360) 0x00000000010420a0
0 4356

fn=(9370)
0 10164
cfn=(9372) 0x00000000010a5360
calls=726 0 
0 189728
0 3630
cfn=(8808)
calls=726 0 
0 13794
0 4356

fn=(9496) 0x0000000000cc24e0
0 16456
cfn=(8448)
calls=484 0 
0 5082
0 1936
cfn=(8448)
calls=484 0 
0 1452
0 190696
cfn=(9524) 0x0000000000cb16d0
calls=7260 0 
0 53361
0 58080
cfn=(16082)
calls=2420 0 
0 19360
0 12947
cfn=(4088) 0x0000000000d01690
calls=726 0 
0 4356
0 206910
cfn=(2492)
calls=3630 0 
0 101640
0 14520
cfn=(9688) 0x0000000000cb2560
calls=3630 0 
0 26136
0 64251
cfn=(8448)
calls=363 0 
0 2178
0 28314
cfn=(9722) 0x0000000000cc22f0
calls=242 0 
0 194326
0 7986
cfn=(8898) 0x0000000000f0fba0
calls=484 0 
0 6292
0 2420
cfn=(8898)
calls=484 0 
0 6292
0 968
cfn=(9076)
calls=484 0 
0 123420
0 15246
cfn=(4200)
calls=363 0 
0 13431
0 3388
cfn=(9556) 0x0000000000cc0b80
calls=484 0 
0 10648
0 4356
cfn=(9574)
calls=484 0 
0 498641
0 14641
cfn=(9636) 0x0000000000c323e0
calls=484 0 
0 22748
0 78892
cfn=(9986)
calls=726 0 
0 1430946
0 5808
cfn=(10272) 0x0000000001026960
calls=726 0 
0 67760
0 4356
cfn=(10338)
calls=363 0 
0 106359
0 4356
cfn=(10398) 0x0000000001060410
calls=363 0 
0 283503
0 7139
cob=(5)
cfi=(139)
cfn=(1892)
calls=484 0 
0 4840
0 8833
cfn=(10338)
calls=605 0 
0 18755
0 4235

fn=(9688)
0 26136

fn=(11532) 0x0000000001155b20
0 5566

fn=(11662)
0 4598

fn=(11732) 0x00000000011af620
0 88935
cfn=(11810)
calls=605 0 
0 14520
0 4235
cfn=(11828) 0x00000000011ae680
calls=605 0 
0 57475
0 166133

fn=(11828)
0 66066

fn=(12224)
0 7623

fn=(12804)
0 9680

fn=(12986) 0x000000000134ce90
0 242

fn=(13034) 0x0000000001156010
0 383812

fn=(13122)
0 9196
cfn=(2484)
calls=242 0 
0 3146
0 484
cfn=(8980)
calls=242 0 
0 3630
0 13310

fn=(13456) 0x000000000118c3a0
0 2541
cfn=(13460) 0x000000000112d810
calls=121 0 
0 242
0 242

fn=(13460)
0 242

fn=(13532)
0 847
cfn=(9202)
calls=121 0 
0 109989
0 726

fn=(13578)
0 3630
cfn=(13580) 0x0000000000c8dc80
calls=242 0 
0 34001
0 4840

fn=(13888)
0 1210

fn=(13964) 0x0000000000dfe090
0 52998
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 4719
cfn=(14002)
calls=363 0 
0 6897
0 3630
cfn=(14012) 0x0000000000ddf8e0
calls=363 0 
0 106843
0 38841
cob=(5)
cfi=(139)
cfn=(1892)
calls=2178 0 
0 21780
0 26136
cob=(5)
cfi=(139)
cfn=(3318)
calls=2178 0 
0 30492
0 21054
cfn=(14648) 0x0000000000e396a0
calls=1452 0 
0 13068
0 17061
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 3267
cfn=(14232) 0x0000000000d4f680
calls=363 0 
0 33759
0 2541
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 3267
cfn=(14186)
calls=363 0 
0 33759
0 2541
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 3630
cfn=(14002)
calls=363 0 
0 6897
0 3630
cfn=(14100)
calls=363 0 
0 25894
0 9438
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 3267
cfn=(14140)
calls=363 0 
0 34122
0 49731
cfn=(14616)
calls=1452 0 
0 110352
0 7260
cob=(5)
cfi=(139)
cfn=(1892)
calls=1452 0 
0 14520
0 17424
cob=(5)
cfi=(139)
cfn=(3318)
calls=1452 0 
0 20328
0 47916

fn=(14232)
0 10890
cfn=(14044)
calls=363 0 
0 2541
0 726
cfn=(14052)
calls=363 0 
0 8712
0 4719
cfn=(14030)
calls=363 0 
0 5082
0 1089

fn=(15138) 0x000000000111b320
0 2178

fn=(15164) 0x00000000011dba00
0 7140
cfn=(15166) 0x00000000011da520
calls=510 0 
0 136426
0 58770

fn=(15254) 0x00000000011dde00
0 8185
cfn=(15164)
calls=147 0 
0 64638
0 20471
cfn=(15262) 0x000000000103a9c0
calls=484 0 
0 56074
0 40169
cfn=(18192) 0x00000000011dc160
calls=229 0 
0 68242
0 458

fn=(15502) 0x000000000111b1b0
0 1534

fn=(15752) 0x00000000011becc0
0 13794
cfn=(2492)
calls=242 0 
0 6776
0 4840

fn=(16634) 0x00000000011a79d0
0 7502

fn=(16852)
0 7623
cfn=(2492)
calls=121 0 
0 7139
0 5203
cfn=(16898) 0x000000000120a690
calls=121 0 
0 7018
0 7502
cfn=(17160)
calls=121 0 
0 58806
0 968
cfn=(1350)
calls=121 0 
0 367488
0 2662
cfn=(16870) 0x0000000001148d50
calls=121 0 
0 11132
0 1210
cfn=(2492)
calls=121 0 
0 8591
0 4840
cfn=(2484)
calls=121 0 
0 1573
0 242
cfn=(8394)
calls=121 0 
0 4356
0 1815
cfn=(2484)
calls=121 0 
0 1573
0 242
cfn=(8394)
calls=121 0 
0 4356
0 4114
cfn=(16936) 0x00000000011462d0
calls=121 0 
0 14157
0 8470
cfn=(2524)
calls=121 0 
0 1936
0 6897
cfn=(2308)
calls=121 0 
0 24563
0 13673
cfn=(17070)
calls=121 0 
0 484
0 11616
cfn=(17108) 0x0000000001209f90
calls=121 0 
0 69696
0 2904
cfn=(17130)
calls=121 0 
0 2178
0 363
cfn=(17138) 0x0000000001209f80
calls=121 0 
0 3509
0 13068
cfn=(2492)
calls=121 0 
0 7139
0 5324

fn=(17384)
0 1280
cfn=(17386)
calls=160 0 
0 1254699
0 320

fn=(17394) 0x0000000000d0a420
0 9696
cfn=(17406) 0x0000000000d06da0
calls=404 0 
0 3636
0 16968
cob=(5)
cfi=(139)
cfn=(1892)
calls=404 0 
0 4040
0 6060

fn=(17526) 0x0000000000d05b20
0 3294

fn=(17666)
0 3146
cfn=(17678) 0x0000000000d568c0
calls=121 0 
0 3388
0 484
cfn=(17690) 0x0000000000d5b000
calls=121 0 
0 10406
0 3630
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 1815

fn=(18582)
0 726

fn=(18598)
0 3267
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 6655
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 3267

fn=(18694)
0 1210
cfn=(2102) 0x000000000101cf80
calls=121 0 
0 605
0 847

fn=(18836) 0x0000000000c9d630
0 4477

fn=(20440)
0 28
cfn=(7994)
calls=1 0 
0 57
0 2
cfn=(19624) 0x0000000001031e10
calls=1 0 
0 171
0 3
cfn=(19656) 0x0000000001032fa0
calls=1 0 
0 21
0 3
cfn=(6088)
calls=1 0 
0 138
0 25
cfn=(5132)
calls=1 0 
0 28
0 10

fn=(13196) 0x00000000011f3ae0
0 31581
cfn=(13218)
calls=484 0 
0 51304
0 38236
cfn=(12088)
calls=484 0 
0 74052
0 3872
cfn=(12128)
calls=484 0 
0 33396
0 7139
cfn=(13268) 0x00000000011f36c0
calls=484 0 
0 31218
0 3872

fn=(1484) 0x0000000001203a40
0 245866
cfn=(1486)
calls=1306 0 
0 53914
0 23508

fn=(1710) 0x000000000113e140
0 17262
cfn=(1718) 0x000000000120a070
calls=822 0 
0 55896
0 3288
cfn=(1606)
calls=822 0 
0 124122
0 6576
cfn=(1606)
calls=822 0 
0 124122
0 11508
cfn=(1754) 0x000000000113bc60
calls=822 0 
0 27810
0 10686
cfn=(1486)
calls=822 0 
0 37912
0 13152
cfn=(1768)
calls=822 0 
0 157824
0 6576

fn=(1742) 0x00000000011309a0
0 2745

fn=(2084)
0 36945
cfn=(1904)
calls=821 0 
0 7389
0 38587

fn=(2132) 0x0000000001021a30
0 13641
cfn=(2134)
calls=4547 0 
0 395616
0 13641

fn=(2138)
0 45470

fn=(2770) 0x0000000001141700
0 2684
cfn=(2776) 0x0000000001140ff0
calls=122 0 
0 2440
0 366
cfn=(2782)
calls=122 0 
0 610
0 11712
cfn=(2810) 0x000000000120a3e0
calls=122 0 
0 13054
0 2440
cfn=(2858)
calls=122 0 
0 2684
0 610
cfn=(3130)
calls=122 0 
0 3782
0 5490
cfn=(2920)
calls=122 0 
0 375296
0 122

fn=(2810)
0 24156

fn=(2948)
0 6710
cfn=(2492)
calls=122 0 
0 8662
0 854
cfn=(2492)
calls=122 0 
0 8662
0 16226
cfn=(2978)
calls=122 0 
0 49776
0 1952

fn=(3088) 0x0000000001143210
0 10980
cfn=(1574)
calls=915 0 
0 19215
0 9150

fn=(3166)
0 4880
cob=(5)
cfi=(139)
cfn=(1882)
calls=122 0 
0 6344
0 244
cob=(5)
cfi=(139)
cfn=(1892)
calls=122 0 
0 1220
0 2196
cfn=(3190) 0x0000000001056ee0
calls=122 0 
0 9638
0 1830
cob=(5)
cfi=(139)
cfn=(1922)
calls=122 0 
0 5002
0 1464

fn=(3332)
0 31376

fn=(3736)
0 8712
cfn=(3738) 0x0000000000c559c0
calls=1089 0 
0 412824
0 59774
cfn=(3840)
calls=1089 0 
0 149314
0 17545
cfn=(4028)
calls=726 0 
0 15972
0 1089
cfn=(4028)
calls=363 0 
0 7986
0 130801
cfn=(3866) 0x0000000000cf8b80
calls=363 0 
0 580800
0 167178
cob=(5)
cfi=(139)
cfn=(1882)
calls=108 0 
0 5616
0 216
cob=(5)
cfi=(139)
cfn=(1892)
calls=108 0 
0 1080
0 1836
cfn=(4684)
calls=108 0 
0 2268
0 1944
cob=(5)
cfi=(139)
cfn=(1922)
calls=108 0 
0 4428
0 12182
cfn=(3744)
calls=363 0 
0 14641
0 1694
cob=(5)
cfi=(139)
cfn=(3896)
calls=242 0 
0 58322
0 1694
cfn=(2492)
calls=242 0 
0 20328
0 1452
cfn=(3918)
calls=242 0 
0 119515
0 3751
cob=(5)
cfi=(139)
cfn=(1892)
calls=605 0 
0 6050
0 7986

fn=(3918)
0 61952
cob=(5)
cfi=(139)
cfn=(3940)
calls=242 0 
0 33198
0 3630
cob=(5)
cfi=(139)
cfn=(3940)
calls=242 0 
0 33198
0 4840
cfn=(3964)
calls=242 0 
0 14399
0 726
cfn=(3990) 0x0000000000d03370
calls=242 0 
0 11858
0 3388
cob=(5)
cfi=(139)
cfn=(3940)
calls=363 0 
0 51062
0 8712
cfn=(3990)
calls=363 0 
0 5726541
0 726

fn=(4088)
0 18396

fn=(4724)
0 5808
cob=(5)
cfi=(139)
cfn=(3896)
calls=242 0 
0 46959
0 4114
cfn=(4742)
calls=242 0 
0 4529908
0 1034550
cfn=(4912)
calls=242 0 
0 1936
0 1936
cfn=(4924) 0x0000000000d01c30
calls=242 0 
0 1055351
0 7986
cob=(5)
cfi=(139)
cfn=(4940)
calls=242 0 
0 26620
0 1694
cfn=(4604)
calls=242 0 
0 9196
0 242

fn=(20144) 0x000000000113d110
0 520
cfn=(17862) 0x00000000011458f0
calls=40 0 
0 3960
0 320

fn=(20176) 0x000000000108c340
0 600
cfn=(1486)
calls=40 0 
0 1120
0 520
cfn=(6222) 0x00000000010a3090
calls=40 0 
0 53344
0 600
cob=(2)
cfi=(7)
cfn=(7820)
calls=40 0 
0 200
0 40
0 600

fn=(5718) 0x0000000000c6f6d0
0 2178
cfn=(5722)
calls=242 0 
0 84458
0 968
cfn=(5760)
calls=242 0 
0 57354
0 1210

fn=(5966)
0 7986
cfn=(5974) 0x00000000010304a0
calls=242 0 
0 154826
0 1936

fn=(6054) 0x0000000000c72860
0 16940
cfn=(17798) 0x000000000103ba10
calls=242 0 
0 1545223
0 8712
cfn=(6082)
calls=242 0 
0 1727689
0 11132

fn=(6246)
0 2905
cfn=(6248) 0x00000000010a6650
calls=415 0 
0 830
0 5576
cfn=(6248)
calls=337 0 
0 674
0 2022

fn=(6346)
0 1005

fn=(6362)
0 1110
cob=(5)
cfi=(139)
cfn=(3896)
calls=30 0 
0 14965
0 5293
cfn=(1486)
calls=30 0 
0 1260
0 1855
cfn=(6456) 0x00000000010a6590
calls=30 0 
0 2670
0 2454
cfn=(7776) 0x00000000010eb7d0
calls=13 0 
0 6836
0 1256
cfn=(6546)
calls=30 0 
0 3750
0 853
cfn=(6564)
calls=28 0 
0 23509
0 196

fn=(6474) 0x00000000013dcbf0
0 1044
cob=(2)
cfi=(7)
cfn=(6482) ioctl
calls=116 0 
0 580
0 116
0 464

fn=(6910)
0 5625
cob=(5)
cfi=(139)
cfn=(1882)
calls=225 0 
0 10350
0 675
cob=(5)
cfi=(139)
cfn=(1892)
calls=225 0 
0 2250
0 5850
cob=(5)
cfi=(139)
cfn=(3940)
calls=225 0 
0 33289
0 14625
cfn=(6850)
calls=450 0 
0 3150
0 3600
cob=(5)
cfi=(139)
cfn=(4940)
calls=225 0 
0 24750
0 3825
cob=(5)
cfi=(139)
cfn=(1922)
calls=225 0 
0 7425
0 17100
cfn=(6834)
calls=225 0 
0 1575
0 2475

fn=(7780) 0x00000000013dd370
0 416
cfn=(6586)
calls=13 0 
0 377
0 663
cfn=(6464)
calls=13 0 
0 845
0 372
cfn=(7814)
calls=13 0 
0 3510
0 354

fn=(7980)
0 40126
cfn=(17832) 0x0000000001032ba0
calls=458 0 
0 269794
0 2748
cfn=(17832)
calls=458 0 
0 283502
0 15218
cfn=(17858) 0x00000000010a0900
calls=458 0 
0 955567
0 8452
cfn=(17822)
calls=458 0 
0 7786
0 4304
cfn=(7994)
calls=484 0 
0 16456
0 4840
cfn=(8028) 0x0000000001136600
calls=484 0 
0 358263
0 2800
cfn=(5760)
calls=458 0 
0 108546
0 458

fn=(8028)
0 123
cob=(2)
cfi=(7)
cfn=(12)
calls=123 0 
0 1234
0 123
0 356783

fn=(8194) 0x0000000001041b80
0 9680
cob=(5)
cfi=(139)
cfn=(1882)
calls=484 0 
0 25168
0 968
cob=(5)
cfi=(139)
cfn=(1892)
calls=484 0 
0 4840
0 15972
cob=(5)
cfi=(139)
cfn=(1922)
calls=484 0 
0 19844
0 20086
cfn=(2220) 0x00000000011c1800
calls=121 0 
0 209837
0 4356
cfn=(1484)
calls=121 0 
0 29070
0 2299
cfn=(1768)
calls=484 0 
0 95553
0 2420
cfn=(1904)
calls=363 0 
0 3267
0 23111
cfn=(8198)
calls=484 0 
0 10164
0 1452

fn=(8378)
0 10164
cfn=(8382)
calls=1452 0 
0 11616
0 8712

fn=(8460)
0 10164
cfn=(8466)
calls=484 0 
0 2778558
0 4840

fn=(8492)
0 3388

fn=(8712) 0x00000000010538c0
0 14036
cfn=(3332)
calls=484 0 
0 17908
0 4840
cob=(5)
cfi=(139)
cfn=(8772)
calls=484 0 
0 82764
0 235708
cfn=(3304)
calls=484 0 
0 5808
0 2904

fn=(9026)
0 11858

fn=(9316)
0 47795

fn=(9636)
0 22748

fn=(9722)
0 1936
cfn=(9724) 0x0000000000cc1080
calls=242 0 
0 189244
0 3146

fn=(9724)
0 115918
cfn=(9818) 0x0000000000cc0fc0
calls=242 0 
0 20812
0 27346
cfn=(8382)
calls=242 0 
0 1936
0 15488
cfn=(9788) 0x00000000010fa440
calls=726 0 
0 2904
0 4840

fn=(9828) 0x0000000000a7f360
0 9922

fn=(10240)
0 27588

fn=(10476)
0 6534

fn=(10986) 0x0000000000f0dbf0
0 26862

fn=(11036)
0 2904
cfn=(11042)
calls=121 0 
0 48037
0 5929
cfn=(13396)
calls=121 0 
0 6776
0 1089
cfn=(8340)
calls=121 0 
0 4598
0 1210
cfn=(13432) 0x00000000011ce9b0
calls=121 0 
0 242
0 5687
cfn=(11100) 0x00000000011b1d20
calls=121 0 
0 1463737
0 2541
cfn=(8348)
calls=121 0 
0 4598
0 2178
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 4114
cfn=(13478) 0x00000000010570c0
calls=121 0 
0 2541
0 484
cfn=(13490)
calls=121 0 
0 305597
0 1815
cfn=(13456)
calls=121 0 
0 3025
0 363

fn=(11208) 0x0000000000d42950
0 3993
cfn=(11214) 0x0000000000d41010
calls=363 0 
0 42713
0 7744
cfn=(11332)
calls=242 0 
0 12342
0 968
cfn=(11312) 0x0000000000d41520
calls=363 0 
0 19965
0 847
cfn=(11296)
calls=242 0 
0 12100
0 726
cfn=(11280) 0x0000000000d42440
calls=242 0 
0 12100
0 968
cfn=(11264) 0x0000000000d41a20
calls=242 0 
0 12100
0 484

fn=(11312)
0 19965

fn=(11642)
0 726

fn=(11656)
0 2904

fn=(11712) 0x0000000000efe800
0 92081

fn=(11958)
0 5808

fn=(12062) 0x0000000001061610
0 5445
cfn=(11934)
calls=363 0 
0 726
0 2541
cfn=(12070)
calls=363 0 
0 6171
0 2541

fn=(12446)
0 17424
cfn=(12128)
calls=363 0 
0 9438
0 9801

fn=(12542)
0 6534

fn=(12658) 0x00000000011a87d0
0 21538
cfn=(12668)
calls=242 0 
0 57354
0 4840

fn=(12992) 0x0000000001208cb0
0 92928

fn=(13164) 0x0000000000d39f90
0 27588
cfn=(11912)
calls=363 0 
0 38841
0 4719

fn=(13432)
0 242

fn=(13482) 0x00000000010aca10
0 121

fn=(13580)
0 11132
cfn=(12092)
calls=242 0 
0 22385
0 484

fn=(13826) 0x0000000000deb850
0 3630

fn=(14012)
0 10164
cfn=(14024) 0x0000000000ddf8a0
calls=363 0 
0 65098
0 1452
cfn=(14030)
calls=363 0 
0 5808
0 6897
cfn=(14044)
calls=363 0 
0 2541
0 726
cfn=(14052)
calls=363 0 
0 8712
0 5445

fn=(14380)
0 15246
cfn=(14414) 0x0000000000e42a40
calls=242 0 
0 45012
0 5808

fn=(14834)
0 133100
cfn=(15798)
calls=242 0 
0 159962
0 103048
cob=(5)
cfi=(139)
cfn=(1882)
calls=108 0 
0 5616
0 216
cob=(5)
cfi=(139)
cfn=(1892)
calls=108 0 
0 1080
0 1836
cfn=(4684)
calls=108 0 
0 2268
0 1944
cob=(5)
cfi=(139)
cfn=(1922)
calls=108 0 
0 4428
0 5406
cob=(5)
cfi=(139)
cfn=(1892)
calls=968 0 
0 9680
0 54450
cfn=(14878) 0x0000000000dcb1d0
calls=242 0 
0 34122
0 1210

fn=(14878)
0 28072
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 3630

fn=(15166)
0 136426

fn=(15262)
0 56074

fn=(15592)
0 1248
cfn=(15602)
calls=39 0 
0 780
0 585

fn=(15902) 0x0000000001026ac0
0 6534
cfn=(10274) 0x000000000101cb30
calls=726 0 
0 2178
0 3630
cfn=(10278) 0x000000000101cb40
calls=726 0 
0 10164
0 7260
cfn=(10274)
calls=726 0 
0 2178
0 3146
cfn=(10274)
calls=242 0 
0 726
0 1210
cfn=(10274)
calls=242 0 
0 726
0 1210
cfn=(10274)
calls=242 0 
0 726
0 1210
cfn=(10274)
calls=242 0 
0 726
0 1210
cfn=(10274)
calls=242 0 
0 726
0 1210
cfn=(10274)
calls=242 0 
0 726
0 1210
cfn=(10274)
calls=242 0 
0 726
0 8954

fn=(16870)
0 2299
cfn=(2484)
calls=121 0 
0 1573
0 363
cfn=(2484)
calls=121 0 
0 1573
0 5324

fn=(17138)
0 3509

fn=(17386)
0 14948
cfn=(4200)
calls=404 0 
0 20604
0 21970
cfn=(4088)
calls=404 0 
0 2424
0 10100
cfn=(17394)
calls=404 0 
0 40400
0 7430
cfn=(17550) 0x0000000001111900
calls=121 0 
0 70270
0 2313
cfn=(17590)
calls=121 0 
0 1125708
0 2194
cfn=(17526)
calls=244 0 
0 3294
0 4216
cob=(5)
cfi=(139)
cfn=(1892)
calls=404 0 
0 4040
0 5656
cob=(5)
cfi=(139)
cfn=(1892)
calls=404 0 
0 4040
0 7934

fn=(17550)
0 1815
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 4961
cfn=(4280)
calls=242 0 
0 46917
0 2420
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 1452

fn=(17690)
0 3146
cfn=(17694) 0x00000000010f8790
calls=121 0 
0 484
0 1210
cfn=(17706)
calls=121 0 
0 1089
0 4477

fn=(17858)
0 12824
cfn=(17862)
calls=458 0 
0 39388
0 6870
cfn=(17888)
calls=458 0 
0 56244
0 5496
cfn=(17874) 0x00000000010a0620
calls=458 0 
0 23816
0 3716
cfn=(17900) 0x0000000001140910
calls=350 0 
0 806863
0 350

fn=(17900)
0 6300
cfn=(2492)
calls=350 0 
0 20650
0 2100
cfn=(15706)
calls=350 0 
0 9800
0 4200
cfn=(15602)
calls=350 0 
0 31850
0 3850
cfn=(17910)
calls=350 0 
0 540863
0 4550
cfn=(2492)
calls=350 0 
0 20650
0 6650
cfn=(17974) 0x000000000120c2f0
calls=350 0 
0 151200
0 4200

fn=(18110)
0 10406
cfn=(18162) 0x00000000011ec000
calls=121 0 
0 162179
0 363
cfn=(11100)
calls=121 0 
0 1462285
0 605
cfn=(15128) 0x00000000011e36e0
calls=121 0 
0 76593
0 242
cfn=(5926)
calls=121 0 
0 242
0 242

fn=(18192)
0 68242

fn=(18492)
0 7744

fn=(18744)
0 242

fn=(18782) 0x000000000113c010
0 3630

fn=(18984) 0x00000000010a7530
0 847

fn=(19088)
0 1452
cfn=(11934)
calls=121 0 
0 242
0 3751
cfn=(1486)
calls=121 0 
0 17787
0 484
cfn=(19092) 0x00000000010f4370
calls=121 0 
0 6292
0 605

fn=(19144)
0 3388

fn=(19656)
0 4515

fn=(19678)
0 11176
cfn=(7050)
calls=254 0 
0 7620
0 2286

fn=(20514) 0x00000000010a66d0
0 35
cob=(5)
cfi=(139)
cfn=(4940)
calls=1 0 
0 136
0 2
cfn=(6572)
calls=1 0 
0 488
0 2
cfn=(20518) 0x00000000010ef660
calls=1 0 
0 134
0 1

fn=(1354) 0x0000000001208ce0
0 38830

fn=(1616)
0 22194
cfn=(1618) 0x000000000113bd20
calls=2466 0 
0 135559
0 26304

fn=(2056)
0 3172
cob=(5)
cfi=(139)
cfn=(1882)
calls=122 0 
0 6344
0 244
cob=(5)
cfi=(139)
cfn=(1892)
calls=122 0 
0 1220
0 2074
cfn=(2070)
calls=122 0 
0 845728
0 1830
cob=(5)
cfi=(139)
cfn=(1922)
calls=122 0 
0 5002
0 1464

fn=(3080)
0 9150
cfn=(1726)
calls=915 0 
0 9150
0 4575
cfn=(1568)
calls=915 0 
0 5490
0 10065
cfn=(1742)
calls=915 0 
0 2745
0 11895
cfn=(3088)
calls=915 0 
0 39345
0 915

fn=(3192) 0x000000000120b7a0
0 488
cfn=(3194)
calls=122 0 
0 6344
0 366
cfn=(3216) 0x00000000010a9bd0
calls=122 0 
0 122
0 366

fn=(3536)
0 732
cfn=(3500)
calls=122 0 
0 5734
0 366
cfn=(3540) 0x0000000001146770
calls=122 0 
0 13176
0 244
cfn=(3500)
calls=122 0 
0 5734
0 1464

fn=(3540)
0 4880
cfn=(3500)
calls=122 0 
0 5734
0 366
cfn=(3564) 0x000000000105edd0
calls=122 0 
0 244
0 1952

fn=(3866)
0 580800

fn=(4028)
0 20086
cfn=(5052) 0x0000000001038210
calls=121 0 
0 1042659
0 50941
cob=(5)
cfi=(139)
cfn=(4940)
calls=121 0 
0 1452
0 1331
cob=(5)
cfi=(139)
cfn=(4940)
calls=121 0 
0 17550
0 10164
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 1452

fn=(4052)
0 25168
cfn=(4066)
calls=968 0 
0 8683011
0 12100
cfn=(8162)
calls=363 0 
0 9801
0 19118
cob=(5)
cfi=(139)
cfn=(1892)
calls=968 0 
0 9680
0 14520

fn=(4180)
0 3146
cfn=(4188)
calls=121 0 
0 15246
0 3630
cfn=(4244) 0x00000000011d08e0
calls=121 0 
0 93729
0 1573
cfn=(4088)
calls=121 0 
0 726
0 1089
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 1089

fn=(4200)
0 68762

fn=(4354)
0 2430

fn=(4742)
0 96316
cfn=(4800)
calls=605 0 
0 4598599
0 17545
cfn=(15802) 0x0000000000daf930
calls=242 0 
0 34122
0 20691

fn=(4924)
0 7865
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 2904
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 26306
cfn=(5108) 0x0000000001040470
calls=121 0 
0 13673
0 2057
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 847
cfn=(5124)
calls=121 0 
0 904595
0 391
cfn=(5150) 0x0000000000ca1bd0
calls=14 0 
0 210
0 42
cfn=(5162)
calls=14 0 
0 56
0 214
cfn=(5162)
calls=107 0 
0 428
0 2541
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 605
cob=(5)
cfi=(139)
cfn=(4940)
calls=121 0 
0 1452
0 1331
cob=(5)
cfi=(139)
cfn=(4940)
calls=121 0 
0 17131
0 1303
cfn=(5168)
calls=121 0 
0 45002
0 663
cfn=(20674) 0x0000000001032010
calls=29 0 
0 232
0 93

fn=(5124)
0 9196
cfn=(5128) 0x00000000010374d0
calls=242 0 
0 1801861
0 242

fn=(5370)
0 19360
cfn=(5394)
calls=242 0 
0 36542
0 53282
cob=(5)
cfi=(139)
cfn=(1922)
calls=242 0 
0 9922
0 4840
cob=(5)
cfi=(139)
cfn=(1882)
calls=242 0 
0 12584
0 484
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 6127
cob=(5)
cfi=(139)
cfn=(3896)
calls=242 0 
0 146726
0 1346

fn=(5926)
0 2852

fn=(6154)
0 7018
cob=(5)
cfi=(139)
cfn=(1882)
calls=242 0 
0 12584
0 484
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 3302
cfn=(6088)
calls=52 0 
0 7280
0 1176
cfn=(6172) 0x0000000001034d10
calls=294 0 
0 1034710
0 5878
cob=(5)
cfi=(139)
cfn=(1922)
calls=242 0 
0 9922
0 3388

fn=(6172)
0 8840
cfn=(1486)
calls=268 0 
0 7504
0 17998
cfn=(6222)
calls=268 0 
0 982546
0 20097

fn=(6282)
0 18346
cfn=(6712) 0x000000000102eca0
calls=166 0 
0 10792
0 532
cfn=(19872) 0x000000000102ead0
calls=40 0 
0 520
0 19468
cfn=(6248)
calls=415 0 
0 830
0 2705
cfn=(6298) 0x000000000102e380
calls=375 0 
0 1500
0 1877
cfn=(6312)
calls=161 0 
0 88316
0 1617
cfn=(6712)
calls=1 0 
0 105
0 2942
cfn=(19786) 0x000000000102f1c0
calls=214 0 
0 10058
0 1708
cfn=(6714) 0x000000000102ebe0
calls=256 0 
0 7424
0 879
cfn=(6346)
calls=37 0 
0 555
0 10721
cfn=(6712)
calls=214 0 
0 22470
0 1498
cfn=(19872)
calls=214 0 
0 2782
0 254147
cfn=(6712)
calls=2080 0 
0 108160
0 54767
cfn=(6738)
calls=78 0 
0 8580
0 328
cfn=(6738)
calls=82 0 
0 7403
0 2880
cfn=(6312)
calls=160 0 
0 11909
0 487
cfn=(6712)
calls=1 0 
0 105
0 2

fn=(6298)
0 1500

fn=(6464)
0 1740
cob=(2)
cfi=(7)
cfn=(6468) __time_syscall
calls=116 0 
0 348
0 116
0 1624
cfn=(6474)
calls=116 0 
0 2204
0 1508

fn=(6578)
0 580
cfn=(6582)
calls=29 0 
0 8323
0 232
cfn=(6464)
calls=29 0 
0 1885
0 551
cfn=(6586)
calls=29 0 
0 928
0 58

fn=(6916)
0 23450
cob=(5)
cfi=(139)
cfn=(1882)
calls=938 0 
0 48644
0 2814
cob=(5)
cfi=(139)
cfn=(1892)
calls=938 0 
0 9380
0 24388
cob=(5)
cfi=(139)
cfn=(3940)
calls=938 0 
0 132202
0 69738
cfn=(6850)
calls=1418 0 
0 9926
0 14092
cob=(5)
cfi=(139)
cfn=(4940)
calls=938 0 
0 103180
0 15946
cob=(5)
cfi=(139)
cfn=(1922)
calls=938 0 
0 38282
0 44394

fn=(8212)
0 19360
cob=(5)
cfi=(139)
cfn=(1882)
calls=968 0 
0 47432
0 1936
cob=(5)
cfi=(139)
cfn=(1892)
calls=968 0 
0 9680
0 31944
cob=(5)
cfi=(139)
cfn=(1922)
calls=968 0 
0 35816
0 20328

fn=(8308)
0 6534

fn=(8340)
0 17424
cfn=(2484)
calls=484 0 
0 6292
0 20086
cfn=(2484)
calls=484 0 
0 6292
0 968

fn=(8348)
0 14036
cfn=(2484)
calls=484 0 
0 6292
0 15004
cfn=(2484)
calls=484 0 
0 6292
0 968

fn=(8644)
0 47795
cfn=(15902)
calls=726 0 
0 56386
0 4356
cfn=(15912) 0x0000000001060530
calls=726 0 
0 91718
0 34364

fn=(8696)
0 17424
cfn=(3256)
calls=484 0 
0 4356
0 1936
cfn=(3256)
calls=484 0 
0 4356
0 2904
cfn=(8708) 0x0000000001042cb0
calls=484 0 
0 2097172
0 6292

fn=(8898)
0 5082
cfn=(8962)
calls=726 0 
0 119064
0 2178
cfn=(9034) 0x0000000000f13f60
calls=726 0 
0 52272
0 23958
cfn=(8902)
calls=726 0 
0 1452
0 6292
cfn=(8282)
calls=242 0 
0 132858
0 5082

fn=(8976)
0 17303
cfn=(8980)
calls=1331 0 
0 18997
0 43923

fn=(8980)
0 80223

fn=(9034)
0 29040
cfn=(9038) 0x0000000000dea150
calls=1210 0 
0 40898
0 18150

fn=(9038)
0 12826
cfn=(2484)
calls=968 0 
0 12584
0 11858
cfn=(2484)
calls=242 0 
0 3146
0 484

fn=(9084)
0 72721
cfn=(2484)
calls=847 0 
0 11011
0 1694
cfn=(8980)
calls=847 0 
0 12705
0 121
cfn=(8980)
calls=121 0 
0 1573
0 8954
cfn=(2484)
calls=121 0 
0 1573
0 4114

fn=(9132) 0x0000000000c6dea0
0 17908
cfn=(9136) 0x0000000000f0dbd0
calls=363 0 
0 13794
0 605
cfn=(9136)
calls=605 0 
0 22143
0 11616

fn=(9490)
0 3872
cfn=(9492) 0x0000000000d3e1c0
calls=484 0 
0 4767763
0 3872

fn=(9492)
0 13552
cfn=(8960) 0x0000000000de9f80
calls=484 0 
0 125961
0 11616
cfn=(9496)
calls=484 0 
0 3758260
0 3388
cfn=(8282)
calls=484 0 
0 269830
0 5324
cfn=(10662) 0x00000000011ace50
calls=484 0 
0 578864
0 968

fn=(9556)
0 10648

fn=(9998) 0x00000000011c70e0
0 29766

fn=(10146)
0 103092
cfn=(10156)
calls=1452 0 
0 29040
0 10164
cfn=(10166) 0x0000000001154eb0
calls=1452 0 
0 69696
0 18876
cfn=(10180) 0x0000000001155000
calls=1452 0 
0 58080
0 7260
cfn=(10186) 0x0000000001155080
calls=1452 0 
0 15972
0 63888

fn=(10822) 0x0000000000a7f2f0
0 9680

fn=(11100)
0 24684
cfn=(11118)
calls=363 0 
0 14399
0 11253
cfn=(11140) 0x00000000011a9790
calls=363 0 
0 360943
0 7139
cfn=(11208)
calls=363 0 
0 127050
0 16577
cfn=(11358)
calls=242 0 
0 115434
0 27346
cfn=(11476)
calls=363 0 
0 9801
0 51909
cfn=(12640) 0x00000000011a8280
calls=1452 0 
0 50820
0 5445
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 26862
cfn=(13066)
calls=363 0 
0 123662
0 3267
cfn=(11958)
calls=363 0 
0 2904
0 18876
cfn=(13334) 0x00000000011a6d30
calls=242 0 
0 4598
0 15246
cfn=(11496) 0x0000000000f18120
calls=242 0 
0 16698
0 968
cfn=(11532)
calls=242 0 
0 5566
0 484
cfn=(11540)
calls=242 0 
0 1452
0 1573
cfn=(11588)
calls=363 0 
0 1456235
0 2904
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4840
cfn=(12620)
calls=242 0 
0 6776
0 1452
cfn=(12606)
calls=242 0 
0 6534
0 4961
cfn=(13196)
calls=363 0 
0 212718
0 1815
cfn=(12756) 0x0000000000d3f090
calls=363 0 
0 13068
0 1452
cfn=(12658)
calls=363 0 
0 83732
0 3267
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 5929
cfn=(13014) 0x00000000011a7e60
calls=363 0 
0 8712
0 7623
cfn=(12774) 0x0000000000d3de40
calls=363 0 
0 12705
0 1452
cfn=(12984) 0x00000000011a7c10
calls=242 0 
0 243936
0 726
cfn=(12802)
calls=242 0 
0 52272
0 2057
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 3751
cfn=(13034)
calls=242 0 
0 383812
0 1210
cfn=(13164)
calls=363 0 
0 71148
0 6897

fn=(11140)
0 11253
cfn=(1486)
calls=363 0 
0 129591
0 169521
cfn=(1486)
calls=363 0 
0 14399
0 2178
cfn=(1486)
calls=363 0 
0 14399
0 19602

fn=(11496)
0 1210
cfn=(11498) 0x0000000000f14800
calls=242 0 
0 4840
0 10648

fn=(11650)
0 2178

fn=(11940)
0 7623

fn=(12386)
0 3267

fn=(14414)
0 67518

fn=(14488) 0x0000000000e418e0
0 193684
cfn=(2492)
calls=604 0 
0 16912
0 45302
cfn=(15752)
calls=242 0 
0 25410
0 484

fn=(14604)
0 2420

fn=(14648)
0 15246

fn=(15128)
0 5445
cfn=(15132) 0x0000000001098130
calls=363 0 
0 5082
0 1452
cfn=(15138)
calls=363 0 
0 2178
0 37778
cfn=(15164)
calls=363 0 
0 137698
0 5566

fn=(15132)
0 5082

fn=(15236) 0x00000000011e8fe0
0 17424
cfn=(15254)
calls=363 0 
0 127276
0 2166
cfn=(15304) 0x0000000001209900
calls=39 0 
0 16185
0 273
cfn=(15332) 0x00000000011e8630
calls=39 0 
0 77038
0 13314
cfn=(18234) 0x00000000011d9850
calls=324 0 
0 9720
0 13932
cfn=(18254)
calls=324 0 
0 23004
0 5703
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 12780
cfn=(18276)
calls=324 0 
0 5184
0 324

fn=(15332)
0 4290
cfn=(15492)
calls=39 0 
0 34489
0 702
cfn=(15336) 0x000000000103ecd0
calls=39 0 
0 31616
0 416
cfn=(15368) 0x000000000103bae0
calls=13 0 
0 4537
0 247
cob=(5)
cfi=(139)
cfn=(1892)
calls=39 0 
0 390
0 351

fn=(15802)
0 1210
cob=(5)
cfi=(139)
cfn=(4940)
calls=242 0 
0 32912

fn=(16234)
0 2541

fn=(16476) 0x0000000001115940
0 3388
cfn=(1486)
calls=121 0 
0 16940
0 605
cfn=(16232)
calls=121 0 
0 2783
0 605
cfn=(16484) 0x00000000011d3060
calls=121 0 
0 413094
0 3751
cfn=(16232)
calls=121 0 
0 2783
0 1936
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3509
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 2178
cfn=(2070)
calls=121 0 
0 1774080
0 242

fn=(17308) 0x0000000000d06860
0 11011
cfn=(4280)
calls=121 0 
0 77115
0 6655
cfn=(4416)
calls=121 0 
0 2178
0 7502
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3388
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 14036
cfn=(4266)
calls=121 0 
0 363
0 847

fn=(17762)
0 1815

fn=(17798)
0 5808
cfn=(7980)
calls=242 0 
0 1501179
0 3146
cfn=(17804) 0x0000000001036160
calls=242 0 
0 34848
0 242

fn=(17874)
0 11908
cfn=(6850)
calls=458 0 
0 3206
0 8702

fn=(17928) 0x0000000001146520
0 160714

fn=(18768)
0 847
cfn=(18770) 0x00000000010f3c80
calls=121 0 
0 215895
0 968

fn=(18770)
0 3388
cob=(5)
cfi=(139)
cfn=(3196)
calls=121 0 
0 5324
0 4114
cfn=(18816) 0x00000000011110f0
calls=121 0 
0 194115
0 1936
cfn=(3398)
calls=121 0 
0 1331
0 968
cfn=(18782)
calls=121 0 
0 3630
0 1089

fn=(18858) 0x000000000134d9d0
0 1815
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3630
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 1694

fn=(19092)
0 6292

fn=(19152)
0 3146
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 2178
cfn=(19168) 0x0000000001056f30
calls=121 0 
0 8591
0 1815
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 1331
cfn=(3606)
calls=121 0 
0 740036
0 3025

fn=(20522) 0x00000000010eb6e0
0 27
cfn=(6464)
calls=1 0 
0 65
0 4

fn=(20674)
0 464

fn=(2102)
0 605

fn=(2116)
0 18062
cfn=(2122)
calls=821 0 
0 171589
0 8210
cfn=(2174)
calls=821 0 
0 10673
0 19860
cfn=(2122)
calls=1184 0 
0 247456
0 8988
cfn=(2122)
calls=121 0 
0 36179
0 363

fn=(2174)
0 29549

fn=(2492)
0 13759
cob=(2)
cfi=(7)
cfn=(12)
calls=13759 0 
0 806439
0 13759

fn=(3072)
0 1220
cfn=(2810)
calls=122 0 
0 11102
0 244
cfn=(3080)
calls=122 0 
0 12444
0 2098

fn=(3190)
0 1098
cfn=(3192)
calls=122 0 
0 7686
0 854

fn=(3398)
0 2673

fn=(3596)
0 6832

fn=(3628)
0 4270
cob=(5)
cfi=(139)
cfn=(1882)
calls=122 0 
0 6344
0 244
cob=(5)
cfi=(139)
cfn=(1892)
calls=122 0 
0 1220
0 2928
cfn=(2122)
calls=122 0 
0 25498
0 3904
cob=(5)
cfi=(139)
cfn=(1922)
calls=122 0 
0 5002
0 1830

fn=(3990)
0 25461
cfn=(5512)
calls=302 0 
0 55884
0 1208
cfn=(5568)
calls=302 0 
0 2770797
0 17844
cfn=(5512)
calls=363 0 
0 129228
0 1452
cfn=(5568)
calls=363 0 
0 2734347
0 2178

fn=(4040)
0 129031
cfn=(4042)
calls=18433 0 
0 221196
0 110598

fn=(4134)
0 82522
cfn=(10982) 0x0000000000f0ddc0
calls=484 0 
0 17666
0 10406
cfn=(13826)
calls=363 0 
0 3630
0 1573
cfn=(9202)
calls=121 0 
0 109989
0 2541
cfn=(9276)
calls=121 0 
0 9680
0 242

fn=(4244)
0 10890
cfn=(4280)
calls=121 0 
0 35044
0 6655
cfn=(4416)
calls=121 0 
0 2178
0 7502
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3388
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 14157
cfn=(4266)
calls=121 0 
0 363
0 847

fn=(4376)
0 4732

fn=(4912)
0 3872

fn=(6042)
0 10164
cfn=(5888)
calls=484 0 
0 9196
0 3872
cfn=(6054)
calls=484 0 
0 3309696
0 12584
cfn=(4604)
calls=484 0 
0 18392
0 1936

fn=(6266)
0 1660
cfn=(6248)
calls=415 0 
0 830
0 2075

fn=(6456)
0 570
cfn=(6464)
calls=30 0 
0 1950
0 150

fn=(6672)
0 308
cfn=(6322)
calls=28 0 
0 84
0 224

fn=(8002)
0 4842

fn=(8356)
0 5808
cfn=(8358)
calls=1452 0 
0 14036
0 4356

fn=(8518)
0 5324
cfn=(8520)
calls=484 0 
0 195052
0 968

fn=(8708)
0 15972
cfn=(8712)
calls=484 0 
0 363968
0 5808
cfn=(8808)
calls=484 0 
0 9196
0 2420
cfn=(8818) 0x0000000001040b20
calls=484 0 
0 1936
0 968
cfn=(8822) 0x0000000001040c00
calls=484 0 
0 3388
0 968
cfn=(2122)
calls=484 0 
0 112288
0 1210
cfn=(2122)
calls=121 0 
0 36421
0 9922
cfn=(8886) 0x0000000000f148a0
calls=484 0 
0 7260
0 25652
cfn=(8898)
calls=484 0 
0 221914
0 1936
cfn=(8898)
calls=484 0 
0 113740
0 8228
cfn=(9076)
calls=484 0 
0 123178
0 1452
cfn=(9132)
calls=484 0 
0 35211
0 1452
cfn=(9132)
calls=484 0 
0 30855
0 968
cfn=(9158)
calls=484 0 
0 6776
0 1936
cfn=(8520)
calls=484 0 
0 219252
0 11616
cfn=(9360)
calls=484 0 
0 4356
0 968
cfn=(9364) 0x000000000134e230
calls=484 0 
0 8712
0 968
cfn=(9370)
calls=484 0 
0 144232
0 18392
cfn=(9196)
calls=484 0 
0 502997
0 6776
cob=(5)
cfi=(139)
cfn=(1892)
calls=484 0 
0 4840
0 6292
cob=(5)
cfi=(139)
cfn=(3318)
calls=484 0 
0 12100
0 1452
cfn=(8870)
calls=484 0 
0 3872
0 5324

fn=(8960)
0 3388
cfn=(8962)
calls=484 0 
0 81917
0 1452
cfn=(9034)
calls=484 0 
0 35816
0 3388

fn=(9080)
0 12584
cfn=(8980)
calls=968 0 
0 13794
0 13552

fn=(9136)
0 35937

fn=(9524)
0 53361

fn=(9602)
0 5324

fn=(9850) 0x0000000000a7f460
0 4356

fn=(9988)
0 10164
cfn=(9990)
calls=726 0 
0 2904
0 10890
cfn=(9998)
calls=726 0 
0 29766
0 57354
cfn=(10036) 0x000000000102ea40
calls=726 0 
0 5082
0 4356

fn=(10036)
0 6874

fn=(10104)
0 20328
cfn=(10106)
calls=1452 0 
0 15972
0 30492
cfn=(2492)
calls=1452 0 
0 94380
0 1452

fn=(10274)
0 23958

fn=(10862) 0x000000000105f0e0
0 12342

fn=(10912)
0 4477

fn=(11264)
0 12100

fn=(11722) 0x0000000000deb1b0
0 6171

fn=(11894)
0 21780
cfn=(11912)
calls=242 0 
0 13552
0 4114

fn=(11972) 0x000000000119d0b0
0 2178
cfn=(12052) 0x000000000119c6a0
calls=121 0 
0 2904
0 22022
cfn=(11998)
calls=363 0 
0 50699
0 11616
cfn=(12052)
calls=363 0 
0 8712
0 22869
cfn=(12062)
calls=363 0 
0 17424
0 726

fn=(12088)
0 45012
cfn=(12092)
calls=968 0 
0 77319
0 6534
cfn=(12092)
calls=363 0 
0 32912
0 32791

fn=(12812)
0 39688

fn=(13562)
0 2783
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3993
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 2662
cfn=(13578)
calls=121 0 
0 19360
0 242

fn=(13880)
0 1573

fn=(15500) 0x000000000111b790
0 234
cfn=(15502)
calls=26 0 
0 1534
0 3718

fn=(15706)
0 20692

fn=(15934) 0x00000000011bec50
0 18876

fn=(16170)
0 13673
cfn=(2484)
calls=121 0 
0 1573
0 2178
cfn=(2484)
calls=121 0 
0 1573
0 2178
cfn=(2484)
calls=121 0 
0 1573
0 2178
cfn=(2484)
calls=121 0 
0 1573
0 20691
cfn=(16232)
calls=121 0 
0 2783
0 2057
cfn=(2484)
calls=121 0 
0 1573
0 5929
cfn=(2484)
calls=121 0 
0 1573
0 363
cfn=(16276)
calls=121 0 
0 2662
0 484
cfn=(16276)
calls=121 0 
0 2662
0 484
cfn=(8394)
calls=121 0 
0 4356
0 484
cfn=(8394)
calls=121 0 
0 4356
0 7139
cfn=(16400) 0x0000000000cb3010
calls=121 0 
0 2272842
0 3025

fn=(16484)
0 4719
cfn=(11476)
calls=121 0 
0 3509
0 242
cfn=(16530) 0x00000000011f74d0
calls=121 0 
0 8833
0 4235
cfn=(16676) 0x00000000011a6e50
calls=121 0 
0 9196
0 8954
cfn=(11970)
calls=121 0 
0 57959
0 6171
cfn=(13196)
calls=121 0 
0 61952
0 726
cfn=(12536)
calls=121 0 
0 37389
0 847
cfn=(12494)
calls=121 0 
0 10769
0 968
cfn=(12446)
calls=121 0 
0 12221
0 1815
cfn=(16664) 0x0000000000de9970
calls=121 0 
0 71390
0 726
cfn=(16634)
calls=121 0 
0 7502
0 1089
cfn=(11732)
calls=121 0 
0 69696
0 605
cfn=(11828)
calls=121 0 
0 8591
0 1936
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 2057
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 1694
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3751
cfn=(2484)
calls=121 0 
0 1573
0 242
cfn=(8394)
calls=121 0 
0 4356
0 3751

fn=(16664)
0 1331
cfn=(11732)
calls=121 0 
0 69696
0 363

fn=(16676)
0 9196

fn=(16898)
0 1089
cfn=(16902) 0x000000000120a630
calls=121 0 
0 2904
0 3025

fn=(16902)
0 2904

fn=(17108)
0 4114
cfn=(15304)
calls=121 0 
0 50215
0 484
cfn=(15602)
calls=121 0 
0 8712
0 726
cfn=(15654)
calls=121 0 
0 4598
0 847

fn=(17742) 0x0000000000d58dd0
0 1573

fn=(17974)
0 33950
cfn=(18000)
calls=350 0 
0 16450
0 3150
cfn=(18000)
calls=350 0 
0 16450
0 6300
cfn=(18000)
calls=350 0 
0 17850
0 1050
cfn=(15706)
calls=350 0 
0 9800
0 10150
cfn=(15602)
calls=350 0 
0 35000
0 1050

fn=(18234)
0 13350

fn=(18816)
0 2783
cfn=(18852)
calls=121 0 
0 1573
0 726
cfn=(18858)
calls=121 0 
0 19844
0 242
cfn=(18880)
calls=121 0 
0 726
0 484
cfn=(18890) 0x000000000109fcc0
calls=121 0 
0 44971
0 242
cfn=(18948)
calls=121 0 
0 7474
0 242
cfn=(3080)
calls=121 0 
0 12342
0 1089
cfn=(18982) 0x00000000010a8180
calls=121 0 
0 3267
0 363
cfn=(13510)
calls=121 0 
0 26362
0 363
cfn=(13510)
calls=121 0 
0 26494
0 363
cfn=(19014)
calls=121 0 
0 1694
0 363
cfn=(19014)
calls=121 0 
0 1694
0 1452
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 1815
cfn=(19030)
calls=121 0 
0 2904
0 2178
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 3267
cfn=(18824) 0x00000000011acd60
calls=121 0 
0 1573
0 1815
cfn=(18836)
calls=121 0 
0 4477
0 1089
cfn=(19052)
calls=121 0 
0 7018
0 121

fn=(19624)
0 3655
cob=(5)
cfi=(139)
cfn=(1882)
calls=215 0 
0 9890
0 430
cob=(5)
cfi=(139)
cfn=(1892)
calls=215 0 
0 2150
0 11610
cob=(5)
cfi=(139)
cfn=(1922)
calls=215 0 
0 7095
0 1935

fn=(19758)
0 16
cfn=(19764)
calls=1 0 
0 14
0 13
cfn=(20484) 0x000000000102eb10
calls=1 0 
0 30
0 3
cfn=(20500)
calls=1 0 
0 6
0 7
cfn=(6680)
calls=1 0 
0 7
0 9
cfn=(20514)
calls=1 0 
0 798
0 9
cob=(5)
cfi=(139)
cfn=(4940)
calls=1 0 
0 110
0 5
cfn=(19786)
calls=1 0 
0 47
0 1

fn=(19872)
0 3302

fn=(20382) 0x000000000109df50
0 26
cfn=(6834)
calls=1 0 
0 7
0 57
cfn=(6850)
calls=2 0 
0 14
0 34
cfn=(6850)
calls=1 0 
0 7
0 37

fn=(10278)
0 20328

fn=(10356)
0 4356

fn=(10398)
0 2178
cfn=(10400) 0x000000000105fe60
calls=363 0 
0 199287
0 82038

fn=(1384) 0x000000000105ef40
0 10665

fn=(1690) 0x000000000113d3e0
0 20550
cfn=(20142) 0x000000000113d1d0
calls=40 0 
0 8920
0 19306

fn=(1754)
0 27810

fn=(1844)
0 16836
cfn=(19674)
calls=40 0 
0 34040
0 51574

fn=(1952) 0x00000000010d0caa
cfn=(1246) 0x00000000011155fd
calls=1 0 
0 2844
0 23
cob=(5)
cfi=(139)
cfn=(1882)
calls=1 0 
0 52
0 2
cob=(5)
cfi=(139)
cfn=(1892)
calls=1 0 
0 10
0 13
cfn=(1966)
calls=1 0 
0 110
0 15
cob=(5)
cfi=(139)
cfn=(1922)
calls=1 0 
0 41
0 17

fn=(2024) 0x00000000010f4dc8
cfn=(1952)
calls=1 0 
0 3127
0 21

fn=(2042)
cfn=(2024)
calls=1 0 
0 3148
0 2
cfn=(2046)
calls=1 0 
0 13
0 7
cfn=(2056)
calls=1 0 
0 7107
0 2
cfn=(3166)
calls=1 0 
0 269
0 8

fn=(2048)
0 1212

fn=(2206)
0 51845
cfn=(2220)
calls=1184 0 
0 2122753
0 41915
cfn=(16774)
calls=121 0 
0 11495
0 281
cfn=(20170)
calls=40 0 
0 440
0 320
cfn=(20176)
calls=40 0 
0 57024
0 440

fn=(2776)
0 2440

fn=(2940)
0 3660

fn=(3216)
0 122

fn=(3494)
0 1342
cfn=(3500)
calls=122 0 
0 5734
0 976

fn=(3564)
0 244

fn=(3738)
0 847
cfn=(14724) 0x0000000000c55310
calls=121 0 
0 209278
0 968
cfn=(3918)
calls=121 0 
0 148982
0 21538
cfn=(3744)
calls=726 0 
0 24798
0 1210
cfn=(8162)
calls=121 0 
0 4961
0 242

fn=(4280)
0 15972
cob=(5)
cfi=(139)
cfn=(1882)
calls=726 0 
0 36300
0 1452
cob=(5)
cfi=(139)
cfn=(1892)
calls=726 0 
0 7260
0 48662
cfn=(4328)
calls=364 0 
0 56919
0 23245
cob=(5)
cfi=(139)
cfn=(1922)
calls=726 0 
0 27830
0 12317
cfn=(3606)
calls=121 0 
0 1075147
0 2670

fn=(9200)
0 3388
cfn=(9202)
calls=484 0 
0 372801
0 9680
cfn=(9276)
calls=484 0 
0 38720
0 968

fn=(4620)
0 139260
cob=(5)
cfi=(139)
cfn=(1882)
calls=687 0 
0 35724
0 1374
cob=(5)
cfi=(139)
cfn=(1892)
calls=687 0 
0 6870
0 11679
cfn=(4684)
calls=687 0 
0 8361
0 10305
cob=(5)
cfi=(139)
cfn=(1922)
calls=687 0 
0 28167
0 41144
cfn=(5718)
calls=242 0 
0 146168
0 29286
cfn=(8074) 0x0000000001032d10
calls=242 0 
0 7018
0 52600

fn=(20142)
0 240
cfn=(20144)
calls=40 0 
0 4800
0 160
cfn=(1486)
calls=40 0 
0 2520
0 1200

fn=(5150)
0 4050

fn=(5258)
0 1936
cfn=(5262) 0x0000000000d03730
calls=242 0 
0 134068
0 3872

fn=(5262)
0 24192
cob=(5)
cfi=(139)
cfn=(3940)
calls=61 0 
0 9028
0 793
cfn=(3964)
calls=61 0 
0 12322
0 2477
cob=(5)
cfi=(139)
cfn=(3940)
calls=302 0 
0 42034
0 3624
cfn=(3964)
calls=302 0 
0 82008
0 302

fn=(5512)
0 25759
cob=(5)
cfi=(139)
cfn=(4940)
calls=484 0 
0 53240
0 26858
cob=(5)
cfi=(139)
cfn=(3940)
calls=242 0 
0 33154
0 26620
cob=(5)
cfi=(139)
cfn=(4940)
calls=121 0 
0 13310
0 15367

fn=(5888)
0 13794

fn=(5974)
0 3388
cob=(5)
cfi=(139)
cfn=(3940)
calls=242 0 
0 148776
0 2662

fn=(6222)
0 24170
cfn=(6738)
calls=53 0 
0 4081
0 3426
cfn=(6232) 0x00000000010a68d0
calls=415 0 
0 738444
0 3674
cfn=(6804)
calls=106 0 
0 43680
0 212
cfn=(1974)
calls=53 0 
0 4823
0 3148
cfn=(19950)
calls=256 0 
0 117147
0 6128
cfn=(19696) 0x000000000109dbd0
calls=40 0 
0 1080
0 1080
cfn=(19696)
calls=216 0 
0 5832
0 5632
cfn=(19990) 0x000000000109d410
calls=256 0 
0 3072
0 4352
cfn=(19990)
calls=256 0 
0 3072
0 3018
cob=(5)
cfi=(139)
cfn=(7096)
calls=14 0 
0 50545
0 361
cfn=(6872)
calls=1 0 
0 1681
0 3652
cfn=(6850)
calls=79 0 
0 553
0 1271
cfn=(20382)
calls=1 0 
0 182
0 1574

fn=(6232)
0 8715
cfn=(6238)
calls=415 0 
0 715474
0 4441
cfn=(10036)
calls=256 0 
0 1792
0 8022

fn=(6712)
0 32006
cfn=(6714)
calls=2462 0 
0 66986
0 34072
cfn=(19848) 0x00000000010eb6a0
calls=256 0 
0 512
0 8056

fn=(6714)
0 74410

fn=(6834)
0 5061

fn=(7014)
0 13330
cfn=(19764)
calls=215 0 
0 3010
0 1935
cfn=(19776)
calls=215 0 
0 860
0 8502
cfn=(6680)
calls=17 0 
0 119
0 39
cfn=(6680)
calls=13 0 
0 91
0 6842

fn=(8822)
0 3388

fn=(9372)
0 24684
cob=(5)
cfi=(139)
cfn=(1882)
calls=726 0 
0 34848
0 2178
cob=(5)
cfi=(139)
cfn=(1892)
calls=726 0 
0 7260
0 47916
cob=(5)
cfi=(139)
cfn=(1922)
calls=726 0 
0 25894
0 30734
cob=(5)
cfi=(139)
cfn=(1892)
calls=726 0 
0 7260
0 8954

fn=(9788)
0 2904

fn=(9818)
0 1694
cfn=(9828)
calls=242 0 
0 9922
0 4356
cfn=(9850)
calls=242 0 
0 4356
0 484

fn=(10272)
0 6534
cfn=(10274)
calls=726 0 
0 2178
0 3630
cfn=(10278)
calls=726 0 
0 10164
0 7260
cfn=(10274)
calls=726 0 
0 2178
0 3388
cfn=(10274)
calls=484 0 
0 1452
0 2420
cfn=(10274)
calls=484 0 
0 1452
0 2420
cfn=(10274)
calls=484 0 
0 1452
0 2420
cfn=(10274)
calls=484 0 
0 1452
0 2420
cfn=(10274)
calls=484 0 
0 1452
0 2420
cfn=(10274)
calls=484 0 
0 1452
0 2420
cfn=(10274)
calls=484 0 
0 1452
0 7744

fn=(10662)
0 22385
cfn=(10696)
calls=484 0 
0 441166
0 43318
cfn=(2484)
calls=484 0 
0 6292
0 21659
cfn=(17246)
calls=121 0 
0 10406
0 20570
cfn=(10822)
calls=484 0 
0 4840
0 2420
cfn=(10822)
calls=484 0 
0 4840
0 968

fn=(10884)
0 10164

fn=(10952)
0 34364
cfn=(10982)
calls=121 0 
0 16335
0 9680
cfn=(9202)
calls=121 0 
0 109989
0 2541
cfn=(9276)
calls=121 0 
0 9680
0 242

fn=(10982)
0 5324
cfn=(10986)
calls=242 0 
0 26862
0 1815

fn=(11622)
0 7502

fn=(11934)
0 1694

fn=(12330)
0 137698

fn=(12584)
0 6897

fn=(12984)
0 3146
cfn=(12986)
calls=242 0 
0 242
0 50820
cfn=(12992)
calls=3872 0 
0 46464
0 73568
cfn=(12992)
calls=3872 0 
0 46464
0 23232

fn=(13510)
0 7536
cfn=(3080)
calls=458 0 
0 46716
0 2290
cfn=(19002) 0x000000000113f4a0
calls=458 0 
0 28529
0 3310

fn=(13944)
0 14520
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 3509
cfn=(14648)
calls=242 0 
0 2178
0 4356
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 3267
cfn=(14278)
calls=363 0 
0 23232
0 10164
cfn=(14616)
calls=242 0 
0 18392
0 1210
cob=(5)
cfi=(139)
cfn=(1892)
calls=242 0 
0 2420
0 2904
cob=(5)
cfi=(139)
cfn=(3318)
calls=242 0 
0 3388
0 15246
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 13794
cfn=(13964)
calls=363 0 
0 134189
0 2178
cfn=(13964)
calls=363 0 
0 134189
0 2178
cfn=(13964)
calls=363 0 
0 134552
0 2178
cfn=(13964)
calls=363 0 
0 142296
0 2178
cfn=(13964)
calls=363 0 
0 222519
0 363

fn=(14024)
0 65098

fn=(14044)
0 15246

fn=(14052)
0 34848

fn=(14386)
0 7623
cfn=(14414)
calls=121 0 
0 22506
0 1210

fn=(14486)
0 8712
cfn=(14488)
calls=726 0 
0 281792
0 1452

fn=(14586)
0 2904

fn=(14724)
0 1089
cob=(5)
cfi=(139)
cfn=(3896)
calls=121 0 
0 90214
0 847
cfn=(14730) 0x0000000000db2a00
calls=121 0 
0 95953
0 21175

fn=(14730)
0 95953

fn=(14808)
0 37510
cfn=(14816)
calls=1210 0 
0 38720
0 12100

fn=(14936)
0 32428
cfn=(15236)
calls=363 0 
0 327953
0 1089
cfn=(15128)
calls=242 0 
0 118606
0 484
cfn=(5926)
calls=242 0 
0 484
0 726
cfn=(11100)
calls=121 0 
0 735438
0 121

fn=(15304)
0 53760
cfn=(15306) 0x0000000001208b20
calls=160 0 
0 10240
0 2400

fn=(15306)
0 10240

fn=(15368)
0 1183
cfn=(15370)
calls=91 0 
0 1729
0 1365
cfn=(6172)
calls=91 0 
0 2275
0 273
cfn=(7994)
calls=91 0 
0 2132
0 546
cfn=(15402)
calls=91 0 
0 2002
0 182
cfn=(5132)
calls=91 0 
0 2548
0 1547
cob=(5)
cfi=(139)
cfn=(1922)
calls=91 0 
0 3731
0 1911
cob=(5)
cfi=(139)
cfn=(1882)
calls=91 0 
0 4732
0 182
cob=(5)
cfi=(139)
cfn=(1892)
calls=91 0 
0 910
0 1456

fn=(15498)
0 286
cfn=(15500)
calls=26 0 
0 5486
0 1794

fn=(15602)
0 79891

fn=(15994)
0 34848

fn=(16530)
0 8833

fn=(16936)
0 2057
cfn=(16938) 0x0000000001145c40
calls=121 0 
0 10648
0 1452

fn=(17250)
0 726
cfn=(17252)
calls=121 0 
0 1573
0 968

fn=(17406)
0 3636

fn=(17678)
0 3388

fn=(17728)
0 3388
cfn=(17742)
calls=121 0 
0 1573
0 3872
cfn=(17752)
calls=121 0 
0 6050
0 968
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 1452

fn=(17804)
0 34848

fn=(17832)
0 22900
cfn=(6916)
calls=916 0 
0 523984
0 6412

fn=(17910)
0 18757
cfn=(17928)
calls=605 0 
0 118580
0 278827
cfn=(17928)
calls=350 0 
0 42134
0 92107

fn=(18162)
0 3267
cfn=(15254)
calls=121 0 
0 130961
0 5324
cfn=(18234)
calls=121 0 
0 3630
0 1936
cfn=(18276)
calls=121 0 
0 1936
0 1089
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 3025
cfn=(18254)
calls=121 0 
0 8591
0 1210

fn=(18824)
0 1573

fn=(18890)
0 2299
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 4598
cfn=(1974)
calls=121 0 
0 11011
0 12467
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 1891

fn=(18982)
0 1210
cfn=(18984)
calls=121 0 
0 847
0 1210

fn=(19002)
0 19042
cob=(5)
cfi=(139)
cfn=(3940)
calls=4 0 
0 3562
0 5300
cob=(5)
cfi=(139)
cfn=(4940)
calls=4 0 
0 613
0 12

fn=(19168)
0 484
cob=(5)
cfi=(139)
cfn=(3196)
calls=121 0 
0 5324
0 2783

fn=(19786)
0 10105

fn=(19848)
0 512

fn=(10400)
0 50457
cfn=(2484)
calls=1089 0 
0 14157
0 34848
cfn=(10462)
calls=363 0 
0 87483
0 12342

fn=(13268)
0 31218

fn=(13334)
0 4598

fn=(1246)
0 3
cfn=(1252)
calls=1 0 
0 2372
0 11
cfn=(1844)
calls=1 0 
0 82
0 10
cfn=(1870)
calls=1 0 
0 198
0 28
cob=(5)
cfi=(139)
cfn=(1922)
calls=1 0 
0 41
0 17
cob=(5)
cfi=(139)
cfn=(1242)
calls=1 0 
0 23
0 4
cob=(5)
cfi=(139)
cfn=(1814)
calls=1 0 
0 50
0 5

fn=(1256)
0 180378
cfn=(2770)
calls=122 0 
0 421290
0 2924
cfn=(1348)
calls=579 0 
0 1175627
0 1400
cfn=(16810)
calls=121 0 
0 730488
0 2130

fn=(1350)
0 25027
cfn=(1384)
calls=1185 0 
0 10665
0 222588
cfn=(1484)
calls=1185 0 
0 294218
0 10615
cfn=(1351) 0x000000000113e950'2
calls=822 0 
0 556077
0 17807
cfn=(1710)
calls=822 0 
0 596734
0 12138
cfn=(1354)
calls=943 0 
0 20746
0 9430

fn=(1351)
0 12330
cfn=(1562)
calls=822 0 
0 93708
0 10686
cfn=(1600) 0x000000000113df40
calls=822 0 
0 392499
0 22194
cfn=(1354)
calls=822 0 
0 18084
0 6576

fn=(1568)
0 10422

fn=(1600)
0 191724
cfn=(1690)
calls=822 0 
0 48776
0 18084
cfn=(1604)
calls=822 0 
0 125695
0 8220

fn=(1618)
0 41922
cfn=(1486)
calls=2466 0 
0 83773
0 9864

fn=(1718)
0 25482
cfn=(1726)
calls=822 0 
0 8220
0 22194

fn=(2122)
0 72752
cob=(5)
cfi=(139)
cfn=(1882)
calls=4547 0 
0 213518
0 9094
cob=(5)
cfi=(139)
cfn=(1892)
calls=4547 0 
0 45470
0 59111
cfn=(2132)
calls=4547 0 
0 422898
0 72752
cob=(5)
cfi=(139)
cfn=(1922)
calls=4547 0 
0 155859
0 43827

fn=(2220)
0 58725
cfn=(2224) 0x0000000001148cb0
calls=1305 0 
0 36756
0 27042
cfn=(2236)
calls=1305 0 
0 179355
0 94513
cfn=(2296)
calls=1184 0 
0 44992
0 1694
cfn=(2296)
calls=121 0 
0 4598
0 24795
cfn=(2308)
calls=1305 0 
0 447615
0 7830
cfn=(2422)
calls=1305 0 
0 988395
0 10440
cfn=(2598)
calls=1305 0 
0 296235
0 6525
cfn=(1486)
calls=1305 0 
0 88725
0 14355

fn=(2224)
0 36756

fn=(2484)
0 169546

fn=(3000)
0 6344

fn=(4072)
0 199408
cfn=(10862)
calls=726 0 
0 12342
0 128744
cfn=(4088)
calls=1694 0 
0 10164
0 31581
cfn=(4200)
calls=605 0 
0 22385
0 6292
cfn=(8194)
calls=484 0 
0 478087
0 3872
cfn=(8264)
calls=242 0 
0 155485
0 242

fn=(9244)
0 37752

fn=(5052)
0 2662
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 2904
cob=(5)
cfi=(139)
cfn=(1882)
calls=121 0 
0 6292
0 242
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 22112
cfn=(5108)
calls=121 0 
0 13673
0 2057
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 847
cfn=(5124)
calls=121 0 
0 902348
0 391
cfn=(5150)
calls=14 0 
0 210
0 42
cfn=(5162)
calls=14 0 
0 56
0 214
cfn=(5162)
calls=107 0 
0 428
0 2541
cob=(5)
cfi=(139)
cfn=(1922)
calls=121 0 
0 4961
0 605
cob=(5)
cfi=(139)
cfn=(4940)
calls=121 0 
0 1452
0 1331
cob=(5)
cfi=(139)
cfn=(4940)
calls=121 0 
0 16537
0 1303
cfn=(5168)
calls=121 0 
0 44525
0 663
cfn=(20674)
calls=29 0 
0 232
0 116

fn=(5108)
0 726
cob=(5)
cfi=(139)
cfn=(4940)
calls=242 0 
0 26620

fn=(5128)
0 12534
cfn=(19624)
calls=214 0 
0 36594
0 1926
cfn=(19656)
calls=214 0 
0 4494
0 4708
cfn=(19674)
calls=214 0 
0 1695843
0 9630
cob=(5)
cfi=(139)
cfn=(1922)
calls=214 0 
0 7062
0 2066
cfn=(5132)
calls=242 0 
0 5808
0 5788
cob=(5)
cfi=(139)
cfn=(1882)
calls=214 0 
0 9844
0 642
cob=(5)
cfi=(139)
cfn=(1892)
calls=214 0 
0 2140
0 2782

fn=(5760)
0 82992
cob=(5)
cfi=(139)
cfn=(1922)
calls=1184 0 
0 48544
0 35312
cob=(5)
cfi=(139)
cfn=(1882)
calls=700 0 
0 36400
0 1400
cob=(5)
cfi=(139)
cfn=(1892)
calls=700 0 
0 7000
0 20560
cob=(5)
cfi=(139)
cfn=(1882)
calls=484 0 
0 25168
0 968
cob=(5)
cfi=(139)
cfn=(1892)
calls=484 0 
0 4840
0 5808

fn=(6088)
0 42266

fn=(6248)
0 3164

fn=(6586)
0 3451

fn=(6680)
0 413

fn=(7776)
0 273
cfn=(7780)
calls=13 0 
0 6537
0 26

fn=(8074)
0 1210
cfn=(5150)
calls=242 0 
0 3630
0 2178

fn=(8394)
0 82401

fn=(8424)
0 29040

fn=(8448)
0 16214

fn=(8498)
0 5808

fn=(8818)
0 1936

fn=(8886)
0 7260

fn=(9364)
0 8712

fn=(9590)
0 2420
cfn=(8264)
calls=484 0 
0 285076
0 968

fn=(10142)
0 52272
cfn=(10144)
calls=1452 0 
0 416724
0 5808

fn=(10166)
0 69696

fn=(10180)
0 58080

fn=(10186)
0 15972

fn=(10936)
0 2783
cfn=(8980)
calls=121 0 
0 1815
0 1694

fn=(10944)
0 6292

fn=(11016)
0 3025

fn=(11214)
0 34485
cfn=(5926)
calls=242 0 
0 484
0 7744

fn=(11280)
0 12100

fn=(11476)
0 16577

fn=(11498)
0 4840

fn=(11592)
0 2662

fn=(11696)
0 11253
cfn=(11700)
calls=363 0 
0 9075
0 2904
cfn=(11712)
calls=363 0 
0 92081
0 9801
cfn=(11722)
calls=363 0 
0 6171
0 3267
cfn=(11732)
calls=363 0 
0 191906
0 2541
cfn=(11876)
calls=363 0 
0 12342
0 363

fn=(11920)
0 3388

fn=(11970)
0 12100
cfn=(11972)
calls=484 0 
0 139150
0 2904
cfn=(12088)
calls=484 0 
0 71874
0 5324
cfn=(12128)
calls=484 0 
0 33154
0 6292
cfn=(12158)
calls=484 0 
0 55176
0 968

fn=(12052)
0 11616

fn=(12216)
0 3267

fn=(12428)
0 14036

fn=(12640)
0 50820

fn=(12674)
0 17182
cfn=(12698)
calls=242 0 
0 4598
0 25894

fn=(12756)
0 13068

fn=(12774)
0 12705

fn=(13014)
0 8712

fn=(13478)
0 1573
cfn=(13482)
calls=121 0 
0 121
0 847

fn=(14030)
0 31944

fn=(14302)
0 21417
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 6171
cob=(5)
cfi=(139)
cfn=(1892)
calls=363 0 
0 3630
0 4356
cob=(5)
cfi=(139)
cfn=(3318)
calls=363 0 
0 5082
0 4356
cfn=(13964)
calls=363 0 
0 74657
0 363

fn=(14672)
0 2299
cfn=(5262)
calls=121 0 
0 42712
0 1936

fn=(14784)
0 44044

fn=(15336)
0 3276
cfn=(15368)
calls=78 0 
0 24167
0 3315
cob=(5)
cfi=(139)
cfn=(1892)
calls=39 0 
0 390
0 468

fn=(15656)
0 2720

fn=(15912)
0 30492
cfn=(5734)
calls=726 0 
0 9438
0 3630
cfn=(15934)
calls=726 0 
0 18876
0 29282

fn=(16400)
0 8712
cob=(14) /usr/lib/libm-2.24.so
cfi=(92) ???
cfn=(16430) 0x0000000000034750
calls=121 0 
0 242
0 121
0 1452
cob=(14)
cfi=(92)
cfn=(16430)
calls=121 0 
0 242
0 121
0 726
cob=(14)
cfi=(92)
cfn=(16430)
calls=121 0 
0 242
0 121
0 2904
cfn=(16476)
calls=121 0 
0 2238599
0 16214
cob=(14)
cfi=(92)
cfn=(16430)
calls=121 0 
0 242
0 121
0 605
cob=(14)
cfi=(92)
cfn=(16430)
calls=121 0 
0 242
0 121
0 1089
cob=(14)
cfi=(92)
cfn=(16430)
calls=121 0 
0 242
0 121
0 363

fn=(16938)
0 10648

fn=(17280)
0 5687
cfn=(17308)
calls=121 0 
0 135800
0 2178
cfn=(4088)
calls=121 0 
0 726
0 2662
cob=(5)
cfi=(139)
cfn=(1892)
calls=121 0 
0 1210
0 2299

fn=(17694)
0 484

fn=(17862)
0 7968
cfn=(2492)
calls=498 0 
0 29902
0 5478

fn=(19696)
0 6912

fn=(19990)
0 6144

fn=(20484)
0 30

fn=(20518)
0 34
cfn=(20522)
calls=1 0 
0 96
0 4

ob=(3)
fl=(158)
fn=(18322)
0 968
cfn=(18324) 0x0000000000006520
calls=121 0 
0 159280
0 1089
cob=(5)
cfi=(139)
cfn=(18484)
calls=121 0 
0 3369106

fn=(18328) 0x0000000000004380
0 484
cob=(2)
cfi=(7)
cfn=(18332) getpid
calls=242 0 
0 1210
0 242
0 2662
cfn=(18340) 0x0000000000004350
calls=242 0 
0 3388
0 726

fn=(18340)
0 3388

fn=(18408) 0x0000000000009be0
0 1573
cfn=(18410) 0x0000000000006810
calls=121 0 
0 48521
0 242
cfn=(18416) 0x0000000000008ea0
calls=121 0 
0 28786
0 1452
cfn=(18420) 0x000000000000abe0
calls=121 0 
0 7006
0 10769
cob=(2)
cfi=(7)
cfn=(22)
calls=121 0 
0 2057
0 121
0 726
cfn=(18444) 0x000000000000ac20
calls=121 0 
0 4719
0 1452

fn=(18416)
0 2057
cfn=(18420)
calls=121 0 
0 7006
0 10890
cob=(2)
cfi=(7)
cfn=(22)
calls=121 0 
0 2057
0 121
0 484
cfn=(18444)
calls=121 0 
0 4719
0 1452

fn=(18324)
0 1452
cfn=(18328)
calls=121 0 
0 4356
0 121
cob=(6)
cfi=(159)
cfn=(18356)
calls=121 0 
0 44475
0 121
0 363
cfn=(18408)
calls=121 0 
0 107424
0 968

fn=(18420)
0 242
cob=(10)
cfi=(119)
cfn=(18422)
calls=242 0 
0 13770

fn=(18444)
0 242
cob=(10)
cfi=(119)
cfn=(18446)
calls=242 0 
0 9196

fn=(18410)
0 242
cfn=(18328)
calls=121 0 
0 4356
0 242
cob=(6)
cfi=(159)
cfn=(18356)
calls=121 0 
0 43560
0 121

ob=(2)
fl=(7)
fn=(914)
0 854949

fn=(1000) __mpn_extract_double
0 12100

fn=(150) toupper
0 9738260

fn=(1004) __mpn_mul
0 11616
cfn=(1006) __mpn_mul_1
calls=484 0 
0 15488
0 6776

fn=(1012) __GI_mempcpy
0 9075

fn=(1014) __mpn_cmp
0 8712

fn=(1228)
0 5323

fn=(312)
0 6245640
cfn=(314) _int_malloc
calls=346980 0 
0 55633490
0 11450340

fn=(7190)
0 112
cfn=(7194) __libc_enable_asynccancel
calls=28 0 
0 308
0 168
cfn=(7200) __libc_disable_asynccancel
calls=28 0 
0 336
0 140

fn=(7200)
0 7788

fn=(204)
0 6186402
cfn=(206) _int_free
calls=343689 0 
0 31615601

fn=(7436) select
0 2428
cfn=(7194)
calls=607 0 
0 6677
0 4242
cfn=(7200)
calls=606 0 
0 7272
0 3030

fn=(992) _IO_default_xsputn
0 125472

fn=(994) _itoa_word
0 8216

fn=(1006)
0 61612

fn=(12)
0 68215216

fn=(4848)
0 69904
cfn=(4850) _int_realloc
calls=1028 0 
0 299055
0 19532

fn=(6468)
0 348

fn=(7362) 0x00000000000e10b3
0 3
cfn=(7200)
calls=1 0 
0 12
0 5

fn=(990) strchrnul
0 31460

fn=(998) __printf_fp_l
0 30250
cfn=(1000)
calls=605 0 
0 12100
0 20328
cfn=(1002) __mpn_lshift
calls=121 0 
0 1815
0 31339
cfn=(1010) hack_digit
calls=484 0 
0 45100
0 2178
cfn=(1010)
calls=726 0 
0 66515
0 24200
cfn=(1010)
calls=2662 0 
0 184528
0 61483
cfn=(12)
calls=363 0 
0 3630
0 58806
cfn=(1004)
calls=363 0 
0 25410
0 13431
cfn=(1010)
calls=605 0 
0 41889
0 8674
cfn=(1014)
calls=726 0 
0 8712
0 4356
cfn=(12)
calls=363 0 
0 3630
0 18755
cfn=(1008) __mpn_rshift
calls=121 0 
0 2057
0 2904
cfn=(1008)
calls=363 0 
0 6171
0 13794
cfn=(622)
calls=605 0 
0 9680
0 66550
cfn=(1012)
calls=605 0 
0 9075
0 24661
cfn=(1002)
calls=363 0 
0 5445
0 6655
cfn=(1002)
calls=121 0 
0 1815
0 12342
cfn=(1008)
calls=121 0 
0 2057
0 10527
cfn=(1004)
calls=121 0 
0 8470
0 71584
cfn=(1008)
calls=242 0 
0 4114
0 1332
cfn=(1006)
calls=12 0 
0 384
0 2690
cfn=(1008)
calls=12 0 
0 204
0 5699

fn=(1010)
0 59363
cfn=(1006)
calls=1210 0 
0 24200
0 32312
cfn=(1016) __mpn_divrem
calls=3267 0 
0 109987
0 74924
cfn=(1006)
calls=1077 0 
0 21540
0 15706

fn=(316) malloc_consolidate
0 3098085

fn=(7826)
0 429

fn=(622)
0 333120

fn=(978) vsnprintf
0 12100
cfn=(980) _IO_no_init
calls=605 0 
0 26620
0 4840
cfn=(984) _IO_str_init_static_internal
calls=605 0 
0 32065
0 2420
cfn=(988) vfprintf
calls=605 0 
0 1332686
0 7260

fn=(996) __printf_fp
0 3630
cfn=(998)
calls=605 0 
0 935339

fn=(1002)
0 9075

fn=(1210) __gettimeofday_syscall
0 6055

fn=(7194)
0 7139

fn=(734) rand
0 2408
cfn=(736) random
calls=1204 0 
0 54141
0 2408

fn=(738) random_r
0 31265

fn=(984)
0 9075
cfn=(986) _IO_setb
calls=605 0 
0 10890
0 12100

fn=(1016)
0 109987

fn=(22)
0 133415757

fn=(314)
0 14378054
cfn=(316)
calls=11292 0 
0 3014210
0 38606127

fn=(4850)
0 54914
cfn=(314)
calls=332 0 
0 157163
0 8974
cfn=(206)
calls=332 0 
0 24236
0 5484
cfn=(206)
calls=322 0 
0 47962
0 322

fn=(7230)
0 56
cfn=(7194)
calls=14 0 
0 154
0 84
cfn=(7200)
calls=14 0 
0 168
0 70

fn=(7902)
0 65

fn=(18332)
0 1210

fn=(19420) read_int
0 4719

fn=(982) _IO_old_init
0 13310

fn=(7820)
0 330

fn=(206)
0 31603063
cfn=(316)
calls=495 0 
0 83875
0 861

fn=(736)
0 13244
cfn=(738)
calls=1204 0 
0 31265
0 9632

fn=(980)
0 6050
cfn=(982)
calls=605 0 
0 13310
0 7260

fn=(986)
0 10890

fn=(988)
0 21780
cfn=(990)
calls=605 0 
0 12100
0 12705
cfn=(992)
calls=605 0 
0 55660
0 65945
cfn=(990)
calls=968 0 
0 19360
0 15488
cfn=(992)
calls=968 0 
0 43439
0 32428
cfn=(992)
calls=242 0 
0 13547
0 32307
cfn=(996)
calls=605 0 
0 938969
0 16335
cfn=(19420)
calls=121 0 
0 1573
0 6050
cfn=(994)
calls=242 0 
0 8216
0 7986
cfn=(19420)
calls=242 0 
0 3146
0 6413
cfn=(992)
calls=121 0 
0 12826
0 2904
cfn=(622)
calls=121 0 
0 1936
0 1573

fn=(1008)
0 14603

fn=(3206)
0 16038

fn=(3904)
0 48792
cfn=(314)
calls=1284 0 
0 207738
0 74082
cfn=(914)
calls=921 0 
0 84055
0 921

fn=(6482)
0 580

ob=(1) /home/desktop/code/REGoth/build/bin/REGoth
fl=(142) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/renderer_gl.cpp
fn=(4128) bgfx::gl::RendererContextGL::updateResolution(bgfx::Resolution const&)
2599 847
+2 484
+2 363
+4 121
-5 121
+5 121
+2 121
+2 121
-2 121
+2 121
+15 363
+33 242
+4 726
-48 121
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6171
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+12 363
+1 605

fn=(14372) bgfx::gl::RendererContextGL::commit(bgfx::UniformBuffer&)
3105 484
fi=(110) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/bgfx_p.h
1104 242
fe=(142)
3105 1452
fi=(110)
1104 242
fe=(142)
3105 484
fi=(110)
1079 1452
+2 968
+7 484
fe=(142)
3113 968
fi=(110)
1052 242
-2 242
fe=(142)
3125 242
fi=(110)
1052 242
-2 242
+2 242
fe=(142)
3125 484
fi=(110)
1079 484
+2 242
fe=(142)
3154 242
fi=(110)
1081 242
+7 242
fe=(142)
3154 726
+12 484
-2 726
cob=(7)
cfi=(6)
cfn=(14376)
calls=242 0 
* 67034
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
fi=(110)
1079 726
+2 242
fe=(142)
3133 242
fi=(110)
1081 242
fe=(142)
3133 726
+48 1936

fn=(3730) bgfx::gl::RendererContextGL::submit(bgfx::Frame*, bgfx::ClearQuad&, bgfx::TextVideoMemBlitter&)
6020 847
+3 121
-3 484
+3 121
+5 484
+10 121
fi=(141) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/glcontext_glx.cpp
280 121
fe=(142)
6038 242
fi=(141)
280 121
fe=(142)
6040 121
+1 121
-1 121
+1 121
+5 484
cob=(7)
cfi=(6)
cfn=(4048)
calls=121 0 
* 66671
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+2 605
cfn=(4128)
calls=121 2599 
* 15125
fi=(137) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/timer.h
39 363
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
+1 121
fe=(142)
6053 121
fi=(137)
40 363
fe=(142)
6053 121
+5 484
+6 363
+6 242
fi=(152) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/renderer.h
28 121
fe=(142)
6070 121
cfi=(109) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/bgfx.cpp
cfn=(8144) bgfx::Frame::sort()
calls=121 1012 
* 283140
+3 242
cfi=(110)
cfn=(8150) bgfx::RenderDraw::clear()
calls=121 1239 
* 12342
fi=(151) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/hmd.h
73 121
fi=(152)
-44 121
-5 121
+1 121
+1 121
fe=(142)
6074 121
+1 121
fi=(152)
23 121
fi=(151)
+50 121
fi=(152)
-49 121
+1 121
+1 121
+2 121
+1 121
fe=(142)
6077 242
fi=(152)
31 605
+13 605
+24 242
+2 605
cfi=(153) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/float4x4_t.h
cfn=(8156) bx::float4x4_mul(bx::float4x4_t*, bx::float4x4_t const*, bx::float4x4_t const*)
calls=121 -21 
* 9075
-26 61710
+24 61710
+2 154275
cfi=(153)
cfn=(8156)
calls=30855 -21 
* 2314125
-5 92928
-2 61952
fe=(142)
6088 121
+5 121
-4 121
-1 121
+1 121
+4 121
+7 121
+18 363
+1 242
-19 121
+19 121
+1 363
+2 121
-22 1452
+13 121
-13 242
+13 121
+1 242
+10 363
-73 121
+80 121
-10 121
+10 121
fi=(141)
280 363
fi=(137)
39 363
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
+1 242
fe=(142)
7155 726
+3 121
+3 121
-3 121
+5 363
+1 484
+1 363
+1 242
+4 121
-4 121
+7 121
-8 121
+5 121
+3 242
+18 121
-2 121
+2 121
-2 121
+1 121
+1 121
+1 121
+1 121
-1 121
+3 363
7369 242
+5 121
cfi=(149) ???
cfn=(18302) bgfx::gl::stubFrameTerminatorGREMEDY()
calls=121 0 
* 121
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 968
6093 363
-50 242
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 389466
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+23 121
+1 1089
cfi=(144) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/renderer_gl.h
cfn=(8084) bgfx::gl::VertexBufferGL::update(unsigned int, unsigned int, void*, bool)
calls=121 1188 
* 8248944
* 121
-7 121
+1 1089
cfi=(144)
cfn=(4580) bgfx::gl::IndexBufferGL::update(unsigned int, unsigned int, void*, bool)
calls=121 1134 
* 8730682
* 242
-6 363
cfi=(144)
cfn=(4172) bgfx::gl::TimerQueryGL::begin()
calls=121 1374 
* 249983
* 121
7175 121
fi=(144)
1396 242
cob=(7)
cfi=(6)
cfn=(17276)
calls=121 0 
* 151046
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
fi=(155) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/ringbuffer.h
67 121
fi=(121) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/uint32_t.h
+78 121
fi=(155)
-78 363
fi=(121)
+78 363
-5 121
-60 242
+25 363
+40 242
-40 121
-25 121
+25 363
+55 121
-20 121
+20 121
fi=(155)
-87 242
fe=(142)
7179 729
-3 243
+3 486
+1 243
-4 243
cfi=(155)
cfn=(17376) bgfx::gl::TimerQueryGL::get()
calls=243 37 
* 1376716
* 486
+3 729
6133 484
cob=(7)
cfi=(6)
cfn=(4048)
calls=121 0 
* 2993206
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+4 121
fi=(110)
883 121
290 121
-1 121
-1 121
-1 121
fe=(142)
6111 121
fi=(110)
883 121
fe=(142)
6103 121
+34 121
-16 121
-16 121
-9 121
fi=(110)
290 121
-1 121
fe=(142)
6137 121
+2 121
-36 121
fi=(110)
288 121
-1 121
fe=(142)
6140 121
-4 121
-7 121
+10 242
-54 121
+18 121
-18 121
+5 121
-8 121
+29 121
-3 121
-26 121
+25 121
-1 121
-16 121
-6 242
+56 6534
+2 1210
fi=(110)
824 2420
+1 1210
+1 1210
+3 605
-1 605
+2 605
-1 605
+1 605
-1 605
+1 1210
-1 1210
+12 1210
fe=(142)
6143 605
+4 605
fi=(110)
841 605
fe=(142)
6146 2420
+1 3630
+3 484
+1 484
-1 968
6300 1210
6150 363
+1 242
+4 121
-4 121
+4 121
+9 121
+3 121
-3 121
+3 484
+4 242
+3 605
cfn=(10854) bgfx::gl::RendererContextGL::setFrameBuffer(bgfx::FrameBufferHandle, unsigned int, unsigned short, bool)
calls=121 2682 
* 120879
* 242
+5 605
+56 242
fi=(110)
295 121
fe=(142)
6236 242
+1 363
+2 242
-2 121
+2 121
-2 121
+2 484
cob=(7)
cfi=(6)
cfn=(10880)
calls=121 0 
* 5566
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+7 726
+2 121
-2 121
+2 121
+6 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6292
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(10948)
calls=121 0 
* 8107
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(13852)
calls=121 0 
* 6655
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(10948)
calls=121 0 
* 4840
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6050
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+2 121
6151 121
+14 242
+95 121
6151 121
6260 363
+2 605
6415 1210
+2 1815
+14 8470
+2 3025
+8 605
-1 605
+1 605
+2 1210
+1 605
-1 1210
+4 605
-4 605
+2 605
+2 605
-7 484
+4 968
+13 484
-17 1452
+18 1452
+4 121
-2 121
+2 121
+2 121
+2 121
-2 121
+27 1210
+45 1210
+16 726
+2 121
+2 121
-2 242
+16 484
+5 484
+2 121
+4 121
-4 121
+2 242
+19 726
+2 121
+1 121
-1 242
+1 363
+4 726
+2 121
fi=(121)
273 121
fe=(142)
6607 121
fi=(121)
273 242
fe=(142)
6608 121
cob=(7)
cfi=(6)
cfn=(13884)
calls=121 0 
* 1694
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+3 484
+2 1089
cob=(7)
cfi=(6)
cfn=(10948)
calls=121 0 
* 3509
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 484
+6 484
+2 1089
cob=(7)
cfi=(6)
cfn=(10948)
calls=121 0 
* 5687
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 484
+6 726
+10 484
+7 726
+8 726
+2 242
+2 242
-2 484
+10 726
+4 847
+2 242
+11 121
-6 121
-5 121
+11 121
-6 121
-5 121
+12 121
-7 121
+8 121
-1 121
-5 121
+1 121
+4 242
-5 121
+1 121
-2 121
+1 121
+1 121
+1 121
+4 121
2739 242
6739 726
+26 2178
+2 1936
+4 484
+2 242
-2 242
+2 484
-2 968
+2 726
cfi=(109)
cfn=(13920) bgfx::rendererUpdateUniforms(bgfx::RendererContextI*, bgfx::UniformBuffer*, unsigned int, unsigned int)
calls=242 1612 
* 5324
-2 726
+2 363
-2 363
+2 726
-2 1452
+2 1089
cfi=(109)
cfn=(13920)
calls=363 1612 
* 128018
+2 2420
+3 1210
+3 484
+2 242
cob=(7)
cfi=(6)
cfn=(13922)
calls=242 0 
* 682924
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
+8 2420
+3 2541
+2 484
cfn=(14372)
calls=242 3105 
* 91234
+3 1815
fi=(152)
78 5445
232 605
-48 605
+47 1815
+1 605
-48 1815
-25 605
+73 1210
-14 605
-59 1210
+59 605
-59 605
+59 605
-59 605
+72 2420
-72 2420
+72 1815
82 3630
231 605
+1 605
-1 605
+1 3025
cfi=(153)
cfn=(8156)
calls=605 49 
* 45375
fi=(121)
+31 1210
fi=(152)
-27 1210
fi=(121)
+27 605
fi=(152)
-27 605
cfi=(142)
cfn=(14480) bgfx::gl::RendererContextGL::setShaderUniform4x4f(unsigned char, unsigned int, void const*, unsigned int) [clone .constprop.233]
calls=605 2673 
* 271023
* 1210
78 3025
fe=(142)
6770 605
+43 3630
-3 7744
+7 38720
-15 19360
+4 38720
+2 52272
6408 242
6237 242
-34 121
+25 121
+3 121
-3 242
-25 121
+26 121
+1 121
-27 121
+28 121
cfn=(10878) bgfx::gl::stubInsertEventMarker(int, char const*)
calls=121 973 
* 121
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 605
-39 242
6821 2420
+1 4235
+1 1089
+3 3025
fi=(154) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/hash.h
25 242
+15 968
-15 242
+15 242
cfn=(14540) bx::HashMurmur2A::addAligned(void const*, int)
calls=242 +6 
* 8954
* 968
fe=(142)
6840 968
+3 847
fi=(154)
40 605
cfn=(14540)
calls=121 +6 
* 5687
fe=(142)
6847 242
fi=(154)
40 726
fe=(142)
6847 1210
fi=(154)
40 242
cfn=(14540)
calls=242 +6 
* 10164
* 1452
cfn=(14540)
calls=242 +6 
* 10164
* 1452
cfn=(14540)
calls=242 +6 
* 13189
* 1452
cfn=(14540)
calls=242 +6 
* 10164
* 1452
cfn=(14540)
calls=242 +6 
* 10164
fe=(142)
6852 484
cfi=(154)
cfn=(14544) bx::HashMurmur2A::end()
calls=242 92 
* 6050
* 242
+2 242
fi=(145) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/tinystl/unordered_map.h
171 242
fe=(142)
6854 242
+1 484
+1 484
+2 484
+1 484
+1 968
fi=(145)
171 1452
cfi=(117) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/tinystl/hash.h
cfn=(14546) tinystl::unordered_hash_node<unsigned int, unsigned int>* tinystl::unordered_hash_find<tinystl::unordered_hash_node<unsigned int, unsigned int>*, unsigned int>(unsigned int const&, tinystl::unordered_hash_node<unsigned int, unsigned int>**, unsigned long) [clone .isra.164]
calls=242 48 
* 17666
fi=(144)
998 484
+2 121
fe=(142)
6863 121
fi=(144)
1000 121
fe=(142)
6863 121
+3 242
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 52023
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 847
6171 242
6449 121
+3 121
-3 121
cfi=(110)
cfn=(8150)
calls=121 1239 
* 12342
+1 121
+3 121
-3 121
+4 121
-2 121
+1 121
+5 121
-8 121
+8 121
-8 121
+8 121
-8 121
+8 121
+35 121
+2 121
-2 121
6245 242
+5 484
-5 121
+5 242
cfn=(10906) bgfx::gl::RendererContextGL::clearQuad(bgfx::ClearQuad&, bgfx::Rect const&, bgfx::Clear const&, unsigned int, float const (*) [4])
calls=121 3183 
* 2224294
+1 242
6483 968
6924 726
+1 968
+7 242
-1 121
+2 121
+1 121
-2 121
+3 121
-3 121
+6 121
-6 242
+6 121
+3 363
+1 121
-1 363
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 23353
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+9 1694
+5 121
-3 121
+3 121
+3 726
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 28154
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+8 726
+2 1210
+1 484
+18 1815
+1 726
+14 1815
+5 726
7113 726
+5 363
+3 363
-3 363
+1 363
+1 1573
6791 726
+2 363
-2 363
-21 363
+21 1452
+2 847
6691 121
+2 121
-2 121
+2 121
cob=(7)
cfi=(6)
cfn=(10948)
calls=121 0 
* 6897
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 1089
cob=(7)
cfi=(6)
cfn=(14582)
calls=121 0 
* 3388
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+5 484
cob=(7)
cfi=(6)
cfn=(14600)
calls=121 0 
* 2904
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+2 726
+9 363
6972 2178
+1 484
+1 1210
cfn=(14778) bgfx::gl::ProgramGL::bindAttributes(bgfx::VertexDecl const&, unsigned int) const
calls=242 4237 
* 332266
* 726
+2 484
+3 242
-11 242
+17 1452
-72 968
+3 242
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 375586
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+3 121
-1 121
-1 121
+2 121
-1 121
+2 121
+1 242
6532 121
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6292
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
6640 484
-1 242
+1 242
-1 242
+2 726
cob=(7)
cfi=(6)
cfn=(10924)
calls=242 0 
* 14157
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
-69 484
cob=(7)
cfi=(6)
cfn=(10940)
calls=121 0 
* 3630
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
-97 121
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6776
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
6613 121
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 3630
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+8 121
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 5687
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+39 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=242 0 
* 10648
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
-79 121
cob=(7)
cfi=(6)
cfn=(10948)
calls=121 0 
* 8107
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 363
cob=(7)
cfi=(6)
cfn=(13852)
calls=121 0 
* 6655
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
-26 121
cob=(7)
cfi=(6)
cfn=(10948)
calls=121 0 
* 4114
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(13876)
calls=121 0 
* 2057
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
7126 363
cfn=(15854) bgfx::gl::RendererContextGL::blitMsaaFbo()
calls=121 2796 
* 7945223
+2 242
+5 121
6051 121
7133 242
+2 363
fi=(137)
39 363
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
fe=(142)
3015 121
fi=(137)
40 121
fe=(142)
3015 121
fi=(137)
40 121
fe=(142)
3015 242
fi=(137)
39 363
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
+1 242
fe=(142)
7142 121
+2 121
6126 605
cfn=(8158) bgfx::gl::OcclusionQueryGL::resolve(bgfx::Frame*, bool)
calls=121 5997 
* 3388
* 242
7054 726
+3 1089
+3 726
+3 1089
+1 2541
+6 363
-6 363
+6 363
-6 726
+6 1815
+14 726
+3 726
+1 363
-1 363
+4 1452
-4 363
+4 363
-2 363
-2 363
+2 363
+2 363
cob=(7)
cfi=(6)
cfn=(14932)
calls=363 0 
* 1218781
* 363
cob=(7)
cfi=(6)
cfn=(4036)
calls=363 0 
* 10527
* 1089
fi=(121)
145 484
-5 121
-60 242
+25 242
fe=(142)
7184 121
fi=(121)
105 121
fe=(142)
7184 121
fi=(121)
145 242
-40 121
-25 121
+25 484
fe=(142)
6926 363
+47 484
6262 242
fi=(110)
504 484
cfi=(109)
cfn=(17618) bgfx::blit(bgfx::RendererContextI*, bgfx::TextVideoMemBlitter&, bgfx::TextVideoMem const&)
calls=121 +41 
* 16765605
* 121
fe=(142)
6759 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6050
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
7130 363
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 390709
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
6870 121
fi=(144)
985 121
fe=(142)
6870 121
fi=(144)
985 242
cfn=(14662) bgfx::gl::VaoStateCache::invalidate(unsigned int)
calls=121 +21 
* 61589
+3 363
cob=(7)
cfi=(6)
cfn=(14668)
calls=121 0 
* 47431
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+2 726
cfi=(145)
cfn=(14702) tinystl::unordered_map<unsigned int, unsigned int, bgfx::TinyStlAllocator>::insert(tinystl::pair<unsigned int, unsigned int> const&)
calls=121 183 
* 53797
+2 242
fe=(142)
6872 242
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 420333
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
fi=(144)
1044 605
cfi=(112) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/tinystl/unordered_set.h
cfn=(14768) tinystl::unordered_set<unsigned int, bgfx::TinyStlAllocator>::insert(unsigned int const&)
calls=121 153 
* 11374
* 121
fe=(142)
6876 363
fi=(144)
1044 847
cfi=(112)
cfn=(14768)
calls=121 153 
* 55407
fe=(142)
6880 363
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 26702
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 605
+2 847
+1 1210
cfn=(14778)
calls=121 4237 
* 150887
* 242
+2 242
+5 363
+8 242
+2 242
fi=(144)
1044 121
fe=(142)
6900 121
fi=(144)
1044 121
fe=(142)
6900 121
fi=(144)
1044 242
cfi=(112)
cfn=(14768)
calls=121 153 
* 56078
fe=(142)
6902 605
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 28154
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+25 484
6827 363
6928 605
6828 484
6929 363
6829 363
+1 484
+1 847
+1 484

fn=(10878)
973 121

fn=(10906)
3183 1210
+3 121
-3 121
+4 242
3353 968
3196 363
+2 242
+15 242
-1 121
-1 121
+2 121
-3 121
+3 121
-1 242
-1 242
-1 121
+4 121
-4 121
+4 121
-4 121
+4 242
cob=(7)
cfi=(6)
cfn=(10908)
calls=121 0 
* 4961
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+4 605
cob=(7)
cfi=(6)
cfn=(10924)
calls=121 0 
* 6292
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 847
-1 242
+4 242
+3 363
cob=(7)
cfi=(6)
cfn=(10932)
calls=121 0 
* 6776
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(10940)
calls=121 0 
* 3630
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+3 363
+8 242
cob=(7)
cfi=(6)
cfn=(10948)
calls=121 0 
* 145442
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 1089
cob=(7)
cfi=(6)
cfn=(11012)
calls=121 0 
* 3509
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(11032)
calls=121 0 
* 1869159
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 142780
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363

fn=(17620) bgfx::gl::RendererContextGL::blitSetup(bgfx::TextVideoMemBlitter&)
2524 1089
+2 363
+8 242
-3 121
+1 121
+2 121
cob=(7)
cfi=(6)
cfn=(4048)
calls=121 0 
* 66671
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 605
cob=(7)
cfi=(6)
cfn=(10880)
calls=121 0 
* 5566
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+2 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6776
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6292
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 8107
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(13852)
calls=121 0 
* 6655
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 4840
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 242
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 7139
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 605
cob=(7)
cfi=(6)
cfn=(10924)
calls=121 0 
* 7865
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+3 605
cob=(7)
cfi=(6)
cfn=(13922)
calls=121 0 
* 422895
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 605
cob=(7)
cfi=(6)
cfn=(17640)
calls=121 0 
* 33759
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+3 121
fi=(111) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/fpumath.h
918 242
+7 121
fe=(142)
2550 121
fi=(111)
925 121
fe=(142)
2550 121
fi=(111)
925 121
fe=(142)
2552 242
-2 121
fi=(111)
925 1089
fe=(142)
2552 242
fi=(111)
928 121
+3 121
+1 121
fe=(142)
2552 242
fi=(111)
918 121
+8 121
-7 242
+2 121
-2 121
+2 121
-2 121
+8 121
-6 484
+8 121
-7 121
+7 121
-7 121
+8 121
fe=(142)
2552 121
cob=(7)
cfi=(6)
cfn=(14482)
calls=121 0 
* 47432
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+6 242
cob=(7)
cfi=(6)
cfn=(17652)
calls=121 0 
* 2178
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 726
cob=(7)
cfi=(6)
cfn=(17662)
calls=121 0 
* 24563
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+7 242
+6 968
-4 363
cob=(7)
cfi=(6)
cfn=(17724)
calls=121 0 
* 18997
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
-40 121
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 53119
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363

fn=(8158)
5997 1089
fi=(155)
37 121
fi=(121)
145 121
-5 121
+5 121
-5 121
-60 121
fe=(142)
5998 121
fi=(121)
80 121
fe=(142)
5998 363
+19 968

fn=(14778)
4237 3388
+1 484
-1 484
+1 2904
+15 1210
cob=(7)
cfi=(6)
cfn=(14780)
calls=1210 0 
* 48884
* 1210
cob=(7)
cfi=(6)
cfn=(4036)
calls=1210 0 
* 35090
* 2420
+1 3630
cob=(7)
cfi=(6)
cfn=(14804)
calls=1210 0 
* 93170
* 1210
cob=(7)
cfi=(6)
cfn=(4036)
calls=1210 0 
* 35090
* 2420
+2 2420
fi=(187) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/vertexdecl.cpp
139 1210
fe=(142)
4256 1210
fi=(187)
140 1210
-1 1210
fe=(142)
4270 1210
fi=(187)
138 1210
+2 2420
fe=(142)
4270 2420
-14 1210
+14 3630
cob=(7)
cfi=(6)
cfn=(14830)
calls=1210 0 
* 523206
* 1210
cob=(7)
cfi=(6)
cfn=(4036)
calls=1210 0 
* 35090
* 4840
-32 3630
+3 2420
+8 3630
+4 1210
fi=(187)
137 1210
fe=(142)
4251 2420
+34 3872

fn=(4582) bgfx::gl::IndexBufferGL::destroy()
4301 242
+1 121
-1 605
+1 121
-1 121
+1 121
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 49497
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 242
+1 363
cob=(7)
cfi=(6)
cfn=(4720)
calls=121 0 
* 2839697
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 484
+2 121
fi=(112)
108 121
fi=(144)
1049 242
-38 121
-3 121
+43 121
-43 121
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 75020
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
fi=(117)
48 242
fi=(145)
171 121
fi=(117)
48 121
-7 121
fi=(145)
171 242
fi=(117)
41 6292
fi=(116) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/tinystl/hash_base.h
226 121
fi=(117)
41 605
fi=(116)
226 121
+1 484
+1 242
fi=(144)
1013 363
cob=(7)
cfi=(6)
cfn=(4984)
calls=121 0 
* 1245302
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 363
cfi=(145)
cfn=(5226) tinystl::unordered_map<unsigned int, unsigned int, bgfx::TinyStlAllocator>::erase(tinystl::unordered_hash_iterator<tinystl::unordered_hash_node<unsigned int, unsigned int> const>)
calls=121 220 
* 36724
fi=(116)
191 121
fi=(144)
1049 484
fi=(112)
132 363
fi=(109)
-79 121
fi=(112)
+80 121
fi=(120) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/allocator.h
-51 726
cfi=(109)
cfn=(942) bgfx::AllocatorStub::realloc(void*, unsigned long, unsigned long, char const*, unsigned int)
calls=121 +78 
* 23595
fi=(112)
+50 484
fi=(113) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/tinystl/buffer.h
+11 242
fi=(112)
-3 121
fi=(113)
+3 121
-72 1089
cob=(2)
cfi=(7)
cfn=(914)
calls=121 -71 
* 3146
* 121
172 121
fi=(112)
-30 121
fe=(142)
4306 968

fn=(8086) bgfx::gl::VertexBufferGL::destroy()
4309 242
+1 121
-1 605
+1 121
-1 121
+1 121
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 48279
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 242
+1 363
cob=(7)
cfi=(6)
cfn=(4720)
calls=121 0 
* 3887571
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 484
+2 121
fi=(112)
108 121
fi=(144)
1049 242
-38 121
-3 121
+43 121
-43 121
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 18150
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
fi=(117)
48 242
fi=(145)
171 121
fi=(117)
48 121
-7 121
fi=(145)
171 242
fi=(117)
41 6292
fi=(116)
226 121
fi=(117)
41 605
fi=(116)
226 121
+1 605
-36 121
fi=(144)
1049 484
fi=(112)
132 363
fi=(109)
-79 121
fi=(112)
+80 121
fi=(120)
-51 726
cfi=(109)
cfn=(942)
calls=121 +78 
* 23595
fi=(112)
+50 484
fi=(113)
+11 242
fi=(112)
-3 121
fi=(113)
+3 121
-72 1089
cob=(2)
cfi=(7)
cfn=(914)
calls=121 -71 
* 3146
* 121
172 121
fi=(112)
-30 121
fe=(142)
4314 968

fn=(15854)
2796 121
+1 484
-3 363
+5 121
-5 121
+5 121
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6776
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 363
cob=(7)
cfi=(6)
cfn=(4048)
calls=121 0 
* 1790293
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 363
cob=(7)
cfi=(6)
cfn=(4048)
calls=121 0 
* 2411333
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 363
cob=(7)
cfi=(6)
cfn=(4048)
calls=121 0 
* 40293
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+7 1331
cob=(7)
cfi=(6)
cfn=(16166)
calls=121 0 
* 2360446
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+11 363
cob=(7)
cfi=(6)
cfn=(4048)
calls=121 0 
* 1307405
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+2 484

fn=(10854)
2682 1573
+3 242
fi=(141)
280 242
fe=(142)
2699 242
+31 121
+1 121
+4 121
-3 121
+3 968
-34 363
cob=(7)
cfi=(6)
cfn=(4048)
calls=121 0 
* 101398
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+2 242
+2 121
+2 121
-2 121
+6 121
cob=(7)
cfi=(6)
cfn=(4130)
calls=121 0 
* 6655
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363

fn=(14480)
2673 1815
+2 1210
cob=(7)
cfi=(6)
cfn=(14482)
calls=605 0 
* 247428
* 605
cob=(7)
cfi=(6)
cfn=(4036)
calls=605 0 
* 17545
* 1210
+5 1210

fl=(134) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/3rdparty/ocornut-imgui/imgui_internal.h
fn=(1180) ImGui::PopClipRect()
684 242
fi=(133) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/3rdparty/ocornut-imgui/imgui.cpp
2586 242
fe=(134)
684 242
fi=(133)
2588 242
fe=(134)
684 242
fi=(133)
2588 242
cfi=(136) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/3rdparty/ocornut-imgui/imgui_draw.cpp
cfn=(1182) ImDrawList::PopClipRect()
calls=242 256 
* 17061
+1 242
fi=(135) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/3rdparty/ocornut-imgui/imgui.h
871 242
fe=(134)
207 726
fi=(133)
2589 242
+1 484
fe=(134)

fn=(19326) ImGui::ColorConvertFloat4ToU32(ImVec4 const&)
128 1210
fi=(133)
1208 605
fe=(134)
128 3025
fi=(133)
1209 605
fe=(134)
128 3630
fi=(133)
1210 605
-1 605
fe=(134)
128 7865
fi=(133)
1211 605
+2 2420
-2 1210
-1 605
fe=(134)
128 1210
fi=(133)
1213 5445
fe=(134)

fn=(19304) ImGui::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
684 484
fi=(133)
2579 968
+2 968
fe=(134)
684 484
fi=(133)
2581 968
fe=(134)
684 484
fi=(133)
2581 484
cfi=(136)
cfn=(19306) ImDrawList::PushClipRect(ImVec2, ImVec2, bool)
calls=484 232 
* 53361
+1 484
fi=(135)
871 484
fe=(134)
207 1452
fi=(133)
2582 484
+1 968
fe=(134)

fl=(141)
fn=(3702) bgfx::Context::renderFrame()
fi=(110)
3976 2
fi=(109)
1592 4
cfn=(3712) bgfx::Context::rendererExecCommands(bgfx::CommandBuffer&)
calls=1 1884 
* 217
+1 2
+5 4
cfn=(3712)
calls=1 1884 
* 75
fi=(110)
3989 2
fi=(109)
1602 2
+1 2
+5 1
+1 8
fi=(138) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/sem.h
179 2
cob=(10)
cfi=(119)
cfn=(18306)
calls=1 0 
* 26
* 1
+1 2
fi=(109)
1596 6
cfi=(142)
cfn=(3730)
calls=1 6020 
* 506226
* 1
fi=(137)
39 4
cob=(2)
cfi=(7)
cfn=(1210)
calls=1 -39 
* 5
* 1
+1 3
fi=(138)
196 2
cob=(10)
cfi=(119)
cfn=(1216)
calls=1 0 
* 19
* 1
+2 2
+1 2
fi=(137)
39 2
fi=(110)
3982 1
fi=(137)
39 1
cob=(2)
cfi=(7)
cfn=(1210)
calls=1 -39 
* 5
* 1
+1 2
fi=(110)
3982 2
+1 4
fe=(141)
cob=(5)
cfi=(139)
cfn=(3240)
calls=1 0 
270 18959
fe=(141)
270 1

fl=(17) /usr/include/c++/6.2.1/functional
fn=(594) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#14}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 2105
cfi=(24) /home/desktop/code/REGoth/src/logic/scriptExternals/Stubs.cpp
cfn=(596) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#14}::operator()(Daedalus::DaedalusVM&) const
calls=2105 91 
* 189450

fn=(810) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#206}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 2954
cfi=(24)
cfn=(812) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#206}::operator()(Daedalus::DaedalusVM&) const
calls=2954 1448 
* 254044

fn=(814) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#36}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 422
cfi=(24)
cfn=(816) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#36}::operator()(Daedalus::DaedalusVM&) const
calls=422 245 
* 50640

fn=(818) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(Daedalus::DaedalusVM&)#26}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 844
cfi=(14) /home/desktop/code/REGoth/src/logic/scriptExternals/Externals.cpp
cfn=(820) Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(Daedalus::DaedalusVM&)#26}::operator()(Daedalus::DaedalusVM&) const
calls=422 530 
* 163709

fn=(19238) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#3}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 242
cfi=(44) /home/desktop/code/REGoth/src/logic/PlayerController.cpp
cfn=(19240) Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#3}::operator()(bool, float) const [clone .constprop.282]
calls=121 -60 
* 847

fn=(19248) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#7}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 121
fi=(44)
-29 363
fe=(17)

fn=(804) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#208}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 422
cfi=(24)
cfn=(806) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#208}::operator()(Daedalus::DaedalusVM&) const
calls=422 1463 
* 38402

fn=(52) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(Daedalus::DaedalusVM&)#34}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1738 5172
fi=(14)
714 2586
fe=(17)
1738 5172
1562 2586
fi=(14)
714 5172
cfi=(15) /home/desktop/code/REGoth/lib/ZenLib/daedalus/DaedalusVM.cpp
cfn=(574) Daedalus::DaedalusVM::popString[abi:cxx11](bool)
calls=2586 381 
* 639649
fi=(42) /home/desktop/code/REGoth/lib/ZenLib/daedalus/DaedalusVM.h
64 7758
cfi=(15)
cfn=(80) Daedalus::DaedalusVM::popVar(unsigned int&)
calls=2586 344 
* 85338
fi=(14)
717 10344
cfn=(686) Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(unsigned long)#2}::operator()(unsigned long) const
calls=2586 33 
* 406002
fi=(12) /home/desktop/code/REGoth/src/memory/StaticReferencedAllocator.h
41 5172
fi=(14)
719 5172
+3 38790
cfi=(1) /home/desktop/code/REGoth/src/engine/World.cpp
cfn=(34) World::WorldInstance::getFreepointsInRange(Math::t_vector<Math::t_float3, float, float, float> const&, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, Memory::GenericHandle<24, 8, 5>)
calls=2586 553 
* 601694455
+2 15516
cfi=(15)
cfn=(42) Daedalus::DaedalusVM::setReturn(int)
calls=2586 395 
* 82752
fi=(13) /usr/include/c++/6.2.1/bits/stl_vector.h
426 2586
177 5172
fi=(16) /usr/include/c++/6.2.1/ext/new_allocator.h
-67 2586
fi=(4) /usr/include/c++/6.2.1/bits/basic_string.h
+70 7758
fe=(17)
1742 10344

fn=(19246) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#6}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 121
fi=(44)
-32 363
fe=(17)

fn=(570) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#34}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 363
cfi=(24)
cfn=(572) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#34}::operator()(Daedalus::DaedalusVM&) const
calls=363 231 
* 84579

fn=(728) std::_Function_handler<void (Daedalus::DaedalusVM&), Daedalus::registerDaedalusStdLib(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#6}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1738 2408
fi=(103) /home/desktop/code/REGoth/lib/ZenLib/daedalus/DaedalusStdlib.cpp
49 1204
fe=(17)
1738 2408
fi=(103)
49 1204
cfi=(15)
cfn=(66) Daedalus::DaedalusVM::popDataValue()
calls=1204 306 
* 36120
* 1204
+2 1204
cob=(2)
cfi=(7)
cfn=(734)
calls=1204 -51 
* 58957
* 1204
* 1204
fe=(17)
1742 1204
fi=(103)
51 2408
fe=(17)
1742 2408
fi=(103)
51 2408
cfi=(15)
cfn=(42)
calls=1204 395 
* 38528
fe=(17)

fn=(19592) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#32}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 124
cfi=(24)
cfn=(19594) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#32}::operator()(Daedalus::DaedalusVM&) const
calls=124 215 
* 15004

fn=(590) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#63}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 724
cfi=(24)
cfn=(592) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#63}::operator()(Daedalus::DaedalusVM&) const
calls=724 441 
* 65160

fn=(680) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(Daedalus::DaedalusVM&)#28}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1738 6199
fi=(14)
571 6199
fe=(17)
1738 18597
fi=(14)
571 6199
fe=(17)
1738 30995
fi=(14)
571 6199
fe=(17)
1738 6199
fi=(14)
571 6199
cfi=(15)
cfn=(574)
calls=6199 381 
* 824467
+1 12398
cfi=(15)
cfn=(66)
calls=6199 306 
* 185970
fi=(42)
64 24796
cfi=(15)
cfn=(80)
calls=6199 344 
* 161174
* 30995
cfi=(15)
cfn=(80)
calls=6199 344 
* 204567
fi=(14)
576 24796
cfn=(686)
calls=6199 33 
* 973243
fi=(12)
41 12398
fi=(14)
578 12398
fi=(99) /usr/include/c++/6.2.1/bits/stl_list.h
450 6199
fi=(4)
1181 6199
fi=(12)
35 12398
+1 6199
fi=(99)
450 6199
fi=(12)
36 6199
fi=(99)
333 6199
450 6199
+1 6199
fi=(4)
110 6199
fi=(101) /home/desktop/code/REGoth/src/logic/messages/EventMessage.h
-72 6199
+3 6199
fi=(4)
+69 6199
fi=(101)
-68 6199
+1 6199
fi=(4)
+67 12398
fi=(101)
-66 6199
fi=(4)
+88 6199
fi=(5) /usr/include/c++/6.2.1/bits/char_traits.h
243 6199
fi=(4)
110 6199
fi=(101)
+3 6199
fi=(94) /home/desktop/code/REGoth/lib/ZenLib/utils/staticReferencedAllocator.h
-79 6199
fi=(4)
+76 6199
1181 6199
fi=(94)
35 6199
-1 6199
+1 6199
fi=(4)
1181 6199
132 6199
fi=(5)
243 6199
fi=(101)
+73 6199
fi=(4)
1181 6199
cob=(11)
cfi=(37)
cfn=(176)
calls=6199 254 
* 223164
* 6199
fi=(14)
583 6199
fi=(102) /home/desktop/code/REGoth/src/logic/messages/EventManager.h
24 6199
fi=(14)
583 6199
fi=(82) /home/desktop/code/REGoth/src/logic/Controller.h
72 18597
fi=(102)
-48 6199
cob=(11)
cfi=(95)
cfn=(510)
calls=6199 +19 
* 1909704
* 6199
fi=(99)
450 6199
fi=(4)
142 12398
fi=(94)
34 12398
fi=(102)
-10 6199
fi=(99)
450 6199
+1 6199
-99 6199
fi=(4)
110 6199
+22 6199
fi=(5)
243 6199
fi=(94)
35 12398
fi=(4)
+75 6199
+22 6199
fi=(5)
243 6199
fi=(101)
32 111582
fi=(100) /usr/include/c++/6.2.1/bits/list.tcc
269 24796
+16 30995
cfn=(698) void std::__cxx11::list<std::pair<Memory::GenericHandle<24, 8, 5>, std::function<void (Memory::GenericHandle<24, 8, 5>, Logic::EventMessages::EventMessage*)> >, std::allocator<std::pair<Memory::GenericHandle<24, 8, 5>, std::function<void (Memory::GenericHandle<24, 8, 5>, Logic::EventMessages::EventMessage*)> > > >::_M_assign_dispatch<std::_List_const_iterator<std::pair<Memory::GenericHandle<24, 8, 5>, std::function<void (Memory::GenericHandle<24, 8, 5>, Logic::EventMessages::EventMessage*)> > > >(std::_List_const_iterator<std::pair<Memory::GenericHandle<24, 8, 5>, std::function<void (Memory::GenericHandle<24, 8, 5>, Logic::EventMessages::EventMessage*)> > >, std::_List_const_iterator<std::pair<Memory::GenericHandle<24, 8, 5>, std::function<void (Memory::GenericHandle<24, 8, 5>, Logic::EventMessages::EventMessage*)> > >, std::__false_type)
calls=6199 +22 
* 154975
* 12398
fi=(4)
1181 6199
fi=(101)
108 6199
fi=(4)
1181 12398
cob=(11)
cfi=(37)
cfn=(176)
calls=6199 254 
* 223164
* 6199
fi=(101)
302 92985
fi=(4)
1181 18597
cob=(11)
cfi=(37)
cfn=(176)
calls=6199 254 
* 223164
* 6199
fi=(102)
28 24796
cfi=(88) /home/desktop/code/REGoth/src/logic/messages/EventManager.cpp
cfn=(706) Logic::EventManager::handleMessage(Logic::EventMessages::EventMessage*, Memory::GenericHandle<24, 8, 5>)
calls=6199 +12 
* 129342
+3 12398
+1 6199
fi=(4)
180 24796
fi=(16)
-70 6199
fi=(4)
+70 24796
fi=(100)
69 6199
+1 37194
fi=(4)
180 24796
fe=(17)
1742 49592

fn=(836) std::_Function_handler<void (Daedalus::DaedalusVM&), Daedalus::registerDaedalusStdLib(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#5}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1738 422
fi=(103)
42 422
fe=(17)
1738 844
fi=(103)
42 844
cfi=(15)
cfn=(574)
calls=422 381 
* 118640
+1 1688
cfi=(15)
cfn=(574)
calls=422 381 
* 126236
* 422
+2 422
fi=(4)
5061 844
fi=(103)
45 844
cfi=(15)
cfn=(42)
calls=422 395 
* 13504
* 422
fi=(4)
180 1266
fi=(16)
-70 422
cob=(11)
cfi=(41)
cfn=(200)
calls=422 -61 
* 39246
* 422
* 422
fi=(4)
+70 1266
fi=(16)
-70 422
cob=(11)
cfi=(41)
cfn=(200)
calls=422 -61 
* 39246
* 422
fe=(17)
1742 1266
fi=(5)
260 422
fi=(103)
45 422
fi=(5)
260 422
+2 1266
cob=(2)
cfi=(7)
cfn=(22)
calls=422 0 
* 10426
* 422
fi=(4)
5061 1688
fe=(17)

fn=(19232) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#9}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 121
fi=(44)
-21 363
fe=(17)

fn=(19244) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#5}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 121
fi=(44)
-35 363
fe=(17)

fn=(19250) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#10}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 242
cfi=(44)
cfn=(19252) Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#10}::operator()(bool, float) const [clone .constprop.281]
calls=121 -13 
* 726

fn=(746) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(Daedalus::DaedalusVM&)#36}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1738 7758
fi=(14)
750 2586
fe=(17)
1738 5172
fi=(14)
750 5172
cfi=(15)
cfn=(574)
calls=2586 381 
* 639649
fi=(42)
64 7758
cfi=(15)
cfn=(80)
calls=2586 344 
* 85338
fi=(14)
753 10344
cfn=(686)
calls=2586 33 
* 406002
fi=(12)
41 5172
fi=(14)
755 7758
fi=(4)
180 7758
fe=(17)
1742 10344

fn=(76) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#54}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 1501
cfi=(24)
cfn=(78) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#54}::operator()(Daedalus::DaedalusVM&) const
calls=1501 370 
* 69046

fn=(19230) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#8}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 121
fi=(44)
-25 363
fe=(17)

fn=(19234) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#2}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 242
cfi=(44)
cfn=(19236) Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#2}::operator()(bool, float) const [clone .constprop.283]
calls=121 -81 
* 847

fn=(19242) std::_Function_handler<void (bool, float), Logic::PlayerController::setupKeyBindings()::{lambda(bool, float)#4}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
1740 121
fi=(44)
-38 363
fe=(17)

fn=(20256) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(Daedalus::DaedalusVM&)#31}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 60
cfi=(14)
cfn=(20258) Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(Daedalus::DaedalusVM&)#31}::operator()(Daedalus::DaedalusVM&) const
calls=60 666 
* 110693

fn=(676) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#16}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
1740 12938
cfi=(24)
cfn=(678) Logic::ScriptExternals::registerStubs(Daedalus::DaedalusVM&, bool)::{lambda(Daedalus::DaedalusVM&)#16}::operator()(Daedalus::DaedalusVM&) const
calls=12938 104 
* 3635578

fl=(24)
fn=(78)
370 7505
+2 3002
cfi=(15)
cfn=(80)
calls=1501 -28 
* 49533
* 3002
+2 6004

fn=(678)
104 64690
+1 12938
-1 25876
+1 12938
cfi=(15)
cfn=(66)
calls=12938 306 
* 388140
* 25876
+1 25876
cfi=(15)
cfn=(66)
calls=12938 306 
* 996226
* 38814
+1 25876
cfi=(15)
cfn=(66)
calls=12938 306 
* 388140
* 38814
+1 25876
cfi=(15)
cfn=(66)
calls=12938 306 
* 996226
* 38814
+1 38814
cfi=(15)
cfn=(42)
calls=12938 395 
* 414016
+1 77628

fn=(812)
1448 17724
+2 2954
-2 2954
+2 2954
cfi=(15)
cfn=(66)
calls=2954 306 
* 88620
* 5908
+2 8862
cfi=(15)
cfn=(80)
calls=2954 344 
* 97482
* 8862
+2 17724

fn=(816)
245 2532
+1 422
-1 422
+1 422
cfi=(15)
cfn=(66)
calls=422 +60 
* 27008
* 844
+2 1266
cfi=(15)
cfn=(80)
calls=422 +96 
* 13926
* 1266
+2 2532

fn=(596)
91 16840
+2 2105
-2 2105
+2 4210
cfi=(15)
cfn=(80)
calls=2105 344 
* 69465
* 4210
+1 6315
cfi=(15)
cfn=(42)
calls=2105 395 
* 67360
+1 16840

fn=(572)
231 1452
+1 363
-1 726
+1 726
cfi=(15)
cfn=(574)
calls=363 381 
* 50457
* 726
+2 1089
cfi=(15)
cfn=(80)
calls=363 344 
* 11979
* 1089
+1 1089
cfi=(15)
cfn=(42)
calls=363 395 
* 11616
* 363
fi=(4)
-55 1089
fe=(24)
+56 1815

fn=(19594)
215 744
+1 124
-1 124
+1 124
cfi=(15)
cfn=(66)
calls=124 +90 
* 3720
* 248
+1 248
cfi=(15)
cfn=(66)
calls=124 +89 
* 3720
* 372
+2 372
cfi=(15)
cfn=(80)
calls=124 344 
* 4092
* 372
+2 744

fn=(592)
441 5792
+2 724
-2 724
+2 1448
cfi=(15)
cfn=(80)
calls=724 -99 
* 23892
* 1448
+1 2172
cfi=(15)
cfn=(42)
calls=724 -49 
* 23168
+1 5792

fn=(806)
1463 1688
+1 422
-1 844
+1 422
cfi=(15)
cfn=(808) Daedalus::DaedalusVM::popFloatValue()
calls=422 414 
* 15192
* 1266
+2 1266
cfi=(15)
cfn=(80)
calls=422 344 
* 13926
* 1266
+2 2110

fl=(175) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp
fn=(19516) btSimulationIslandManager::buildAndProcessIslands(btDispatcher*, btCollisionWorld*, btSimulationIslandManager::IslandCallback*)
355 1331
+3 121
cfn=(19518) btSimulationIslandManager::buildIslands(btDispatcher*, btCollisionWorld*)
calls=121 204 
* 4840
+8 1210
+31 363
+53 968

fn=(19500) btSimulationIslandManager::findUnions(btDispatcher*, btCollisionWorld*)
45 605
fi=(61) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionDispatch/btCollisionWorld.h
+89 242
cfi=(57) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp
cfn=(19484) btDbvtBroadphase::getOverlappingPairCache()
calls=121 611 
* 242
* 121
fe=(175)
-85 363
cfi=(172) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/BroadphaseCollision/btOverlappingPairCache.h
cfn=(19504) btSortedOverlappingPairCache::getNumOverlappingPairs() const
calls=121 355 
* 242
+1 242
+20 484

fn=(19506) btSimulationIslandManager::storeIslandActivationState(btCollisionWorld*)
106 484
-5 121
+5 121
-5 121
+5 242
+2 121
+1 242
-1 121
+1 242
-3 968
+17 363
fi=(176) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionDispatch/btCollisionObject.h
445 242
+10 484
fe=(175)

fn=(19492) btSimulationIslandManager::updateActivationState(btCollisionWorld*, btDispatcher*)
74 484
+7 121
-7 242
+7 847
+2 121
+2 242
-2 121
+2 242
fi=(176)
455 242
+10 242
fe=(175)
81 968
-41 242
cfi=(177) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionDispatch/btUnionFind.cpp
cfn=(19496) btUnionFind::reset(int)
calls=121 +2 
* 2420
+57 363
+1 363
-1 121
cfn=(19500)
calls=121 -52 
* 2541

fn=(19518)
204 1331
fi=(59) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btAlignedObjectArray.h
+26 242
fi=(178) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionDispatch/btSimulationIslandManager.h
48 121
fi=(59)
243 121
fe=(175)
-28 121
cfi=(177)
cfn=(19522) btUnionFind::sortIslands()
calls=121 65 
* 484
* 121
+8 242
+86 605
+9 484
+31 968

fl=(184) /home/desktop/code/REGoth/src/content/AnimationAllocator.cpp
fn=(20588) Animations::AnimationAllocator::loadAnimationVDF(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
42 2
+1 6
-1 2
+4 2
cfn=(20590) Animations::AnimationAllocator::loadAnimationVDF(VDFS::FileIndex const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
calls=2 -27 
* 4228
+1 4

fn=(20590)
19 4
fi=(8) /usr/include/c++/6.2.1/bits/stl_tree.h
677 2
fe=(184)
19 18
fi=(8)
677 2
1653 8
677 2
1653 4
fi=(5)
262 60
cob=(2)
cfi=(7)
cfn=(22)
calls=20 0 
* 664
* 20
fi=(4)
2409 40
fi=(8)
1654 40
+3 14
-2 14
-2 108
fi=(5)
260 40
fi=(8)
1654 6
-1 12
2324 12
fi=(5)
260 4
+2 8
cob=(2)
cfi=(7)
cfn=(22)
calls=2 0 
* 72
* 2
fi=(4)
2409 6
fi=(8)
-86 4
fe=(184)
39 18
fi=(8)
2323 2
fe=(184)
27 10
cfi=(185) /home/desktop/code/REGoth/lib/ZenLib/zenload/zCModelAni.cpp
cfn=(20598) ZenLoad::zCModelAni::zCModelAni(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, VDFS::FileIndex const&, float)
calls=2 +46 
* 2984
* 2
+2 6
fi=(13)
426 2
177 4
426 2
177 4
426 4
fi=(40) /usr/include/c++/6.2.1/bits/stl_construct.h
102 4
fi=(13)
+75 4
fi=(16)
-67 2
fi=(4)
+70 6
fi=(16)
-70 2
fi=(4)
+70 6
fe=(184)

fl=(67) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btMatrix3x3.h
fn=(294) btTransform::inverseTimes(btTransform const&) const
1109 67868
fi=(71) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btTransform.h
231 67868
fe=(67)
1108 67868
+1 67868
-1 67868
-1 135736
-6 135736
639 135736
1101 135736
+7 135736
-1 67868
639 67868
1101 135736
fi=(56) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btVector3.h
799 67868
fe=(67)
1101 67868
fi=(56)
798 67868
-1 67868
+2 67868
-1 67868
fe=(67)
1109 67868
fi=(56)
797 67868
fe=(67)
1109 67868
-8 67868
+8 135736
-1 67868
-6 67868
643 203604
1102 67868
fi=(56)
799 67868
-1 67868
fe=(67)
647 135736
fi=(56)
797 67868
fe=(67)
647 67868
116 67868
1102 135736
+1 67868
-1 271472
+1 67868
+1 67868
+3 67868
-4 67868
+1 67868
116 67868
1103 407208
116 203604
1104 67868
+3 67868
117 67868
1104 67868
118 67868
1107 67868
+1 67868
-4 135736
+4 67868
-4 67868
+3 67868
-3 67868
+1 67868
+3 67868
-1 67868
-2 67868
117 67868
1108 203604
-3 135736
118 67868
1108 67868
+1 135736
-4 203604
118 67868
1109 135736
-4 67868
+1 135736
+3 203604
117 67868
1106 135736
+3 67868
639 135736
+4 67868
1106 67868
647 67868
1106 67868
118 67868
1106 67868
639 135736
+4 67868
+4 67868
1106 67868
639 203604
+4 135736
+4 67868
117 67868
647 67868
-8 67868
+4 67868
+4 67868
fi=(71)
60 271472
235 67868
fe=(67)

fn=(328) operator*(btMatrix3x3 const&, btMatrix3x3 const&)
647 41164
1219 41164
647 82328
-8 82328
+8 41164
-8 164656
+8 41164
-8 41164
+8 82328
-8 82328
+8 41164
-8 41164
+8 123492
-4 41164
-4 41164
+8 123492
-4 41164
+4 82328
-4 41164
+4 41164
-4 82328
fi=(56)
-1 41164
fe=(67)
+1 246984
+4 82328
fi=(56)
-4 41164
fe=(67)
+4 123492
-8 123492
+8 41164
fi=(56)
-2 82328
-1 41164
fe=(67)
-5 41164
fi=(56)
+6 41164
fe=(67)
-6 205820
+4 41164
+4 41164
-4 41164
fi=(56)
-1 41164
fe=(67)
+1 41164
+4 41164
-4 82328
+4 82328
-4 82328
+4 41164
-4 41164
+4 41164
-4 41164
fi=(56)
+1 41164
-1 41164
fe=(67)
+4 41164
-8 41164
+8 41164
fi=(56)
-2 41164
fe=(67)
-6 41164
+4 41164
+4 82328
-8 123492
+4 82328
+4 41164
-8 41164
+4 41164
+4 41164
fi=(56)
-5 41164
+1 41164
+1 41164
fe=(67)
1300 41164

fl=(1)
fn=(0) World::WorldInstance::getFreepoints(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
595 12930
fi=(8)
893 2586
fe=(1)
595 7758
+3 2586
fi=(13)
87 7758
fe=(1)
598 13652
fi=(4)
180 1444
fi=(8)
+29 11005580
cob=(11)
cfi=(9)
cfn=(28)
calls=5502790 0 
* 72800200
* 5502790
fe=(1)
598 5502791
fi=(8)
209 5502791
fe=(1)
598 16514347
fi=(4)
196 11011556
-86 5505778
416 16517334
196 5505778
cfi=(2) /usr/include/c++/6.2.1/bits/basic_string.tcc
cfn=(2) void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.597]
calls=5505778 +10 
* 238668996
* 5505778
5061 11011556
fi=(5)
260 16515168
+2 16515168
cob=(2)
cfi=(7)
cfn=(22)
calls=5505056 0 
* 130201940
* 5505056
fi=(4)
-82 11010112
fe=(1)
600 11010112
fi=(13)
916 9036
fi=(16)
120 11952
fi=(13)
920 2988
fi=(8)
209 2988
fi=(13)
920 2988
fi=(8)
209 2988
cob=(11)
cfi=(9)
cfn=(28)
calls=2988 0 
* 39524
* 2988
fe=(1)
598 2988
fi=(8)
209 2988
fe=(1)
598 2988
+7 23283
-4 24
fi=(13)
924 48
cfi=(28) /usr/include/c++/6.2.1/bits/vector.tcc
cfn=(20700) void std::vector<Memory::GenericHandle<24, 8, 5>, std::allocator<Memory::GenericHandle<24, 8, 5> > >::_M_emplace_back_aux<Memory::GenericHandle<24, 8, 5> const&>(Memory::GenericHandle<24, 8, 5> const&)
calls=24 407 
* 43305
* 24
fe=(1)

fn=(34)
553 5172
+5 2586
-5 12930
+6 2586
-6 12930
+6 2586
-6 7758
+5 2586
fi=(13)
87 7758
fe=(1)
559 2586
cfn=(0)
calls=2586 +36 
* 601492517
fi=(11) /usr/include/c++/6.2.1/bits/stl_iterator.h
777 5172
fe=(1)
560 10344
fi=(12)
41 2
fe=(1)
560 2
fi=(12)
41 2
fe=(1)
560 2
fi=(12)
41 2
+23 8
+74 18072
fi=(4)
5061 9036
fe=(1)
560 15060
fi=(12)
138 6024
fe=(1)
563 6024
+25 5172
fi=(12)
41 10344
fe=(1)
589 5172
fi=(13)
426 2586
177 5172
fi=(16)
-67 2
cob=(11)
cfi=(41)
cfn=(200)
calls=2 -61 
* 298
* 2
fi=(13)
426 2586
177 5172
fe=(1)
592 23274
fi=(13)
87 12930
fe=(1)

fn=(444) World::WorldInstance::onFrameUpdate(double, float, Math::Matrix const&)
fi=(122) /home/desktop/code/REGoth/src/target/REGoth.cpp
379 4
fi=(188) /home/desktop/code/REGoth/src/render/RenderSystem.h
59 1
fi=(189) /home/desktop/code/REGoth/src/engine/BaseEngine.h
+20 1
fi=(122)
379 2
cfi=(123) /home/desktop/code/REGoth/src/ui/View.cpp
cfn=(1030) UI::View::update(double, Engine::Input::MouseState&, Render::RenderConfig&)
calls=1 38 
* 145
+2 2
cfi=(126) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/examples/common/debugdraw/debugdraw.cpp
cfn=(1040) ddSetTransform(void const*)
calls=1 1747 
* 14
+1 7
cfi=(126)
cfn=(1042) ddDrawAxis(float, float, float, float, Axis::Enum, float)
calls=1 1852 
* 313
+2 1
cfi=(126)
cfn=(1046) ddPush()
calls=1 731 
* 18
+1 2
cfi=(126)
cfn=(1048) ddSetColor(unsigned int)
calls=1 809 
* 4
fi=(108) /home/desktop/code/REGoth/lib/glm/glm/detail/../detail/type_mat4x4.inl
12 3
fi=(127) /home/desktop/code/REGoth/lib/glm/glm/gtc/matrix_transform.inl
+1 1
fi=(51) /home/desktop/code/REGoth/src/math/mathlib.h
334 1
fi=(108)
12 9
fi=(127)
+1 1
fi=(51)
334 1
fi=(127)
13 1
fi=(122)
386 1
fi=(127)
13 3
fi=(51)
334 1
fi=(127)
13 1
fi=(51)
334 1
fi=(127)
13 1
fi=(51)
334 1
fi=(127)
13 1
fi=(51)
334 1
fi=(127)
13 3
fi=(51)
334 3
fi=(127)
13 1
fi=(51)
334 1
fi=(127)
13 1
fi=(51)
334 1
fi=(127)
13 1
fi=(51)
334 2
fi=(127)
13 1
fi=(51)
334 1
fi=(127)
13 1
fi=(51)
334 9
fi=(122)
+52 1
cfi=(126)
cfn=(1040)
calls=1 1747 
* 1048
+6 1
-1 8
+1 1
cfi=(126)
cfn=(1106) ddDraw(Aabb const&)
calls=1 1782 
* 905
+2 2
cfi=(126)
cfn=(1040)
calls=1 1747 
* 1057
+1 2
cfi=(126)
cfn=(1048)
calls=1 809 
* 4
+1 6
cfi=(126)
cfn=(1110) ddMoveTo(float, float, float)
calls=1 1757 
* 23
+1 5
cfi=(126)
cfn=(1112) ddLineTo(float, float, float)
calls=1 1767 
* 80
+1 1
cfi=(126)
cfn=(1114) ddPop()
calls=1 1717 
* 22
+2 1
cfi=(126)
cfn=(1116) ddEnd()
calls=1 1603 
* 968
+2 1
cfi=(128) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/examples/common/imgui/imgui.cpp
cfn=(1118) imguiEndFrame()
calls=1 3315 
* 1036
+4 2
cfi=(109)
cfn=(1200) bgfx::frame(bool)
calls=1 2567 
* 12079
+3 5
fi=(106) /home/desktop/code/REGoth/src/engine/GameEngine.cpp
80 2
fi=(12)
+58 1
fi=(106)
-50 2
fi=(12)
+50 9
fi=(190) /home/desktop/code/REGoth/src/engine/GameEngine.h
-98 1
fi=(12)
+98 2
fi=(106)
-50 2
cfi=(107) /home/desktop/code/REGoth/src/logic/CameraController.cpp
cfn=(862) Logic::CameraController::onUpdateExplicit(float)
calls=1 262 
* 749
+4 1
-1 2
+1 1
-1 1
+1 4
-1 1
cfn=(880) Engine::GameEngine::drawFrame(unsigned short, unsigned short)
calls=1 +4 
* 13564
fe=(1)
387 242
+6 121
-6 968
+2 121
+1 242
+3 121
-6 121
+3 121
+3 242
cfi=(16)
cfn=(19428) Logic::ScriptEngine::onFrameStart()
calls=121 102 
* 121
+3 363
cfi=(54) /home/desktop/code/REGoth/src/physics/PhysicsSystem.cpp
cfn=(19430) Physics::PhysicsSystem::update(double)
calls=121 70 
* 48290737
+3 363
cfi=(91) /home/desktop/code/REGoth/src/content/Sky.cpp
cfn=(19546) Content::Sky::interpolate(double)
calls=121 82 
* 795091
* 605
+12 847
+3 242
-3 6850181
+3 13700362
fi=(52) /home/desktop/code/REGoth/lib/glm/glm/detail/type_vec3.inl
629 41101812
+45 6850302
-45 6850302
+45 13700604
fi=(86) /home/desktop/code/REGoth/lib/glm/glm/detail/../detail/func_geometric.inl
59 13700604
fe=(1)
416 20550906
+6 1457442
+2 1226004
+2 212576
cfi=(180) /home/desktop/code/REGoth/src/logic/MobController.cpp
cfn=(19558) Logic::MobController::onUpdate(float)
calls=16577 52 
* 1584616
cfi=(81) /home/desktop/code/REGoth/src/logic/Controller.cpp
cfn=(19556) Logic::Controller::onUpdate(float)
calls=19600 29 
* 19600
cfi=(44)
cfn=(224) Logic::PlayerController::onUpdate(float)
calls=16967 92 
* 1528283184
cfi=(44)
cfn=(224)
calls=1 152 
* 62271
* 53144
+6 1457442
fi=(12)
41 111378
fe=(1)
432 111378
+2 100632
cfi=(12)
cfn=(448) Components::AnimHandler::updateAnimations(double)
calls=33544 41 
* 27123898
-23 34251631
fi=(12)
41 242
fe=(1)
440 242
+2 363
cfi=(89) /home/desktop/code/REGoth/src/components/VobClasses.cpp
cfn=(460) VobTypes::asNpcVob(World::WorldInstance&, Memory::GenericHandle<24, 8, 5>)
calls=121 102 
* 10527
* 121
+2 242
+1 363
cfi=(44)
cfn=(848) Logic::PlayerController::onUpdateByInput(float)
calls=121 602 
* 35453
+4 363
cfi=(105) /home/desktop/code/REGoth/src/logic/DialogManager.cpp
cfn=(854) Logic::DialogManager::update(double)
calls=121 161 
* 2904
+3 121
+50 847
-50 121
cfi=(18) /home/desktop/code/REGoth/src/logic/ScriptEngine.cpp
cfn=(856) Logic::ScriptEngine::onFrameEnd()
calls=121 * 
* 121

fl=(14)
fn=(40) std::_Function_handler<void (Daedalus::DaedalusVM&), Logic::ScriptExternals::registerEngineExternals(World::WorldInstance&, Daedalus::DaedalusVM*, bool)::{lambda(Daedalus::DaedalusVM&)#34}>::_M_invoke(std::_Any_data const&, Daedalus::DaedalusVM&)
cfi=(11)
cfn=(32) World::WorldInstance::getFreepointsInRange(Math::t_vector<Math::t_float3, float, float, float> const&, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, Memory::GenericHandle<24, 8, 5>)
calls=1 592 
722 20162
724 6
cfi=(15)
cfn=(42)
calls=1 395 
* 32
fi=(13)
426 1
177 2
fi=(16)
-67 1
fi=(4)
+70 3
fi=(17)
1742 4
fe=(14)

fn=(20258)
666 60
+1 60
-1 480
+1 60
-1 60
+1 60
cfi=(15)
cfn=(574)
calls=60 381 
* 17588
fi=(42)
64 180
cfi=(15)
cfn=(80)
calls=60 344 
* 1980
fe=(14)
670 240
cfn=(686)
calls=60 33 
* 9420
fi=(12)
41 120
fe=(14)
672 120
fi=(99)
450 60
fi=(4)
1181 60
fi=(12)
35 120
+1 60
fi=(99)
450 60
fi=(12)
35 60
+1 60
fi=(99)
450 60
+1 60
fi=(4)
110 60
fi=(99)
333 60
fi=(101)
41 60
fi=(4)
+69 60
fi=(101)
-68 60
+1 60
fi=(4)
+67 120
fi=(101)
-66 60
fi=(4)
+88 60
fi=(5)
243 60
fi=(4)
110 60
fi=(101)
+3 60
fi=(4)
+19 60
-22 120
fi=(5)
243 60
fi=(4)
132 60
fi=(5)
243 60
fi=(4)
110 60
fi=(12)
-74 60
fi=(4)
+96 60
-22 120
fi=(5)
243 60
fi=(101)
460 60
+1 60
fi=(4)
110 60
fe=(14)
675 60
fi=(4)
110 60
1181 180
cob=(11)
cfi=(37)
cfn=(176)
calls=60 254 
* 12584
* 60
fi=(82)
72 60
fi=(102)
-48 60
fi=(82)
+48 120
fi=(102)
-48 60
cob=(11)
cfi=(95)
cfn=(510)
calls=60 +19 
* 21997
* 60
* 60
fi=(99)
450 60
fi=(4)
142 180
fi=(99)
450 180
+1 60
fi=(4)
142 60
fi=(99)
352 60
fi=(4)
132 60
fi=(5)
243 60
fi=(4)
142 60
fi=(12)
35 60
fi=(4)
+75 60
fi=(101)
-78 60
fi=(4)
+78 60
+22 60
fi=(5)
243 60
fi=(101)
32 120
fi=(4)
+78 60
+22 60
fi=(5)
243 60
fi=(12)
36 60
fi=(4)
+74 60
fi=(101)
-78 120
fi=(4)
132 60
fi=(5)
243 60
fi=(101)
461 60
32 780
fi=(100)
269 240
+16 300
cfn=(698)
calls=60 +22 
* 1500
* 120
fi=(4)
1181 60
fi=(101)
108 60
fi=(4)
1181 120
cob=(11)
cfi=(37)
cfn=(176)
calls=60 254 
* 2160
* 60
* 60
fi=(101)
424 60
fi=(4)
1181 120
cob=(11)
cfi=(37)
cfn=(176)
calls=60 254 
* 2160
* 60
* 60
fi=(101)
424 60
fi=(4)
1181 120
cob=(11)
cfi=(37)
cfn=(176)
calls=60 254 
* 2160
* 60
fi=(101)
424 180
fi=(51)
239 240
fi=(101)
424 120
fi=(4)
1181 180
cob=(11)
cfi=(37)
cfn=(176)
calls=60 254 
* 12584
* 60
fi=(101)
424 60
fi=(102)
28 180
fi=(101)
424 180
fi=(102)
28 60
cfi=(88)
cfn=(706)
calls=60 +12 
* 1020
+3 120
+1 60
fi=(4)
180 240
fi=(16)
-70 58
cob=(11)
cfi=(41)
cfn=(200)
calls=58 -61 
* 5394
* 58
* 60
fi=(4)
+70 240
fi=(16)
-70 60
fi=(4)
+70 240
fi=(16)
-70 60
fi=(4)
+70 240
fi=(100)
69 60
+1 300
fe=(14)
681 180
cfi=(15)
cfn=(42)
calls=60 395 
* 1920
* 60
fi=(4)
180 240
fi=(16)
-70 58
cob=(11)
cfi=(41)
cfn=(200)
calls=58 -61 
* 5394
* 58
fe=(14)
682 480

fn=(686)
33 82971
+3 11853
-3 23706
+3 23706
cfi=(13)
cfn=(86) Daedalus::DATFile::getSymbolByIndex(unsigned long)
calls=11853 781 
* 59265
fi=(94)
+5 11853
+17 35559
fe=(14)
-22 11853
+2 23706
-4 11853
fi=(94)
146 71118
fe=(14)
-94 11853
+3 23706
+2 35559
cfi=(12)
cfn=(690) Engine::BaseEngine::getWorldInstance(Memory::GenericHandle<16, 16, 7>&)
calls=11853 +81 
* 82971
+1 47412
cfi=(89)
cfn=(460)
calls=11853 +44 
* 1031211
+2 165942
+12 94824

fn=(820)
530 3376
+2 422
-2 422
+2 1266
cfi=(15)
cfn=(80)
calls=422 344 
* 13926
* 1266
+2 1688
cfn=(686)
calls=422 33 
* 66254
fi=(12)
41 844
fe=(14)
536 1688
+4 844
+8 3376
fi=(13)
796 844
fe=(14)
542 422
fi=(13)
796 2110
fe=(14)
542 422
cfi=(15)
cfn=(826) Daedalus::DaedalusVM::setReturn(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
calls=422 400 
* 64117
* 422

fl=(110)
fn=(1092) bgfx::Context::setState(unsigned long, unsigned int) [clone .isra.70]
1498 363
+4 363
+1 363
-5 363
+3 2178
-2 726
+2 1815
+2 363

fn=(3728) bgfx::UpdateBatchT<256u>::sort()
524 1210

fn=(19408) bgfx::Context::dbgTextClear(unsigned char, bool)
2224 726
fi=(121)
273 121
fe=(110)
2224 242
404 121
2226 242
404 121
2226 121
fi=(121)
273 242
fe=(110)
405 726
+2 121
fi=(121)
273 363
fe=(110)
407 242
+1 363
+23 1452
+3 363
-3 242
+3 327789
2228 726
409 363
+1 363

fn=(962) bgfx::UniformBuffer::write(void const*, unsigned int)
1061 3388
+2 847
-2 847
+2 847
-2 847
+2 2541
+4 3388
cob=(2)
cfi=(7)
cfn=(12)
calls=847 0 
* 110957
* 847
+1 847
+2 3388

fn=(974) bgfx::TextVideoMem::printfVargs(unsigned short, unsigned short, unsigned char, char const*, __va_list_tag*)
441 1815
-2 4235
+2 605
-2 605
+2 1210
+14 1210
-12 6050
fi=(143) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/string.h
322 1210
cob=(2)
cfi=(7)
cfn=(978)
calls=605 0 
* 1417991
* 605
fe=(110)
447 3630
+1 57350
+2 14035
-2 14035
+3 14035
+1 14035
-2 14035
-2 28070
+7 4840

fn=(8150)
1239 242
+10 242
+1 242
-11 242
+8 242
+4 242
-4 242
+10 242
-4 242
+4 242
+1 242
-34 242
+34 242
+1 242
-34 242
+34 242
+5 242
-8 242
+8 484
-15 242
+15 484
-14 242
+14 484
-13 242
+2 242
-29 242
+40 242
-39 242
+31 242
+8 242
-27 242
+1 242
+26 242
-24 242
+1 242
+23 242
-22 242
+1 242
+21 242
-20 242
+1 242
+19 242
-18 242
+2 242
+16 242
-12 242
+2 242
-31 242
+42 242
+1 242
-1 242
+1 242
-1 242
-1 484
+2 242
-2 1210
+1 242
-1 484
+2 242
-2 242
+1 242
+1 242
-2 242
+1 242
+1 242
-2 242
+1 242
+1 242
-2 242
+1 242
+1 242
-2 242
+1 242
+1 242
-2 242
+1 242
+1 242
-1 242
+1 242
-1 242
+1 242
-1 242
+1 242
-1 242
-1 484
+2 242
-1 242
+1 242
-2 242
+1 242
+1 484

fn=(19394) bgfx::CommandBuffer::write(void const*, unsigned int) [clone .constprop.255]
647 605
+2 363
+1 484
+1 121
+1 121
-1 121
+1 121
+1 484

fn=(906) bgfx::Context::submit(unsigned char, bgfx::ProgramHandle, bgfx::OcclusionQueryHandle, int, bool)
3811 7260
+2 605
-2 605
+2 605
fi=(115) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/handlealloc.h
113 363
-40 726
+40 363
-40 363
+3 726
fe=(110)
3813 605
+1 1210
+2 605
+6 1210
+9 4235
cfi=(109)
cfn=(918) bgfx::Frame::submit(unsigned char, bgfx::ProgramHandle, bgfx::OcclusionQueryHandle, int, bool)
calls=605 867 
* 144958
+1 4840
-16 1210
+2 1210
cfi=(112)
cfn=(908) tinystl::unordered_set<unsigned short, bgfx::TinyStlAllocator>::clear()
calls=605 130 
* 107690
* 605
fi=(115)
76 1089
fe=(110)

fn=(1022) bgfx::Context::setViewClear(unsigned char, unsigned short, unsigned int, float, unsigned char)
3562 363
+3 121
+1 121
+3 121
-3 121
+4 121
+1 121
-5 121
+1 363
+1 363
+3 121

fn=(1066) bgfx::Context::allocTransientVertexBuffer(bgfx::TransientVertexBuffer*, unsigned int, bgfx::VertexDecl const&)
2759 3993
+2 363
fi=(121)
150 363
-20 363
+20 363
fi=(115)
580 363
+1 726
+8 726
-5 1452
fe=(110)
2763 363
-2 363
+2 363
+12 363
1751 363
fi=(121)
160 363
+5 363
-5 726
-15 726
+20 726
-20 726
fe=(110)
1752 363
fi=(121)
105 726
+35 363
fe=(110)
1752 1089
2777 726
1753 363
+1 363
2780 363
-3 363
1754 726
fi=(121)
160 363
fe=(110)
2778 726
fi=(121)
160 726
+5 1089
-20 363
fe=(110)
2779 363
fi=(121)
105 726
+35 363
fe=(110)
2779 726
+2 726
+1 726
+1 2904

fn=(1078) bgfx::Context::setVertexBuffer(unsigned char, bgfx::TransientVertexBuffer const*, unsigned int, unsigned int)
3758 5082
+2 726
fi=(115)
113 363
-40 363
+40 363
-40 726
+3 1452
fe=(110)
3761 1089
1610 726
+4 363
-4 726
+1 726
+1 726
+2 1815
fi=(121)
80 363
+25 726
fe=(110)
1613 1089
3763 2904
-1 363
1273 726
+1 726
+1 1089

fn=(1086) bgfx::Context::setIndexBuffer(bgfx::TransientIndexBuffer const*, unsigned int, unsigned int)
3738 3630
+2 726
fi=(115)
113 363
-40 363
+40 363
-40 726
+3 726
fe=(110)
3741 363
1576 363
-3 363
+1 363
+1 363
+1 363
3742 2178
fi=(115)
76 1452
fe=(110)

fn=(1096) bgfx::Context::setTransform(unsigned int, unsigned short)
1548 363
3703 1815
+2 363
1548 363
+5 726
-1 363
+1 1815
3706 1452

fn=(3720) bgfx::CommandBuffer::skip(unsigned int)
676 605
+2 484
+2 121
-1 121
+1 121
+2 484

fn=(898) bgfx::Context::setViewRect(unsigned char, unsigned short, unsigned short, unsigned short, unsigned short)
3544 363
fi=(121)
618 726
fe=(110)
3547 363
fi=(121)
618 363
fe=(110)
3548 363
fi=(121)
618 1089
fe=(110)
3549 363
+1 726

fn=(972) bgfx::Context::dbgTextPrintfVargs(unsigned short, unsigned short, unsigned char, char const*, __va_list_tag*)
2232 3630
cfn=(974)
calls=605 441 
* 1599601

fn=(3718) bgfx::CommandBuffer::read(void*, unsigned int) [clone .constprop.244]
662 605
+2 605
+1 121
+1 121
+1 484

fn=(888) bgfx::Context::getHMD() [clone .isra.66]
2244 968
+4 242

fn=(930) bgfx::Context::setUniform(bgfx::UniformHandle, void const*, unsigned short)
3708 4356
+2 363
-2 363
+2 363
fi=(115)
113 363
-40 726
+40 363
-40 363
+3 726
fe=(110)
3712 1452
+1 4356
fi=(112)
148 363
fi=(117)
48 363
-7 363
fi=(112)
148 363
fi=(117)
48 363
-7 363
fi=(112)
148 363
fi=(117)
48 363
-7 2178
+7 363
-7 13794
fi=(116)
226 726
+1 1815
fe=(110)
3721 1089
cfi=(112)
cfn=(936) tinystl::unordered_set<unsigned short, bgfx::TinyStlAllocator>::insert(unsigned short const&)
calls=363 153 
* 159720
+2 726
fi=(121)
613 1452
fe=(110)
3723 1452
1030 2541
+11 363
+1 363
+32 363
-33 363
+4 363
-2 363
+2 363
+29 726
-29 726
+29 363
cfn=(962)
calls=363 -13 
* 11979
fi=(109)
-6 1815
cfi=(110)
cfn=(962)
calls=363 -7 
* 112772
fe=(110)
3724 2904
-8 726
fi=(115)
76 726
fe=(110)
3711 726

fn=(1058) bgfx::Context::checkAvailTransientVertexBuffer(unsigned int, unsigned short) const
1742 726
fi=(121)
160 363
-15 363
fe=(110)
1742 363
fi=(121)
160 726
+5 1089
-20 363
-40 363
+40 363
-40 363
fe=(110)
1743 726
fi=(121)
140 363
fe=(110)
1745 363
-2 363
+2 1815
+1 726
2664 363

fn=(3714) bgfx::CommandBuffer::read(void*, unsigned int) [clone .constprop.243]
662 2420
+2 2420
+1 484
+1 484
+1 1936

fn=(19400) bgfx::Context::setViewSeq(unsigned char, bool)
3594 605

fn=(1062) bgfx::Context::checkAvailTransientIndexBuffer(unsigned int) const [clone .isra.68]
2656 363
1727 363
-2 363
+2 1452
+1 726
2659 363

fn=(1104) bgfx::Context::allocTransform(bgfx::Transform*, unsigned short)
3698 605
928 121
3698 121
+2 121
929 484
+1 484
+21 121
-19 242
+19 121
+4 121
1541 121
955 363
3701 847

fn=(19200) bgfx::CommandBuffer::write(void const*, unsigned int) [clone .constprop.256]
647 2420
+2 1452
+1 1936
+1 484
+1 484
-1 484
+1 484
+1 1936

fn=(19208) bgfx::TextVideoMem::resize(bool, unsigned int, unsigned int)
404 121
-2 121
fi=(121)
273 242
fe=(110)
404 121
-2 121
fi=(121)
273 121
fe=(110)
405 121
+2 121
-2 605
fi=(121)
273 242
fe=(110)
407 242
+1 363
+1 363
+1 242
+16 121

fn=(19396) bgfx::CommandBuffer::write(void const*, unsigned int)
647 484
+2 121
-2 242
+2 242
+1 363
+1 484
cob=(2)
cfi=(7)
cfn=(12)
calls=121 0 
* 1452
* 121
+1 121
+1 484

fn=(894) bgfx::Context::setViewTransform(unsigned char, void const*, void const*, unsigned char, void const*)
3603 242
+4 242
-2 242
-2 484
+2 242
+2 242
+2 2420
+9 242
-2 242
+2 242
-2 242
+2 4114
+9 726
-2 484
+6 4114
909 242
-1 2299
+1 1210

fn=(1072) bgfx::Context::allocTransientIndexBuffer(bgfx::TransientIndexBuffer*, unsigned int) [clone .isra.69]
1733 363
fi=(121)
145 726
+20 363
-5 726
+5 363
-20 363
-40 726
+35 363
fe=(110)
1734 1452
2705 363
1735 363
2703 363
1736 363
2706 363
-1 363
+1 363
fi=(121)
160 726
-15 363
fe=(110)
2705 363
+2 726
fi=(121)
165 726
-60 726
+35 363
fe=(110)
2708 1089

fn=(19392) bgfx::Context::setViewName(unsigned char, char const*)
3535 847
659 121
2182 121
-1 121
659 242
cfn=(19200)
calls=121 -12 
* 2420
* 363
cfn=(19200)
calls=121 -12 
* 2420
3539 242
cob=(2)
cfi=(7)
cfn=(622)
calls=121 0 
* 1936
* 121
* 121
659 242
3539 121
694 484
-35 121
cfn=(19394)
calls=121 -12 
* 2420
3541 484
cfn=(19396)
calls=121 647 
* 4114
+1 605

fl=(131) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/examples/common/imgui/ocornut_imgui.cpp
fn=(1124) IMGUI_endFrame()
838 121
688 242
cfi=(132) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/3rdparty/ocornut-imgui/imgui_wm.cpp
cfn=(1126) ImGuiWM::WindowManager::Run()
calls=121 1065 
* 21538
+1 242
cfi=(133)
cfn=(1158) ImGui::PopStyleVar(int)
calls=121 4724 
* 5929
840 121
690 121
cfi=(133)
cfn=(1160) ImGui::Render()
calls=121 2665 
* 89903

fn=(1136) PlatformWindow::PreUpdate()
149 121

fn=(1150) PlatformWindow::Paint()
745 242
+2 121
cfi=(132)
cfn=(1152) ImGuiWM::PlatformWindow::Paint()
calls=121 976 
* 2420

fn=(19264) IMGUI_beginFrame(int, int, unsigned char, int, int, int, char, unsigned char)
833 1815
622 121
833 121
624 121
cfi=(133)
cfn=(1128) ImGui::GetIO()
calls=121 2058 
* 363
+1 121
-1 121
+1 242
+2 484
cfi=(133)
cfn=(19266) ImGuiIO::AddInputCharacter(unsigned short)
calls=121 920 
* 1452
+3 121
fi=(137)
39 242
fe=(131)
658 121
-28 605
fi=(137)
39 121
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
+1 121
fe=(131)
636 242
fi=(137)
40 121
fe=(131)
633 242
+1 121
+2 121
+3 363
+1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
+2 242
-6 242
+2 242
-2 121
+7 121
-5 484
+4 363
+14 121
cfi=(133)
cfn=(19270) ImGui::NewFrame()
calls=121 2083 
* 1536337
+1 121
cfi=(165) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/3rdparty/ocornut-imgui/widgets/gizmo.inl
cfn=(19374) ImGuizmo::BeginFrame()
calls=121 -40 
* 208120
+1 484
cfi=(133)
cfn=(19378) ImGui::PushStyleVar(int, float)
calls=121 4697 
* 4235
835 968

fn=(1132) WindowManager::InternalRun()
221 242
+2 121
cfi=(132)
cfn=(1134) ImGuiWM::WindowManager::PreUpdate()
calls=121 1187 
* 2178
+1 121
+1 121
-1 121
cfi=(132)
cfn=(1138) ImGuiWM::WindowManager::Update()
calls=121 1200 
* 15972

fn=(1154) PlatformWindow::PaintEnd()
752 242

fn=(1130) PlatformWindow::SetSize(ImVec2 const&)
123 363

fl=(58) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/BroadphaseCollision/btDbvt.h
fn=(19464) btDbvt::update(btDbvtNode*, btDbvtAabbMm&, btVector3 const&, float)
475 242
+4 242
-3 242
+3 242
-4 242
+2 242
-2 242
+1 242
+2 242
-2 242
+1 484
+2 242
-2 242
+1 484
+2 242
-2 242
+1 242
fi=(171) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/BroadphaseCollision/btDbvt.cpp
+52 242
fe=(58)
-52 726

fl=(34) /usr/include/c++/6.2.1/bits/hashtable_policy.h
fn=(154) std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
583 1089280
fi=(36) /usr/include/c++/6.2.1/bits/functional_hash.h
176 136160
fe=(34)
583 136160
fi=(36)
176 408480
cob=(11)
cfi=(35)
cfn=(158)
calls=136160 -37 
* 7637496
* 136160
* 136160
fe=(34)
446 136160
fi=(36)
176 136160
fe=(34)
446 136160
fi=(23) /usr/include/c++/6.2.1/bits/hashtable.h
1413 272320
fe=(34)
446 136160
fi=(23)
1414 272320
+3 272320
fe=(34)
-97 393136
fi=(23)
1423 241632
fe=(34)
446 241632
fi=(23)
1423 120816
fi=(2)
212 136160
fi=(4)
5061 272320
fi=(5)
260 272320
+2 408480
cob=(2)
cfi=(7)
cfn=(22)
calls=136160 0 
* 2563948
* 136160
fi=(4)
5061 272320
fe=(34)
601 136160
+1 1089280

fl=(169) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btCompoundShape.cpp
fn=(19450) btCompoundShape::getAabb(btTransform const&, btVector3&, btVector3&) const
170 2178
+5 2178
fi=(170) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btCompoundShape.h
-36 726
fi=(56)
+33 242
fi=(67)
994 242
+2 242
fi=(56)
171 242
fi=(67)
994 242
fi=(56)
173 242
fi=(67)
996 242
-2 726
fi=(56)
250 242
fi=(67)
994 242
fi=(56)
251 242
-1 242
fi=(67)
996 242
fi=(56)
251 242
fi=(67)
995 726
fi=(56)
250 242
+2 726
-2 726
763 242
250 242
+1 484
-1 242
+2 968
-1 484
762 242
250 242
fi=(70) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btScalar.h
450 242
fi=(56)
252 242
fi=(70)
450 968
fi=(56)
761 242
fe=(169)
188 242
fi=(70)
450 242
fi=(56)
250 242
+1 242
-1 484
fi=(70)
450 726
fi=(56)
250 242
fi=(70)
450 484
fi=(56)
251 484
fi=(70)
450 726
fi=(56)
252 242
-2 242
+2 242
-2 242
+2 968
797 484
-36 242
fe=(169)
188 242
fi=(56)
798 242
-36 242
+36 242
fe=(169)
188 242
fi=(56)
799 484
-36 242
fe=(169)
188 242
+1 968
+2 1452
fi=(56)
797 242
fe=(169)
180 242
fi=(56)
799 242
-1 242
+31 242
-32 242
fe=(169)
180 242
fi=(56)
799 484
-1 242
-35 484
-1 242
+67 242
-68 242
+68 1694
fe=(169)

fl=(56)
fn=(330) btTransform::inverse() const
813 123492
fi=(71)
188 41164
fe=(56)
813 123492
643 205820
+1 123492
813 41164
fi=(67)
116 41164
fe=(56)
250 41164
fi=(67)
116 41164
fe=(56)
251 41164
fi=(67)
117 41164
fe=(56)
250 41164
fi=(67)
117 41164
fe=(56)
250 41164
+1 41164
fi=(67)
116 41164
fe=(56)
251 41164
fi=(67)
117 41164
fe=(56)
250 41164
813 41164
fi=(67)
118 41164
-2 41164
+2 41164
fe=(56)
250 41164
fi=(67)
118 41164
fe=(56)
252 41164
-2 41164
+2 41164
fi=(67)
116 41164
fe=(56)
252 41164
fi=(67)
117 41164
+1 41164
fe=(56)
252 41164
fi=(71)
60 41164
fe=(56)
252 82328
fi=(71)
60 123492
192 41164
fe=(56)

fl=(105)
fn=(854)
161 1089
+1 242
+42 121
+1 968
-1 484

fl=(13)
fn=(86)
781 1201912
fi=(19) /home/desktop/code/REGoth/lib/ZenLib/daedalus/DATFile.cpp
306 300478
fe=(13)

fn=(426) World::WorldMesh::interpolateTriangleShadowValue(unsigned long, Math::t_vector<Math::t_float3, float, float, float> const&)
781 16486
fi=(52)
629 16486
fe=(13)
781 16486
fi=(52)
629 32972
fi=(51)
219 49458
fi=(52)
629 32972
fi=(51)
219 32972
fi=(52)
629 16486
fi=(51)
219 32972
fi=(52)
629 32972
fi=(51)
219 32972
fi=(52)
629 16486
fi=(51)
219 32972
fi=(52)
628 16486
-1 16486
+2 32972
fi=(51)
219 16486
-81 16486
fi=(52)
629 82430
+45 32972
-45 16486
+45 32972
-45 32972
+45 65944
fi=(86)
59 16486
fi=(52)
674 49458
fi=(86)
59 16486
fi=(52)
674 65944
fi=(86)
59 32972
fi=(52)
674 65944
fi=(86)
59 32972
fi=(52)
674 49458
fi=(51)
-88 16486
fi=(86)
59 16486
fi=(52)
674 16486
fi=(86)
59 16486
fi=(51)
586 16486
fi=(52)
+88 16486
fi=(86)
59 16486
fi=(51)
586 16486
fi=(86)
59 16486
fi=(51)
586 16486
+1 16486
+1 16486
-2 16486
+1 32972
+1 16486
138 16486
587 16486
+1 16486
+1 16486
-2 16486
+1 16486
+1 16486
138 49458
589 16486
138 16486
fi=(49) /home/desktop/code/REGoth/lib/glm/glm/detail/type_vec4.inl
-78 16486
fi=(51)
+78 65944
fi=(49)
-78 16486
fi=(51)
+78 32972
fi=(49)
-96 16486
fi=(51)
+96 16486
fi=(49)
-78 16486
-18 16486
fi=(191) /home/desktop/code/REGoth/src/engine/WorldMesh.cpp
-5 16486
fe=(13)

fl=(18)
fn=(564) Logic::ScriptEngine::runFunctionBySymIndex(unsigned long)
92 21544
+5 21544
cfi=(13)
cfn=(86)
calls=10772 781 
* 53860
* 21544
+7 10772
-7 10772
cfn=(58) Logic::ScriptEngine::runFunction(unsigned long)
calls=10772 -29 
* 699673248

fn=(502) Logic::ScriptEngine::prepareRunFunction()
51 21544
+2 21544
cfi=(15)
cfn=(504) Daedalus::DaedalusVM::pushState()
calls=10772 501 
* 86523278
+57 21544
-53 10772
+53 10772
cfi=(15)
cfn=(44) Daedalus::DaedalusVM::pushInt(int)
calls=10772 301 
* 333932

fn=(486) Logic::ScriptEngine::setInstance(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
138 94328
+3 23582
-3 23582
+3 47164
cfi=(13)
cfn=(86)
calls=23582 781 
* 117910
+2 94328
+1 70746
-1 23582
cfi=(15)
cfn=(488) Daedalus::DaedalusVM::setInstance(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ZMemory::GenericHandle<32, 32>, Daedalus::EInstanceClass)
calls=23582 439 
* 6390722

fn=(604) Logic::ScriptEngine::getNPCFromSymbol(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
341 39732
cfi=(19)
cfn=(138) Daedalus::DATFile::getSymbolByName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
calls=13244 -62 
* 4019554
* 185416

fn=(608) Logic::ScriptEngine::getItemFromSymbol(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
355 6622
+1 13244
cfi=(19)
cfn=(138)
calls=6622 -77 
* 1675366
+2 19866
+1 6622
+3 13244

fn=(58)
68 75404
+1 32316
+4 21544
cfi=(15)
cfn=(566) Daedalus::DaedalusVM::doCallOperation(unsigned int)
calls=10772 279 
* 355476
* 10772
+3 32316
cfi=(15)
cfn=(54) Daedalus::DaedalusVM::doStack(bool)
calls=10772 -31 
* 1482328
* 1251882
cfi=(15)
cfn=(54)
calls=417294 -31 
* 677993815
cfi=(15)
cfn=(54)
calls=1 268 
* 20222
* 856132
+5 43088
+1 10772
cfi=(15)
cfn=(66)
calls=10772 306 
* 497873
* 10772
+5 21544
cfi=(15)
cfn=(98) Daedalus::DaedalusVM::popState()
calls=10772 521 
* 16884418
+2 96948

fn=(856)
452 121

fl=(27) /home/desktop/code/REGoth/lib/ZenLib/daedalus/DATFile.h
fn=(558) Daedalus::PARSymbol::~PARSymbol()
111 43088
fi=(13)
426 21544
fi=(40)
102 21544
fi=(13)
+75 21544
426 10772
177 21544
426 10772
177 21544
fi=(16)
-67 10772
fi=(4)
+42 10772
+28 21544
fe=(27)
-69 43088

fn=(586) Daedalus::PARSymbol::getIntAddr(unsigned long, void*) [clone .part.452]
178 39760
fi=(13)
656 23856
fe=(27)
183 15904
+2 7952
fi=(13)
781 7952
fe=(27)
185 23856

fn=(550) Daedalus::PARSymbol::PARSymbol(Daedalus::PARSymbol const&)
111 10772
fi=(4)
+31 10772
fe=(27)
-31 86176
fi=(4)
-1 21544
+32 10772
400 21544
196 10772
cfi=(2)
cfn=(130) void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.329]
calls=10772 +10 
* 473968
fe=(27)
-85 10772
fi=(13)
656 10772
170 10772
656 10772
fe=(27)
111 64632
fi=(13)
-20 32316
fe=(27)
+20 10772
fi=(13)
656 21544
170 21544
+17 10772
-2 10772
+1 10772
+1 21544
fi=(30) /usr/include/c++/6.2.1/bits/stl_algobase.h
366 43088
+1 21544
+2 10772
fi=(13)
656 21544
fi=(30)
369 10772
fi=(13)
170 10772
-79 32316
656 21544
170 21544
+17 10772
-2 10772
+1 10772
+1 21544
fi=(30)
366 43088
+1 21544
+2 10772
fi=(13)
656 21544
170 10772
fi=(30)
369 10772
fi=(13)
91 32316
656 21544
170 21544
+17 10772
-2 10772
+1 10772
+1 21544
fi=(97) /usr/include/c++/6.2.1/bits/stl_uninitialized.h
74 43088
fe=(27)
+37 10772
fi=(13)
323 10772
fe=(27)
111 226212

fn=(172) Daedalus::PARSymbol::operator=(Daedalus::PARSymbol const&)
111 193896
fi=(4)
1181 21544
cob=(11)
cfi=(37)
cfn=(176)
calls=21544 254 
* 1228008
* 21544
fe=(27)
111 21544
fi=(28)
+59 21544
fe=(27)
-59 150808
fi=(28)
+59 21544
fi=(13)
656 64632
+81 21544
-81 43088
+81 21544
-81 21544
+81 21544
-81 21544
fi=(28)
192 64632
fi=(13)
656 86176
fi=(28)
204 43088
fi=(30)
367 21544
fi=(13)
656 64632
+81 21544
fi=(28)
218 21544
fi=(13)
656 43088
+81 21544
-81 21544
+81 21544
-81 21544
fi=(28)
192 64632
fi=(13)
656 86176
fi=(28)
204 43088
fi=(30)
367 64632
fi=(28)
218 21544
fe=(27)
111 64632
cfi=(28)
cfn=(190) std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
calls=21544 +56 
* 1077200
* 495512
fi=(30)
367 43088
fe=(27)

fl=(145)
fn=(5226)
220 363
+1 605
fi=(117)
48 242
-7 7502
fi=(116)
+95 121
+2 121
-2 121
+3 363
+2 121
-1 121
+1 242
-1 121
+1 121
-2 726
+6 363
+1 242
+1 242
+1 61
fi=(109)
-95 61
fi=(120)
+29 366
cfi=(109)
cfn=(942)
calls=61 +78 
* 11895
fi=(109)
-29 60
fi=(120)
+29 360
cfi=(109)
cfn=(942)
calls=60 +78 
* 11700
fe=(145)
225 121
+1 363

fn=(14702)
183 968
-12 484
fi=(117)
48 121
fe=(145)
171 121
fi=(117)
41 7623
fi=(116)
226 242
+1 605
fe=(145)
-10 121
fi=(109)
46 242
fi=(120)
+31 847
cfi=(109)
cfn=(942)
calls=121 +83 
* 25916
* 121
fi=(116)
+2 121
fe=(145)
194 242
+1 121
fi=(116)
79 242
fe=(145)
192 242
fi=(116)
79 121
fi=(117)
-31 242
-7 6534
fe=(145)
194 121
fi=(117)
41 242
fe=(145)
194 121
fi=(117)
41 242
fe=(145)
194 242
+1 242
fi=(117)
41 242
fe=(145)
195 121
cfi=(116)
cfn=(14710) void tinystl::unordered_hash_node_insert<unsigned int, unsigned int>(tinystl::unordered_hash_node<unsigned int, unsigned int>*, unsigned long, tinystl::unordered_hash_node<unsigned int, unsigned int>**, unsigned long)
calls=121 -92 
* 4891
+2 121
+1 121
-1 121
+1 242
-1 121
+1 121
+19 121
-1 242
+1 847

fl=(155)
fn=(17376)
37 243
fi=(121)
145 243
-5 243
+5 243
-5 243
-60 486
fi=(144)
1402 486
+34 243
-34 486
-2 640
+7 320
-7 160
+7 480
cob=(7)
cfi=(6)
cfn=(17380)
calls=160 0 
* 1256939
* 160
cob=(7)
cfi=(6)
cfn=(4036)
calls=160 0 
* 4640
* 480
+5 160
+24 160
-24 320
+25 395
-21 488
cob=(7)
cfi=(6)
cfn=(17516)
calls=122 0 
* 48190
* 122
cob=(7)
cfi=(6)
cfn=(4036)
calls=122 0 
* 3538
* 366
+10 488
cob=(7)
cfi=(6)
cfn=(17516)
calls=122 0 
* 48068
* 122
cob=(7)
cfi=(6)
cfn=(4036)
calls=122 0 
* 3538
* 366
fe=(155)
42 122
fi=(144)
1430 122
fi=(121)
145 122
fi=(144)
1430 244
fi=(121)
145 122
fi=(144)
1430 122
fi=(121)
140 122
-60 244
+25 366
+40 244
-40 122
-25 122
+25 366
+55 122
-20 122
+20 122
fe=(155)
48 244
fi=(144)
1437 610
fe=(155)

fl=(174) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp
fn=(19488) btSortedOverlappingPairCache::processAllOverlappingPairs(btOverlapCallback*, btDispatcher*)
514 1089
+4 121
-4 242
+4 242
+17 968

fl=(186) /home/desktop/code/REGoth/lib/ZenLib/vdfs/fileIndex.cpp
fn=(20610) VDFS::FileIndex::getFileByName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, VDFS::FileInfo*) const
106 20
fi=(4)
+4 2
fi=(2)
211 2
fi=(4)
110 2
fi=(2)
211 12
+6 4
-2 2
+2 2
fi=(4)
-85 2
fi=(5)
243 6
fi=(4)
702 2
fi=(32) /usr/include/c++/6.2.1/bits/stl_algo.h
4176 8
+1 6
cob=(2)
cfi=(7)
cfn=(150)
calls=2 0 
* 20
* 2
* 120
cob=(2)
cfi=(7)
cfn=(150)
calls=40 0 
* 400
* 40
* 42
-1 88
fi=(36)
176 4
cob=(11)
cfi=(35)
cfn=(158)
calls=2 -37 
* 166
* 2
* 2
fi=(34)
446 2
fi=(36)
176 2
fi=(34)
446 2
fi=(23)
1413 4
fi=(34)
446 2
fi=(23)
1414 4
fi=(4)
180 6
fi=(16)
-70 4
cob=(11)
cfi=(41)
cfn=(200)
calls=2 -61 
* 186
* 2
fe=(186)
+9 18
fi=(2)
219 8
cob=(11)
cfi=(37)
cfn=(632)
calls=2 -82 
* 288
* 2
* 2
fi=(4)
-91 2
+32 4
fi=(5)
290 6
cob=(2)
cfi=(7)
cfn=(12)
calls=2 0 
* 20
* 2
* 6
-2 4
fe=(186)

fn=(20600) VDFS::FileIndex::getFileData(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&) const
139 20
fi=(4)
-29 4
fi=(2)
211 10
+6 2
-2 2
+2 2
fi=(4)
-85 2
fi=(5)
243 4
fi=(4)
702 4
fi=(32)
4176 6
+1 6
cob=(2)
cfi=(7)
cfn=(150)
calls=2 0 
* 20
* 2
* 120
cob=(2)
cfi=(7)
cfn=(150)
calls=40 0 
* 400
* 40
* 42
-1 84
fi=(4)
110 2
fe=(186)
+34 6
fi=(4)
-12 2
fi=(5)
243 2
fi=(4)
110 2
fe=(186)
+34 2
cfn=(20610)
calls=2 -38 
* 1532
* 8
fi=(4)
+36 6
fi=(16)
-70 2
fi=(4)
+70 6
fi=(16)
-70 2
cob=(11)
cfi=(41)
cfn=(200)
calls=2 -61 
* 186
* 2
fe=(186)
+40 16
fi=(2)
+69 10
cob=(11)
cfi=(37)
cfn=(632)
calls=2 -82 
* 288
* 2
* 2
fi=(4)
-91 2
+32 4
fi=(5)
290 6
cob=(2)
cfi=(7)
cfn=(12)
calls=2 0 
* 20
* 2
* 6
fe=(186)

fl=(94)
fn=(494) Logic::ScriptEngine::setInstanceNPC(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ZMemory::GenericHandle<17, 32>)
41 47164
fi=(18)
147 47164
fe=(94)
41 47164
+17 94328
-2 47164
fi=(18)
+94 282984
cfi=(15)
cfn=(488)
calls=47164 439 
* 15163226
+1 94328
fe=(94)
35 47164
-1 94328

fn=(498) Logic::ScriptEngine::setInstanceItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, ZMemory::GenericHandle<17, 32>)
41 23160
fi=(18)
154 23160
fe=(94)
41 23160
+17 46320
-2 23160
fi=(18)
157 138960
cfi=(15)
cfn=(488)
calls=23160 439 
* 6276360
+1 46320
fe=(94)
35 23160
-1 46320

fl=(132)
fn=(1140) ImGuiWM::WindowManager::UpdatePlatformwWindowActions()
1244 242
fi=(99)
859 121
fe=(132)
1244 484
+1 242
+65 726

fn=(1144) ImGuiWM::WindowManager::UpdateOrphans()
1351 726
fi=(99)
859 121
fe=(132)
1351 242
+1 242
+17 968

fn=(1138)
1200 1210
+1 121
cfn=(1140)
calls=121 +43 
* 1815
+1 242
cfn=(1142) ImGuiWM::WindowManager::UpdateDockActions()
calls=121 1313 
* 2541
+1 242
cfn=(1144)
calls=121 1351 
* 2299
fi=(99)
859 484
fe=(132)
1205 363
fi=(99)
859 242
fe=(132)
1218 242
+8 242
cfn=(1148) ImGuiWM::WindowManager::UpdateDragWindow()
calls=121 1461 
* 363
+2 121
+1 121
-1 121
+1 121
+2 121
977 121
1231 363
979 121
1234 242
+6 121
+1 968
-10 121
cfi=(131)
cfn=(1150)
calls=121 745 
* 2783
* 121

fn=(1142)
1313 242
fi=(99)
859 121
fe=(132)
1313 484
fi=(99)
859 121
fe=(132)
1313 121
fi=(99)
859 242
fe=(132)
1314 242
+34 968

fn=(1156) ImGuiWM::WindowManager::Paint(ImGuiWM::PlatformWindow*)
999 121
364 242
-6 363

fn=(1134)
1187 484
+1 363
+2 242
cfi=(131)
cfn=(1136)
calls=121 149 
* 121
* 121
fi=(99)
859 121
fe=(132)
1193 242
+4 484

fn=(1152)
976 121
+1 121
-1 121
+1 121
cfi=(131)
cfn=(1154)
calls=121 752 
* 121
+1 363
cfn=(1156)
calls=121 +21 
* 726
+1 242
+1 121
-1 242
cfi=(131)
cfn=(1154)
calls=121 752 
* 121

fn=(1148)
1461 242
+41 121

fn=(1126)
1065 121
+1 121
-1 121
+1 121
+2 121
cfi=(133)
cfn=(1128)
calls=121 2058 
* 363
+1 484
cfi=(131)
cfn=(1130)
calls=121 123 
* 363
+2 363
cfi=(131)
cfn=(1132)
calls=121 221 
* 18876
+1 121
+1 121
-1 121
+1 121

fl=(185)
fn=(20598)
73 4
+3 2
-3 10
fi=(4)
+69 4
fe=(185)
-69 4
fi=(4)
+59 2
fi=(5)
243 2
fe=(185)
79 2
fi=(4)
+31 4
+22 2
fi=(5)
243 2
fe=(185)
73 2
fi=(13)
+14 18
fe=(185)
-11 2
fi=(13)
+11 6
fe=(185)
-8 2
cfi=(186)
cfn=(20600)
calls=2 +60 
* 2888
* 4
+2 4
+25 16
fi=(13)
+71 4
fe=(185)

fl=(55) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionDispatch/btCollisionWorld.cpp
fn=(19448) btCollisionWorld::updateSingleAabb(btCollisionObject*)
148 968
fi=(176)
369 242
fe=(55)
148 484
+2 968
cfi=(169)
cfn=(19450)
calls=242 +20 
* 32912
fi=(56)
-17 242
fe=(55)
+23 242
fi=(56)
+32 726
+1 726
+1 726
-19 726
+1 726
+1 726
fe=(55)
-17 968
+13 484
-3 242
+5 1452
cfi=(57)
cfn=(19460) btDbvtBroadphase::setAabb(btBroadphaseProxy*, btVector3 const&, btVector3 const&, btDispatcher*)
calls=242 286 
* 33517
+17 968
-32 484

fn=(358) btCollisionWorld::rayTestSingleInternal(btTransform const&, btTransform const&, btCollisionObjectWrapper const*, btCollisionWorld::RayResultCallback&)::BridgeTriangleRaycastCallback::reportHit(btVector3 const&, float, int, int)
358 37114
+12 74228
-9 37114
+12 74228
-11 37114
fi=(56)
250 37114
fi=(61)
-58 37114
fi=(56)
+59 37114
-1 37114
+1 111342
fi=(61)
-59 37114
fi=(56)
+59 37114
fi=(61)
-59 74228
fi=(56)
+59 37114
fe=(55)
373 37114
fi=(56)
250 37114
+2 111342
-2 111342
fi=(61)
-58 37114
fi=(56)
+58 37114
+2 111342
fe=(55)
373 37114
fi=(56)
250 37114
+2 37114
fe=(55)
373 37114
fi=(56)
252 37114
fi=(61)
-60 74228
fe=(55)
373 37114
cfn=(360) btCollisionWorld::rayTestSingleInternal(btTransform const&, btTransform const&, btCollisionObjectWrapper const*, btCollisionWorld::RayResultCallback&)::LocalInfoAdder2::addSingleResult(btCollisionWorld::LocalRayResult&, bool)
calls=37114 475 
* 2594020
+1 74228

fn=(360)
475 111342
+5 37114
-1 37114
-1 37114
+1 37114
+1 37114
+3 148456
cfi=(54)
cfn=(362) Physics::PhysicsSystem::raytrace(Math::t_vector<Math::t_float3, float, float, float> const&, Math::t_vector<Math::t_float3, float, float, float> const&, Physics::CollisionShape::ECollisionType)::FilteredRayResultCallback::addSingleResult(btCollisionWorld::LocalRayResult&, bool)
calls=37114 269 
* 1925968
+1 111342
+2 111342

fn=(280) btCollisionWorld::rayTestSingleInternal(btTransform const&, btTransform const&, btCollisionObjectWrapper const*, btCollisionWorld::RayResultCallback&)
275 678680
fi=(64) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btSphereShape.h
29 67868
fe=(55)
275 67868
fi=(64)
29 67868
cfi=(62) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btConvexInternalShape.cpp
cfn=(282) btConvexInternalShape::btConvexInternalShape()
calls=67868 -8 
* 950152
* 67868
+2 67868
-2 67868
fi=(56)
567 67868
fi=(64)
33 271472
fe=(55)
282 135736
fi=(65) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/BroadphaseCollision/btBroadphaseProxy.h
151 67868
fe=(55)
334 135736
457 135736
fi=(79) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btConvexInternalShape.h
50 203604
cfi=(80) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btConvexShape.cpp
cfn=(372) btConvexShape::~btConvexShape()
calls=67868 -5 
* 67868
fe=(55)
570 542944
fi=(66) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/NarrowPhaseCollision/btRaycastCallback.h
24 203604
fe=(55)
553 203604
+2 407208
cfi=(67)
cfn=(294)
calls=67868 1109 
* 9365784
fi=(56)
799 67868
fe=(55)
555 271472
+2 67868
fi=(56)
798 67868
-1 67868
+1 67868
-1 67868
fe=(55)
555 135736
fi=(58)
1060 67868
fe=(55)
555 67868
fi=(56)
799 67868
fe=(55)
555 67868
fi=(56)
799 67868
fe=(55)
555 67868
fi=(67)
+92 271472
-4 135736
-4 67868
+8 271472
-4 135736
-4 67868
+4 203604
-4 135736
+4 67868
-4 67868
fi=(58)
1060 67868
fi=(56)
798 67868
-1 67868
+2 67868
251 67868
797 67868
250 67868
+1 67868
-1 67868
+2 203604
fi=(70)
447 339340
fi=(56)
229 67868
-23 67868
+23 67868
-22 67868
+22 67868
-23 67868
+1 67868
+1 67868
fi=(58)
1067 203604
+1 814416
+1 203604
fi=(56)
250 203604
+1 67868
fi=(59)
94 67868
+1 67868
fi=(56)
252 67868
fi=(59)
96 67868
+1 67868
fi=(56)
250 67868
+2 203604
cfi=(59)
cfn=(300) btAlignedObjectArray<btDbvtNode const*>::reserve(int) [clone .part.152]
calls=67868 +46 
* 28697398
* 271472
fi=(59)
-15 34748416
-2 17713548
fi=(60) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btAabbUtil2.h
113 407208
fi=(59)
243 203604
fi=(58)
1082 542944
fi=(60)
114 135736
-1 67868
+1 271472
-1 475076
fi=(58)
1069 2951572
+16 2951572
fi=(60)
102 2951572
-3 2951572
fi=(59)
+86 2951572
fi=(60)
-83 2951572
fi=(59)
+83 2951572
fi=(60)
-86 2951572
fi=(59)
+86 2951572
fi=(60)
-83 2951572
fi=(58)
1085 2951572
+2 11806288
+1 8854716
fi=(60)
99 2951572
fi=(58)
1088 2951572
fi=(60)
102 2951572
-3 2951572
+3 2951572
-3 2951572
+3 2951572
-3 2951572
+5 5903144
fi=(58)
1085 67868
fi=(60)
102 67868
-3 67868
fi=(59)
+86 67868
fi=(60)
-83 67868
fi=(59)
+83 67868
fi=(60)
-86 67868
fi=(59)
+86 67868
fi=(60)
-83 67868
fi=(58)
1085 67868
+2 271472
+1 203604
fi=(60)
99 67868
fi=(58)
1088 67868
fi=(60)
102 67868
-3 67868
+3 67868
-3 67868
+3 67868
-3 67868
+5 135736
-4 2574122
+1 2574122
-1 2574122
+1 2574122
-1 2574122
+1 2574122
-1 2574122
+1 2574122
+3 5148244
+10 1858678
-15 1858678
+15 1858678
-14 1858678
+14 7434712
+2 3717356
-3 6970296
+3 3485148
+2 1524418
+4 1524418
-2 1524418
+2 7629558
fi=(58)
1116 3087308
fi=(59)
117 135736
+2 135736
fi=(68) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btAlignedAllocator.h
-23 135736
cfi=(69) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btAlignedAllocator.cpp
cfn=(376) btAlignedFreeInternal(void*)
calls=67868 258 
* 9261216
* 67868
fi=(58)
1101 3033900
+2 4427358
+5 1475786
+1 1475786
-1 1475786
+1 4427358
fe=(55)
537 41164
fi=(71)
241 41164
fi=(59)
-63 41164
fe=(55)
537 41164
fi=(59)
178 164656
fi=(71)
+63 41164
fi=(170)
96 41164
fi=(71)
241 41164
cfn=(324) btTransform::operator()(btVector3 const&) const
calls=41164 94 
* 1481904
-1 123492
+1 82328
-1 41164
cfi=(67)
cfn=(328)
calls=41164 647 
* 4116400
60 41164
fi=(61)
227 41164
fe=(55)
531 41164
fi=(67)
116 82328
fi=(71)
-56 41164
fi=(61)
227 41164
fe=(55)
531 41164
fi=(71)
60 41164
fi=(192) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h
-25 41164
fi=(71)
+25 41164
fi=(67)
+56 41164
+1 41164
-1 41164
+1 41164
fi=(192)
-82 82328
fi=(67)
+82 41164
+1 41164
fi=(192)
-83 41164
fe=(55)
468 41164
fi=(67)
117 41164
+1 82328
fe=(55)
467 41164
fi=(61)
227 41164
fi=(192)
35 82328
fi=(67)
+83 41164
fi=(61)
227 41164
fe=(55)
467 41164
fi=(192)
35 82328
fi=(61)
227 41164
fe=(55)
465 123492
+3 41164
+63 123492
cfn=(281) btCollisionWorld::rayTestSingleInternal(btTransform const&, btTransform const&, btCollisionObjectWrapper const*, btCollisionWorld::RayResultCallback&)'2
calls=41164 275 
* 284345715
* 82328
fi=(58)
1067 407208
+2 339340
fe=(55)

fn=(281)
275 411640
fi=(64)
29 41164
fe=(55)
275 41164
fi=(64)
29 41164
cfi=(62)
cfn=(282)
calls=41164 -8 
* 576296
* 41164
+2 41164
-2 41164
fi=(56)
567 41164
fi=(64)
33 164656
fe=(55)
282 82328
fi=(65)
151 41164
fe=(55)
334 82328
fi=(79)
50 123492
cfi=(80)
cfn=(372)
calls=41164 -5 
* 41164
fe=(55)
570 329312
378 123492
cfi=(56)
cfn=(330)
calls=41164 813 
* 2058200
fi=(71)
119 41164
-17 41164
+17 41164
-17 82328
cfn=(324)
calls=41164 -8 
* 1481904
+17 41164
-17 123492
+17 41164
-17 41164
fe=(55)
379 82328
fi=(71)
102 41164
cfn=(324)
calls=41164 -8 
* 1481904
* 82328
fe=(55)
383 41164
-3 41164
+3 41164
-3 41164
+3 41164
-30 370476
cfi=(72) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp
cfn=(332) btTriangleRaycastCallback::btTriangleRaycastCallback(btVector3 const&, btVector3 const&, unsigned int)
calls=41164 32 
* 493968
fi=(67)
116 82328
fe=(55)
390 41164
-37 41164
+36 41164
+1 41164
-37 82328
fi=(67)
116 82328
+1 82328
fe=(55)
353 82328
fi=(67)
117 82328
+1 123492
fi=(71)
-53 41164
fi=(67)
+53 41164
fi=(71)
-53 41164
fe=(55)
389 41164
fi=(71)
65 41164
fe=(55)
390 41164
fi=(71)
65 41164
fe=(55)
390 41164
cfi=(73) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp
cfn=(336) btBvhTriangleMeshShape::performRaycast(btTriangleCallback*, btVector3 const&, btVector3 const&)
calls=41164 94 
* 274013551
fi=(66)
24 123492
cfi=(78) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btTriangleCallback.cpp
cfn=(368) btTriangleCallback::~btTriangleCallback()
calls=41164 -6 
* 41164
* 41164
fe=(55)

fn=(19446) btCollisionWorld::performDiscreteCollisionDetection()
215 242
fi=(61)
503 121
fe=(55)
215 484
+5 605
-25 605
+7 484
cfn=(19448)
calls=242 -54 
* 78529
* 242
-7 968
+5 242
-3 484
+3 242
-5 121
+27 363
-11 484
cfi=(57)
cfn=(19466) btDbvtBroadphase::calculateOverlappingPairs(btDispatcher*)
calls=121 391 
* 30371
* 121
+16 242
+1 847
+3 121
-3 242
+3 121
-3 121
+3 363
-3 121
cfi=(173) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp
cfn=(19486) btCollisionDispatcher::dispatchAllCollisionPairs(btOverlappingPairCache*, btDispatcherInfo const&, btDispatcher*)
calls=121 +13 
* 4114
-8 121
+8 121
cfi=(57)
cfn=(19484)
calls=121 611 
* 242
* 363

fn=(264) btCollisionWorld::rayTest(btVector3 const&, btVector3 const&, btCollisionWorld::RayResultCallback&) const
991 203604
fi=(56)
643 33934
fe=(55)
991 33934
-63 135736
fi=(56)
642 33934
fe=(55)
928 101802
fi=(56)
642 33934
fe=(55)
928 67868
fi=(56)
643 33934
fe=(55)
928 33934
fi=(56)
644 33934
fe=(55)
928 33934
fi=(56)
645 33934
-3 33934
fi=(71)
152 33934
fi=(56)
643 33934
fi=(71)
152 33934
fi=(56)
644 33934
+1 33934
-3 33934
+1 33934
+1 33934
+1 33934
-3 33934
+1 33934
+1 33934
fi=(71)
152 33934
fi=(56)
798 33934
-1 33934
+1 33934
+1 33934
-2 33934
645 33934
fi=(71)
152 33934
fi=(56)
799 33934
642 33934
+1 33934
+1 33934
+1 33934
251 33934
642 33934
250 33934
643 33934
251 33934
644 33934
250 33934
645 33934
250 33934
+2 135736
fi=(70)
447 101802
fi=(56)
229 67868
-23 33934
+1 33934
+1 33934
fe=(55)
939 169670
+1 33934
-1 33934
+1 67868
+1 33934
-1 33934
+1 101802
+57 33934
-54 33934
fi=(56)
797 33934
fe=(55)
942 33934
fi=(56)
798 33934
fe=(55)
998 33934
fi=(56)
797 33934
+2 33934
-1 33934
fe=(55)
998 67868
fi=(56)
799 33934
fe=(55)
943 33934
+55 135736
fi=(56)
250 33934
+1 33934
+1 33934
-2 33934
+2 33934
fe=(55)
946 33934
fi=(56)
133 101802
fe=(55)
998 33934
cfi=(57)
cfn=(268) btDbvtBroadphase::rayTest(btVector3 const&, btVector3 const&, btBroadphaseRayCallback&, btVector3 const&, btVector3 const&)
calls=33934 228 
* 592520923
+8 169670
-66 203604
+1 101802

fn=(276) btSingleRayCallback::process(btBroadphaseProxy const*)
955 271472
+1 67868
-1 67868
-3 203604
+9 67868
-9 67868
+6 67868
+3 203604
cfi=(61)
cfn=(278) btCollisionWorld::RayResultCallback::needsCollision(btBroadphaseProxy*) const
calls=67868 233 
* 542944
* 135736
+26 339340
-8 203604
fi=(192)
35 67868
fi=(176)
369 135736
fi=(192)
35 135736
fe=(55)
269 67868
fi=(176)
369 67868
fi=(192)
35 135736
fe=(55)
269 67868
cfn=(280)
calls=67868 +6 
* 577589963
* 135736

fl=(74) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp
fn=(338) btQuantizedBvh::reportRayOverlappingNodex(btNodeOverlapCallback*, btVector3 const&, btVector3 const&) const
777 41164
+9 41164
+2 41164
fi=(56)
133 123492
fe=(74)
786 41164
+2 205820
cfn=(340) btQuantizedBvh::walkStacklessQuantizedTreeAgainstRay(btNodeOverlapCallback*, btVector3 const&, btVector3 const&, btVector3 const&, btVector3 const&, int, int) const
calls=41164 562 
* 272943287
* 82328
-9 82328

fn=(340)
562 535132
fi=(56)
797 41164
+1 41164
fe=(74)
562 164656
fi=(56)
797 41164
+1 82328
+1 41164
fe=(74)
562 82328
fi=(59)
178 41164
fi=(56)
+72 41164
fi=(59)
-72 41164
fi=(56)
+73 41164
799 41164
250 41164
+1 41164
-1 41164
+2 123492
fi=(70)
447 329312
fi=(56)
229 123492
-23 41164
+1 41164
+1 41164
+42 41164
+1 41164
+1 41164
fe=(74)
585 41164
fi=(56)
250 41164
+2 82328
fe=(74)
585 232512
+1 123492
+1 273676
+5 300368
+1 37546
fi=(193) /home/desktop/code/REGoth/lib/bullet3/src/LinearMath/btMinMax.h
54 37546
fi=(56)
171 37546
+1 37546
fe=(74)
593 75092
fi=(56)
173 37546
fe=(74)
593 75092
fi=(56)
173 37546
fi=(193)
54 37546
fi=(56)
171 37546
+1 37546
fi=(193)
54 300368
-9 187730
fi=(56)
797 37546
fi=(193)
45 112638
fi=(56)
798 37546
fi=(193)
45 75092
fi=(56)
778 37546
fi=(193)
45 75092
fi=(56)
799 37546
-22 37546
fi=(75) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/BroadphaseCollision/btQuantizedBvh.h
377 37546
fi=(193)
54 37546
fi=(56)
779 37546
fi=(75)
376 37546
fi=(193)
54 37546
fi=(75)
378 37546
fi=(193)
54 112638
-11 37546
fe=(74)
592 28944
+1 3618
fi=(193)
54 3618
fi=(56)
171 3618
+1 3618
fe=(74)
593 7236
fi=(56)
173 3618
fe=(74)
593 7236
fi=(56)
173 3618
fi=(193)
54 3618
fi=(56)
171 3618
+1 3618
fi=(193)
54 28944
-9 18090
fi=(56)
797 3618
fi=(193)
45 10854
fi=(56)
798 3618
fi=(193)
45 7236
fi=(56)
778 3618
fi=(193)
45 7236
fi=(56)
799 3618
-22 3618
fi=(75)
377 3618
fi=(193)
54 3618
fi=(56)
779 3618
fi=(75)
376 3618
fi=(193)
54 3618
fi=(75)
378 3618
fi=(193)
54 10854
-11 3618
fi=(75)
377 7236
fi=(193)
54 7236
fi=(75)
377 75092
fi=(193)
54 75092
fi=(56)
797 37546
fi=(75)
376 37546
fi=(193)
54 37546
-11 37546
fi=(75)
378 37546
fi=(56)
777 37546
fi=(193)
43 37546
fi=(56)
798 37546
fi=(75)
371 37546
fi=(56)
799 37546
-21 37546
fi=(75)
371 37546
fi=(56)
779 37546
fi=(75)
372 37546
+1 37546
-1 37546
+1 37546
-2 37546
+1 37546
+1 37546
fe=(74)
606 75092
fi=(56)
797 3618
fi=(75)
376 3618
fi=(193)
54 3618
-11 3618
fi=(75)
378 3618
fi=(56)
777 3618
fi=(193)
43 3618
fi=(56)
798 3618
fi=(75)
371 3618
fi=(56)
799 3618
-21 3618
fi=(75)
371 3618
fi=(56)
779 3618
fi=(75)
372 3618
+1 3618
-1 3618
+1 3618
-2 3618
+1 3618
+1 3618
fe=(74)
606 89564
fi=(60)
99 329312
+2 41164
+12 41164
-14 41164
+3 41164
-1 41164
+1 41164
+11 123492
-11 246984
-2 82328
+2 41164
-2 41164
+14 164656
-1 41164
-13 123492
+1 123492
+13 123492
-1 164656
214 41164
fe=(74)
628 41164
fi=(60)
214 82328
+1 41164
+1 41164
-2 164656
+1 123492
-1 2515748
fe=(74)
628 2515748
fi=(60)
214 5031496
+1 2515748
+1 2515748
-2 10062992
+1 7547244
+1 2515748
-1 5031496
+1 22641732
fe=(74)
635 5031496
fi=(60)
216 41164
-1 82328
+1 370476
fe=(74)
635 82328
+36 2347980
+2 1492558
+1 1492558
-68 2985116
+76 82328
+3 329312
-98 25326
-2 28944
+1 288148
fi=(75)
76 1064354
fe=(74)
679 1064354
fi=(75)
76 1064354
fe=(74)
678 3193062
-72 2169872
fi=(75)
436 1395432
fe=(74)
638 1395432
fi=(75)
436 1395432
fi=(60)
99 2790864
fi=(75)
436 1395432
+1 4186296
+1 4186296
fe=(74)
639 1395432
fi=(75)
436 1395432
fi=(56)
171 1395432
+17 2790864
fi=(75)
437 4186296
fi=(56)
172 1395432
+17 1395432
fi=(75)
438 2790864
fi=(56)
189 2790864
fi=(75)
438 1395432
fi=(56)
173 1395432
+17 1395432
fi=(75)
436 2790864
fi=(60)
99 1395432
fi=(56)
+91 2790864
fi=(75)
436 1395432
fi=(56)
171 1395432
fi=(75)
437 2790864
fi=(56)
188 2790864
fi=(60)
-89 1395432
fi=(75)
437 1395432
fi=(56)
172 1395432
fi=(60)
-73 1395432
fi=(56)
+90 1395432
fi=(75)
438 2790864
fi=(56)
189 1395432
fi=(75)
438 1395432
fi=(60)
102 1395432
fi=(56)
+71 1395432
fi=(60)
-72 1395432
fi=(56)
+89 2790864
fi=(60)
-91 1395432
+3 1395432
-3 1395432
+3 2790864
-3 1395432
+3 1395432
+2 2790864
-4 2781656
+1 1390828
-1 1390828
+1 2781656
-1 1390828
+1 1390828
+3 2781656
+9 1389628
+1 1389628
-15 1389628
+15 1389628
-14 1389628
+14 4168884
+2 2779256
-3 5549184
+3 2774592
+2 1382922
+4 1382922
-2 1382922
+2 5531688
fe=(74)
665 2765844
+2 125048
fi=(75)
84 375144
+6 125048
fe=(74)
667 250096
cfi=(73)
cfn=(348) btBvhTriangleMeshShape::performRaycast(btTriangleCallback*, btVector3 const&, btVector3 const&)::MyNodeOverlapCallback::processNode(int, int)
calls=125048 106 
* 40379931
* 250096

fl=(154)
fn=(14544)
92 242
+1 242
-1 1694
+1 1694
+2 726
+1 242
+1 968
+3 242

fn=(14540)
46 1573
+82 23958
+2 6292
+2 3146
+1 3146
-1 3146
-2 6292
+5 3146
-5 3146
+5 3146
+2 726
+1 726
+1 726
-2 6050
-83 242
+2 121
-2 605
+3 121
-3 121
-4 242
+78 242
+2 1573

fl=(81)
fn=(388) Logic::Controller::setEntityTransform(Math::Matrix const&)
18 109887
+1 146516
cfi=(45) /home/desktop/code/REGoth/src/components/Vob.cpp
cfn=(226) Vob::asVob(World::WorldInstance&, Memory::GenericHandle<24, 8, 5>)
calls=36629 +25 
* 1903377
+1 109887
cfi=(45)
cfn=(390) Vob::setTransform(Vob::VobInformation&, Math::Matrix const&)
calls=36629 +65 
* 39592642
+1 109887

fn=(19556)
29 36177

fl=(171)
fn=(19470) btDbvt::optimizeIncremental(int)
466 847
+1 242
+1 605
-90 242
+95 605
+2 242
+1 121
-1 121
+1 121
-1 242
-2 242
373 121
+2 242
496 363
cfn=(19472) removeleaf(btDbvt*, btDbvtNode*)
calls=121 176 
* 3509
+1 242
+8 121
+2 484
cfn=(19474) insertleaf(btDbvt*, btDbvtNode*, btDbvtNode*)
calls=121 133 
* 6171
-28 121
-9 242
+12 726

fn=(19472)
176 363
+1 242
+7 121
+2 363
-1 121
+1 242
+1 121
-1 121
+1 121
+18 121
+1 121
73 242
cfi=(69)
cfn=(376)
calls=121 258 
* 363
208 121
74 121
211 605

fn=(19474)
133 726
+1 484
+7 242
-45 121
+53 121
-53 242
+1 121
+4 121
+1 121
+49 121
fi=(58)
683 121
fe=(171)
100 121
fi=(58)
683 242
+1 363
-1 363
+1 363
-1 363
+1 363
fe=(171)
151 121
+15 242
+1 242
+1 121
+3 726

fl=(28)
fn=(20334) void std::vector<Logic::EventMessages::EventMessage*, std::allocator<Logic::EventMessages::EventMessage*> >::_M_emplace_back_aux<Logic::EventMessages::EventMessage* const&>(Logic::EventMessages::EventMessage* const&)
407 135
fi=(13)
656 45
fi=(30)
224 60
fi=(13)
1426 45
fi=(16)
104 30
cob=(11)
cfi=(95)
cfn=(510)
calls=15 -61 
* 11095
* 15
* 15
fi=(13)
656 30
fi=(16)
120 30
fi=(13)
656 45
fi=(16)
120 45
fi=(30)
367 30
fi=(16)
110 30
cob=(11)
cfi=(41)
cfn=(200)
calls=15 -61 
* 1809
* 15
fe=(28)
441 15
+2 15
-1 15
+1 15
+1 120
fi=(30)
-76 60
cob=(2)
cfi=(7)
cfn=(12)
calls=15 0 
* 10140
* 15
fe=(28)
+57 30
fi=(13)
170 90
fe=(28)

fn=(190)
167 172352
+3 21544
-3 21544
+3 86176
fi=(13)
737 21544
-81 43088
+81 21544
-81 21544
+81 21544
-81 43088
fe=(28)
192 21544
fi=(13)
656 21544
fe=(28)
192 43088
fi=(13)
656 107720
fe=(28)
204 43088
fi=(30)
322 64632
fi=(40)
102 86176
fe=(28)
218 21544
+3 193896

fn=(20700)
407 216
fi=(13)
656 96
fi=(30)
224 92
fi=(13)
1426 66
fi=(30)
224 2
fi=(16)
104 4
cob=(11)
cfi=(95)
cfn=(510)
calls=2 -61 
* 266
* 2
* 44
cob=(11)
cfi=(95)
cfn=(510)
calls=22 -61 
* 6389
* 22
* 168
+16 96
fi=(97)
-46 114
fi=(40)
+1 16376
fi=(11)
1054 4094
fi=(97)
74 12370
fi=(13)
177 48
fi=(16)
-67 22
cob=(11)
cfi=(41)
cfn=(200)
calls=22 -61 
* 2492
* 22
fe=(28)
441 24
+1 24
+1 24
+1 144
fi=(13)
170 88
fe=(28)

fn=(124) std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
167 172352
+3 43088
fi=(13)
656 86176
+81 21544
-81 43088
+81 21544
-81 21544
+81 21544
-81 21544
fe=(28)
192 43088
fi=(13)
656 107720
fe=(28)
204 43088
fi=(30)
367 21544
fe=(28)
218 21544
+3 193896
fi=(30)
367 43088
fe=(28)

fl=(46) /home/desktop/code/REGoth/src/components/AnimHandler.cpp
fn=(386) Components::AnimHandler::getRootNodePosition()
425 16486
-1 16486
+1 16486

fn=(20578) Components::AnimHandler::addAnimation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
43 20
fi=(4)
+67 2
400 4
196 2
-86 2
+86 2
cfi=(2)
cfn=(19570) void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.304]
calls=2 +10 
* 84
+75 6
1115 8
cob=(11)
cfi=(37)
cfn=(640)
calls=2 359 
* 58
* 2
-46 8
cob=(11)
cfi=(37)
cfn=(640)
calls=2 359 
* 560
* 2
110 6
+42 2
479 4
128 2
487 2
160 4
-28 4
fi=(5)
243 2
fi=(4)
128 2
271 8
1115 8
cob=(11)
cfi=(37)
cfn=(640)
calls=2 359 
* 82
* 2
110 6
+42 2
479 4
128 2
487 2
160 4
fi=(5)
+83 2
fi=(4)
132 2
-4 4
+4 2
+48 6
fi=(16)
-70 2
fi=(4)
+70 6
fi=(53) /home/desktop/code/REGoth/src/engine/World.h
+10 2
fe=(46)
47 2
fi=(53)
190 2
fe=(46)
47 2
cfi=(184)
cfn=(20588)
calls=2 -5 
* 4244
+3 2
-3 2
+3 2
+17 2
fi=(4)
180 6
fi=(16)
-70 2
cob=(11)
cfi=(41)
cfn=(200)
calls=2 -61 
* 186
* 2
fe=(46)
-40 18
fi=(23)
1420 2
fi=(4)
5061 4
fi=(5)
260 6
+2 8
cob=(2)
cfi=(7)
cfn=(22)
calls=2 0 
* 38
* 2
fi=(4)
5061 4
fe=(46)
62 4

fn=(19578) Components::AnimHandler::playAnimation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
76 2670
fi=(51)
239 445
fe=(46)
76 890
fi=(51)
239 445
fe=(46)
83 445
fi=(51)
239 890
fe=(46)
83 445
+42 906
fi=(36)
+51 2225
cob=(11)
cfi=(35)
cfn=(158)
calls=445 -37 
* 21442
* 445
* 445
fi=(34)
446 445
fi=(36)
176 445
fi=(23)
1414 445
fi=(34)
446 445
fi=(23)
1413 890
fi=(34)
446 445
fi=(23)
1414 890
+3 890
fi=(34)
-97 890
fi=(23)
1423 8
fi=(34)
446 8
fi=(23)
1423 4
fe=(46)
99 8
cfn=(20578)
calls=2 -56 
* 5474
* 6
fi=(36)
+77 10
cob=(11)
cfi=(35)
cfn=(158)
calls=2 -37 
* 140
* 2
* 2215
cob=(11)
cfi=(35)
cfn=(158)
calls=443 -37 
* 21302
* 443
* 445
fi=(34)
446 445
fi=(36)
176 445
fi=(34)
446 445
fi=(23)
1413 890
fi=(34)
446 445
fi=(23)
1414 890
+3 1335
fi=(34)
-97 890
fi=(23)
1423 8
fi=(34)
446 8
fi=(23)
1423 4
fi=(12)
35 2
+1 2
-1 2
+1 447
fi=(4)
5061 886
fi=(5)
260 1329
+2 3101
cob=(2)
cfi=(7)
cfn=(22)
calls=443 0 
* 8225
* 443
fi=(4)
5061 3987
fi=(5)
260 886
fe=(46)
110 886
fi=(13)
656 443
fe=(46)
111 443
+1 443
+1 443
-3 443
fi=(13)
656 1772
fe=(46)
117 2658
fi=(13)
796 886
fi=(51)
329 886
fi=(13)
781 1329
fi=(51)
329 1329
fe=(46)
117 443
fi=(51)
329 1772
+39 3544
-39 443
fi=(13)
656 886
fi=(51)
329 2215
fi=(13)
656 443
fi=(51)
329 886
fi=(13)
656 886
fe=(46)
117 886
fi=(13)
796 29238
fi=(51)
329 29238
fi=(13)
781 43857
fi=(51)
329 43857
fe=(46)
117 14619
fi=(51)
329 58476
+39 116952
-39 14619
fi=(13)
656 29238
fi=(51)
329 73095
fi=(13)
656 14619
fi=(51)
329 29238
fi=(13)
656 29238
fe=(46)
117 29238
+8 443
-2 443
+2 2658
-2 886
cfi=(12)
cfn=(448)
calls=58 -82 
* 389470
cfi=(12)
cfn=(449) Components::AnimHandler::updateAnimations(double)'2
calls=385 -82 
* 2843071
fi=(5)
262 1772
cob=(2)
cfi=(7)
cfn=(22)
calls=443 0 
* 8225
* 443
fi=(4)
5061 1772
fe=(46)

fl=(82)
fn=(392) Logic::Controller::onTransformChanged()
67 36629

fl=(122)
fn=(1028) ExampleCubes::update()
319 484
+2 121
cfi=(162) /home/desktop/code/REGoth/src/engine/Input.cpp
cfn=(19212) Engine::Input::fireBindings()
calls=121 197 
* 610566
fi=(164) /home/desktop/code/REGoth/src/engine/Platform.h
21 121
fe=(122)
325 363
fi=(137)
39 363
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
+1 242
fe=(122)
335 363
+1 242
+8 121
-2 121
-5 121
+5 605
+2 121
cfi=(162)
cfn=(19258) Engine::Input::getMouseState(Engine::Input::MouseState&)
calls=121 -63 
* 2904
+5 121
+5 242
-5 605
+1 121
+4 484
-4 363
+4 121
-8 121
+8 121
cfi=(128)
cfn=(19260) imguiBeginFrame(int, int, unsigned char, int, unsigned short, unsigned short, char, unsigned char)
calls=121 3310 
* 1853115
+3 605
cfi=(109)
cfn=(19406) bgfx::dbgTextClear(unsigned char, bool)
calls=121 2652 
* 336985
+1 363
cfi=(166) /home/desktop/code/REGoth/src/engine/BaseEngine.cpp
cfn=(19410) Engine::BaseEngine::getEngineArgs()
calls=121 229 
* 35211
* 847
cfi=(109)
cfn=(970) bgfx::dbgTextPrintf(unsigned short, unsigned short, unsigned char, char const*, ...)
calls=121 2663 
* 132253
* 121
fi=(4)
180 363
fi=(16)
-70 121
fi=(4)
+70 363
fi=(16)
-70 121
fi=(4)
+70 363
fi=(16)
-70 121
fi=(4)
+70 363
fi=(16)
-70 121
cob=(11)
cfi=(41)
cfn=(200)
calls=121 -61 
* 11253
* 121
fe=(122)
359 1573
cfi=(109)
cfn=(970)
calls=121 2663 
* 467528
+13 242
cfi=(126)
cfn=(19422) ddBegin(unsigned char)
calls=121 709 
* 1936
+2 726
cfi=(166)
cfn=(19424) Engine::BaseEngine::frameUpdate(double, unsigned short, unsigned short)
calls=121 153 
* 1767054301
+5 480
fi=(188)
59 120
fi=(189)
+20 120
fe=(122)
379 240
cfi=(123)
cfn=(1030)
calls=120 38 
* 24392
+2 240
cfi=(126)
cfn=(1040)
calls=120 1747 
* 1680
+1 840
cfi=(126)
cfn=(1042)
calls=120 1852 
* 37560
+2 120
cfi=(126)
cfn=(1046)
calls=120 731 
* 2160
+1 240
cfi=(126)
cfn=(1048)
calls=120 809 
* 480
fi=(108)
12 360
fi=(127)
+1 120
fi=(51)
334 120
fi=(108)
12 1080
fi=(127)
+1 120
fi=(51)
334 120
fi=(127)
13 120
fe=(122)
386 120
fi=(127)
13 360
fi=(51)
334 120
fi=(127)
13 120
fi=(51)
334 120
fi=(127)
13 120
fi=(51)
334 120
fi=(127)
13 120
fi=(51)
334 120
fi=(127)
13 360
fi=(51)
334 360
fi=(127)
13 120
fi=(51)
334 120
fi=(127)
13 120
fi=(51)
334 120
fi=(127)
13 120
fi=(51)
334 240
fi=(127)
13 120
fi=(51)
334 120
fi=(127)
13 120
fi=(51)
334 1080
fe=(122)
+52 120
cfi=(126)
cfn=(1040)
calls=120 1747 
* 125760
+6 120
-1 960
+1 120
cfi=(126)
cfn=(1106)
calls=120 1782 
* 108600
+2 240
cfi=(126)
cfn=(1040)
calls=120 1747 
* 126840
+1 240
cfi=(126)
cfn=(1048)
calls=120 809 
* 480
+1 720
cfi=(126)
cfn=(1110)
calls=120 1757 
* 2760
+1 600
cfi=(126)
cfn=(1112)
calls=120 1767 
* 9600
+1 120
cfi=(126)
cfn=(1114)
calls=120 1717 
* 2640
+2 120
cfi=(126)
cfn=(1116)
calls=120 1603 
* 116160
+2 120
cfi=(128)
cfn=(1118)
calls=120 3315 
* 124320
+4 240
cfi=(109)
cfn=(1200)
calls=120 2567 
* 1449344
+3 600
-84 363

fl=(144)
fn=(8084)
1188 2420
+2 726
+2 484
+7 726
cob=(7)
cfi=(6)
cfn=(4584)
calls=242 0 
* 52393
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
+1 1210
cob=(7)
cfi=(6)
cfn=(6038)
calls=242 0 
* 1916779
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
+5 726
cob=(7)
cfi=(6)
cfn=(4584)
calls=242 0 
* 72944
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
+1 1694
-11 242
cfi=(142)
cfn=(8086)
calls=121 4309 
* 4009297
+1 726
cfn=(8130) bgfx::gl::VertexBufferGL::create(unsigned int, void*, bgfx::VertexDeclHandle, unsigned short)
calls=121 -27 
* 3358815
* 121

fn=(4172)
1374 726
+52 121
fi=(121)
145 121
fe=(144)
1374 605
fi=(121)
145 484
-5 121
-60 726
+65 78
-5 39
-60 39
+25 78
+55 39
-55 39
fi=(155)
-51 39
fi=(121)
+26 39
+25 39
-25 39
+25 78
+40 156
-65 78
+25 78
+35 39
+20 39
fe=(144)
1376 39
fi=(121)
160 39
fe=(144)
1376 39
fi=(121)
145 328
-5 82
-60 164
+25 328
fi=(155)
-51 82
fi=(121)
+26 82
+25 164
+55 82
-55 82
+40 246
-65 164
+25 164
+35 82
+20 82
fe=(144)
1376 82
fi=(121)
160 82
fe=(144)
1376 324
+8 363
cob=(7)
cfi=(6)
cfn=(4176)
calls=121 0 
* 121922
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+5 363
cob=(7)
cfi=(6)
cfn=(4526)
calls=121 0 
* 111925
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+3 847

fn=(8130)
1169 242
+6 121
-6 726
+6 121
-4 121
+4 121
-3 121
+5 121
-2 363
+2 242
cob=(7)
cfi=(6)
cfn=(5238)
calls=121 0 
* 80828
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 242
+1 363
+1 242
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 3102849
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 968
cob=(7)
cfi=(6)
cfn=(5876)
calls=121 0 
* 128674
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+5 363
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 25652
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 726

fn=(4580)
1134 2178
+2 726
+2 484
+7 726
cob=(7)
cfi=(6)
cfn=(4584)
calls=242 0 
* 75122
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
+1 1210
cob=(7)
cfi=(6)
cfn=(6038)
calls=242 0 
* 1450997
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
+5 726
cob=(7)
cfi=(6)
cfn=(4584)
calls=242 0 
* 99322
* 242
cob=(7)
cfi=(6)
cfn=(4036)
calls=242 0 
* 7018
* 726
+1 1452
-11 242
cfi=(142)
cfn=(4582)
calls=121 4301 
* 4306377
+1 605
cfn=(5236) bgfx::gl::IndexBufferGL::create(unsigned int, void*, unsigned short)
calls=121 -24 
* 3343835
* 121

fn=(5236)
1118 968
+2 121
+1 121
+2 363
cob=(7)
cfi=(6)
cfn=(5238)
calls=121 0 
* 80828
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 242
+1 363
+1 242
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 3085363
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 968
cob=(7)
cfi=(6)
cfn=(5876)
calls=121 0 
* 130454
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+5 363
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 27104
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
+1 726

fn=(14662)
1006 484
+2 121
-2 242
+2 121
cob=(7)
cfi=(6)
cfn=(3732)
calls=121 0 
* 46948
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 363
fi=(145)
171 484
fi=(117)
48 242
-7 7502
fi=(116)
226 242
+1 605
fe=(144)
1016 605

fl=(59)
fn=(300)
298 135736
110 67868
298 271472
110 203604
-27 135736
+34 135736
313 67868
+2 67868
-4 67868
+7 271472
fi=(68)
92 271472
cfi=(69)
cfn=(304) btAlignedAllocInternal(unsigned long, int)
calls=67868 249 
* 26864962
* 135736
fe=(59)

fn=(350) btTriangleIndexVertexArray::getLockedVertexIndexBase(unsigned char**, int&, PHY_ScalarType&, int&, unsigned char**, int&, int&, PHY_ScalarType&, int)
178 500192
fi=(194) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btTriangleIndexVertexArray.cpp
63 250096
+1 250096
+2 250096
+2 250096
+2 375144
+1 125048
+1 125048
-1 125048
+1 250096
+1 500192
fe=(59)

fl=(23)
fn=(722) std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Memory::GenericHandle<16, 16, 9> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Memory::GenericHandle<16, 16, 9> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
1287 66755
fi=(36)
176 13351
fe=(23)
1287 26702
fi=(36)
176 40053
cob=(11)
cfi=(35)
cfn=(158)
calls=13351 -37 
* 774358
* 13351
* 13351
fi=(34)
446 13351
fi=(36)
176 13351
fi=(34)
446 13351
fe=(23)
1413 26702
+1 26702
+3 28503
fi=(34)
-97 21886
fe=(23)
1423 41604
fi=(34)
446 35100
fe=(23)
1423 17550
1296 13351
-1 13351
+1 66755

fl=(42)
fn=(210) Daedalus::DaedalusVM::VMState::~VMState()
150 43088
fi=(13)
426 21544
fi=(40)
102 21544
fi=(13)
+75 21544
426 10772
177 21544
426 10772
177 21544
fi=(16)
-67 10772
fi=(4)
+42 10772
+28 21544
fi=(13)
426 10772
177 21544
fi=(22) /usr/include/c++/6.2.1/bits/stl_deque.h
1041 21544
cfn=(218) std::_Deque_base<unsigned long, std::allocator<unsigned long> >::~_Deque_base()
calls=10772 658 
* 2740304
fe=(42)
150 10772
fi=(22)
1041 10772
fe=(42)
150 21544
fi=(22)
1041 10772
cfn=(220) std::_Deque_base<unsigned int, std::allocator<unsigned int> >::~_Deque_base()
calls=10772 658 
* 2661162
fe=(42)

fn=(530) Daedalus::DaedalusVM::VMState::VMState(Daedalus::DaedalusVM::VMState const&)
150 107720
fi=(22)
354 21544
fe=(42)
150 21544
fi=(22)
354 10772
fe=(42)
150 32316
fi=(22)
354 64632
+1 21544
562 10772
147 53860
355 10772
147 21544
355 10772
147 21544
682 21544
+1 10772
+3 32316
-1 10772
fi=(16)
104 21544
cob=(11)
cfi=(95)
cfn=(510)
calls=10772 -61 
* 1314184
* 10772
fi=(22)
695 10772
-8 10772
+8 32316
+1 10772
+28 43088
fi=(16)
104 21544
cob=(11)
cfi=(95)
cfn=(510)
calls=10772 -61 
* 2620012
* 10772
fi=(22)
725 10772
-1 32316
-15 10772
255 10772
713 10772
254 10772
151 10772
709 10772
255 10772
fi=(31) /usr/include/c++/6.2.1/bits/stl_stack.h
99 10772
fi=(22)
256 10772
-1 10772
710 10772
151 21544
255 10772
+1 10772
712 10772
256 10772
150 10772
256 10772
712 10772
150 10772
+1 10772
-1 10772
+1 53860
fi=(97)
281 118492
cfn=(534) std::_Deque_iterator<unsigned int, unsigned int&, unsigned int*> std::uninitialized_copy<std::_Deque_iterator<unsigned int, unsigned int const&, unsigned int const*>, std::_Deque_iterator<unsigned int, unsigned int&, unsigned int*> >(std::_Deque_iterator<unsigned int, unsigned int const&, unsigned int const*>, std::_Deque_iterator<unsigned int, unsigned int const&, unsigned int const*>, std::_Deque_iterator<unsigned int, unsigned int&, unsigned int*>)
calls=10772 107 
* 355476
fi=(31)
99 43088
cfi=(22)
cfn=(540) std::deque<unsigned long, std::allocator<unsigned long> >::deque(std::deque<unsigned long, std::allocator<unsigned long> > const&)
calls=10772 943 
* 6393716
fi=(13)
656 21544
170 10772
-79 32316
656 21544
170 21544
+17 10772
-2 10772
+1 10772
+1 21544
fi=(30)
366 43088
+1 21544
+2 10772
fe=(42)
150 21544
fi=(30)
369 10772
fe=(42)
150 10772
cfi=(27)
cfn=(550)
calls=10772 -39 
* 1680432
* 86176

fn=(484) Logic::ScriptEngine::getGameState()
99 118284
fi=(18)
253 59142
fe=(42)

fl=(177)
fn=(19496)
42 968
fi=(59)
222 242
+8 121
fe=(177)
45 121
fi=(59)
243 121
fe=(177)
45 121
+4 726

fn=(19522)
65 121
+5 242
+12 121

fl=(19)
fn=(658) Daedalus::DATFile::hasSymbolName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
287 119196
fi=(4)
110 13244
fi=(2)
211 13244
fi=(4)
110 13244
fi=(2)
211 79464
+6 26488
-2 13244
+2 13244
fi=(4)
-85 13244
fi=(5)
243 39732
fi=(4)
702 13244
fi=(32)
4176 52976
+1 39732
cob=(2)
cfi=(7)
cfn=(150)
calls=13244 0 
* 132440
* 13244
* 844110
cob=(2)
cfi=(7)
cfn=(150)
calls=281370 0 
* 2813700
* 281370
* 294614
-1 615716
fi=(36)
176 26488
cob=(11)
cfi=(35)
cfn=(158)
calls=13244 -37 
* 1198192
* 13244
* 13244
fi=(34)
446 13244
fi=(36)
176 13244
fi=(34)
446 13244
fi=(23)
1413 26488
fi=(34)
446 13244
fi=(23)
1414 33532
+3 35220
fi=(34)
-97 14088
fi=(23)
1423 24800
fi=(34)
446 18600
fi=(23)
1423 12400
fi=(4)
180 39732
fi=(16)
-70 26488
cob=(11)
cfi=(41)
cfn=(200)
calls=13244 -61 
* 1231692
* 13244
fe=(19)
292 119196
fi=(4)
5061 1688
fi=(5)
262 4220
cob=(2)
cfi=(7)
cfn=(22)
calls=844 0 
* 21944
* 844
fi=(4)
5061 4220
fi=(2)
219 52976
cob=(11)
cfi=(37)
cfn=(632)
calls=13244 -82 
* 1766094
* 13244
* 13244
fi=(4)
-91 13244
+32 26488
fi=(5)
290 39732
cob=(2)
cfi=(7)
cfn=(12)
calls=13244 0 
* 132440
* 13244
* 39732
-2 12400
fe=(19)

fn=(790) Daedalus::DATFile::getSymbolIndexByName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
296 5908
fi=(4)
110 1688
fi=(2)
211 4220
+6 844
-2 844
+2 844
fi=(4)
-85 844
fi=(5)
243 1688
fi=(4)
702 1688
fi=(32)
4176 2532
+1 2532
cob=(2)
cfi=(7)
cfn=(150)
calls=844 0 
* 8440
* 844
* 44310
cob=(2)
cfi=(7)
cfn=(150)
calls=14770 0 
* 147700
* 14770
* 15614
-1 31228
fi=(33) /usr/include/c++/6.2.1/bits/unordered_map.h
904 2532
cfi=(34)
cfn=(154)
calls=844 583 
* 119004
* 844
fe=(19)
300 844
fi=(4)
180 2532
fi=(16)
-70 844
cob=(11)
cfi=(41)
cfn=(200)
calls=844 -61 
* 78492
* 844
fe=(19)
301 5064
fi=(2)
-82 3376
cob=(11)
cfi=(37)
cfn=(632)
calls=844 -82 
* 112252
* 844
* 844
fi=(4)
-91 844
+32 1688
fi=(5)
290 2532
cob=(2)
cfi=(7)
cfn=(12)
calls=844 0 
* 8440
* 844
* 2532
fe=(19)

fn=(60) Daedalus::DATFile::getStackOpCode(unsigned long)
309 2996462
+4 428066
-4 856132
+1 428066
fi=(195) /home/desktop/code/REGoth/lib/ZenLib/./zenload/zenParser.h
189 428066
fe=(19)
313 428066
cfi=(20) /home/desktop/code/REGoth/lib/ZenLib/zenload/zenParser.cpp
cfn=(62) ZenLoad::ZenParser::readBinaryByte()
calls=428066 463 
* 2568396
+4 428066
-4 428066
+2 428066
+2 1566597
+59 101812
cfi=(21) /home/desktop/code/REGoth/lib/ZenLib/zenload/zenParser.h
cfn=(64) ZenLoad::ZenParser::readBinaryDWord()
calls=50906 203 
* 305436
+3 50906
-3 50906
+3 50906
cfi=(20)
cfn=(62)
calls=50906 +84 
* 305436
+1 50906
-1 50906
+7 3852594
-69 1146811
+24 159646
cfi=(21)
cfn=(64)
calls=79823 203 
* 478938
+3 79823
-3 159646
+1 79823
+2 79823
+25 116136
cfi=(21)
cfn=(64)
calls=58068 203 
* 348408
+3 58068
-3 116136
+1 58068
+2 58068
-38 91506
cfi=(21)
cfn=(64)
calls=45753 203 
* 274518
+3 45753
-3 91506
+1 45753
+2 45753
-20 192250
+3 3136
cfi=(21)
cfn=(64)
calls=1568 203 
* 9408
+3 1568
-3 3136
+1 1568
+2 1568
-6 13850
+38 12402
cfi=(21)
cfn=(64)
calls=6201 203 
* 37206
+3 6201
-3 12402
+1 6201
+2 6201
+4 65346
cfi=(21)
cfn=(64)
calls=32673 203 
* 196038
+3 32673
-3 65346
+1 32673
+2 32673
-38 70910
cfi=(21)
cfn=(64)
calls=35455 203 
* 212730
+3 35455
-3 70910
+1 35455
+2 35455
+18 44676
cfi=(21)
cfn=(64)
calls=22338 203 
* 134028
+3 22338
-3 44676
+1 22338
+2 22338

fn=(138)
279 947212
fi=(4)
110 270632
fi=(2)
211 676580
+6 135316
-2 135316
+2 135316
fi=(4)
+80 270632
fi=(5)
-9 405948
fi=(4)
132 135316
fi=(5)
243 270632
fi=(4)
702 270632
fi=(32)
4176 405948
+1 405948
cob=(2)
cfi=(7)
cfn=(150)
calls=135316 0 
* 1353160
* 135316
* 1489680
cob=(2)
cfi=(7)
cfn=(150)
calls=496560 0 
* 4965600
* 496560
* 631876
-1 1263752
fi=(33)
904 405948
cfi=(34)
cfn=(154)
calls=135316 583 
* 17206856
fi=(13)
781 541264
fi=(4)
180 135316
fi=(13)
781 270632
fi=(4)
180 270632
fe=(19)
284 811896
fi=(5)
+6 405948
cob=(2)
cfi=(7)
cfn=(12)
calls=135316 0 
* 1623792
* 135316
* 405948
-2 270632
fe=(19)

fl=(180)
fn=(19558)
52 66308
+1 16577
cfi=(81)
cfn=(19556)
calls=16577 -24 
* 16577
-10 66308
cfi=(45)
cfn=(226)
calls=16577 +1 
* 862004
* 16577
+2 78892
cfi=(181) /home/desktop/code/REGoth/src/logic/visuals/ModelVisual.h
cfn=(19560) Logic::ModelVisual::getVisualType()
calls=15246 +89 
* 30492
* 30492
+40 3993
-25 15246
+25 15246
-25 15246
+25 15246
-25 15246
cfi=(47) /home/desktop/code/REGoth/src/logic/visuals/ModelVisual.cpp
cfn=(238) Logic::ModelVisual::onFrameUpdate(float)
calls=15246 535 
* 320166

fl=(109)
fn=(942)
160 1452
-2 11616
+2 1452
+2 1452
+2 1452
fi=(118) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/mutex.h
-76 2178
cob=(10)
cfi=(119)
cfn=(948)
calls=726 -88 
* 24684
* 726
fe=(109)
+81 2178
+1 726
fi=(118)
-77 726
fe=(109)
+89 726
-12 726
fi=(118)
-77 726
cob=(10)
cfi=(119)
cfn=(952)
calls=726 -93 
* 23958
* 726
fe=(109)
+81 1452
cob=(2)
cfi=(7)
cfn=(204)
calls=726 0 
* 66066
* 726
+43 5082
-33 2178
+2 1452
fi=(118)
-98 2178
cob=(10)
cfi=(119)
cfn=(948)
calls=726 -88 
* 24684
* 726
fe=(109)
191 726
fi=(118)
-98 726
fe=(109)
+98 726
+1 726
-1 726
+1 1452
fi=(118)
-99 726
cob=(10)
cfi=(119)
cfn=(952)
calls=726 -93 
* 23958
* 726
fe=(109)
217 726
-21 726
+21 2904
-21 726
cob=(2)
cfi=(7)
cfn=(312)
calls=726 0 
* 84667
* 726

fn=(1056) bgfx::checkAvailTransientVertexBuffer(unsigned int, bgfx::VertexDecl const&)
2766 1815
+1 1452
+1 726
+1 1089
+1 363
+1 363
-1 363
+1 726
-1 363
cfi=(110)
cfn=(1058)
calls=363 1742 
* 9801

fn=(1060) bgfx::checkAvailTransientIndexBuffer(unsigned int)
2760 363
-1 726
+1 1089
+1 726
+1 726
+1 363
-1 726
cfi=(110)
cfn=(1062)
calls=363 2656 
* 3630

fn=(902) bgfx::touch(unsigned char)
4551 1694
cfn=(904) bgfx::submit(unsigned char, bgfx::ProgramHandle, bgfx::OcclusionQueryHandle, int, bool)
calls=242 3586 
* 160446
* 484

fn=(1076) bgfx::setVertexBuffer(bgfx::TransientVertexBuffer const*, unsigned int, unsigned int)
3533 363
-1 2178
+1 1089
+1 726
+1 1089
+1 1089
-1 1089
cfi=(110)
cfn=(1078)
calls=363 3758 
* 23232

fn=(3726) bgfx::Context::flushTextureUpdateBatch(bgfx::CommandBuffer&)
1650 2420
+1 484
cfi=(110)
cfn=(3728)
calls=242 524 
* 1210
* 484
+59 1936

fn=(17618)
545 968
+36 121
-36 242
+36 605
+3 363
+2 121
+2 1210
cfi=(142)
cfn=(17620)
calls=121 2524 
* 800899
+27 726
-25 726
+2 242
+1 242
-1 242
+1 242
+26 242
-20 10890
+1 5324
-1 5324
+1 10648
+2 26983
+15 10890
-15 3463020
+2 865755
+1 865755
+2 2597265
-3 5445
+1 5445
+2 16335
+1 30246
+7 13066
-5 13066
+1 13066
+5 13066
-6 13066
+5 13066
-5 13066
+5 13066
-4 13066
+8 13066
+3 13066
-6 13066
-5 13066
+8 13066
+13 13066
-17 13066
+19 13066
-15 195990
-4 26132
+1 13066
+3 52264
-4 13066
+4 104528
-4 13066
+1 13066
+3 26132
-3 13066
+3 13066
-4 13066
+4 13066
-2 13066
-1 13066
+1 13066
-2 26132
+4 13066
+2 13066
-6 13066
+4 13066
+2 26132
-2 13066
-3 13066
+3 13066
+2 13066
-4 13066
+4 13066
-5 13066
+3 26132
-3 13066
+3 26132
+2 300518
+4 13066
-1 13066
+5 13066
-4 13066
+1 26132
+1 13066
+1 13066
+3 13066
-3 26132
+9 13066
-35 26132
+35 858134
-35 1716268
+38 10890
-43 21901
+49 605
fi=(142)
2576 605
+1 121
-1 121
+1 121
+2 2178
cfi=(144)
cfn=(4580)
calls=121 1134 
* 577399
+1 1452
cfi=(144)
cfn=(8084)
calls=121 1188 
* 1194317
+2 121
+1 726
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 26015
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 1089
+2 121
+1 605
-1 484
+1 605
cob=(7)
cfi=(6)
cfn=(4584)
calls=121 0 
* 28193
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 1089
+3 121
-1 484
+1 121
-1 726
+1 121
-1 121
+1 121
cfn=(14778)
calls=121 4237 
* 350539
+2 605
cob=(7)
cfi=(6)
cfn=(18106)
calls=121 0 
* 1713641
* 121
cob=(7)
cfi=(6)
cfn=(4036)
calls=121 0 
* 3509
* 1089
fe=(109)
648 968
-48 726

fn=(19398) bgfx::setViewSeq(unsigned char, bool)
3373 605
+1 484
+2 121
+1 121
-1 121
-1 121
+2 242
-1 121
cfi=(110)
cfn=(19400)
calls=121 3594 
* 605

fn=(886) bgfx::getHMD()
2578 726
cfi=(110)
cfn=(888)
calls=242 2244 
* 1210

fn=(904)
3586 605
-1 6050
+1 1815
+1 1210
+5 1815
+1 605
-1 1815
+1 2420
-1 605
cfi=(110)
cfn=(906)
calls=605 3811 
* 281083

fn=(928) bgfx::setUniform(bgfx::UniformHandle, void const*, unsigned short)
3465 363
-1 2178
+1 1089
+1 1089
+1 1089
-1 726
cfi=(110)
cfn=(930)
calls=363 3708 
* 338558

fn=(1054) bgfx::checkAvailTransientBuffers(unsigned int, bgfx::VertexDecl const&, unsigned int)
2781 1452
+1 363
-1 726
+1 363
+1 1089
cfn=(1056)
calls=363 -17 
* 17061
+1 726
+2 363
-2 363
+2 726
-2 363
cfn=(1060)
calls=363 -24 
* 8349

fn=(1082) bgfx::setIndexBuffer(bgfx::TransientIndexBuffer const*)
3493 1089
cfn=(1084) bgfx::setIndexBuffer(bgfx::TransientIndexBuffer const*, unsigned int, unsigned int)
calls=363 +5 
* 21417

fn=(1090) bgfx::setState(unsigned long, unsigned int)
3414 1815
+1 1452
+1 1089
+1 1452
+1 1089
-1 363
cfi=(110)
cfn=(1092)
calls=363 1498 
* 6534

fn=(1094) bgfx::setTransform(unsigned int, unsigned short)
3458 1815
+1 1452
+1 363
+1 363
-1 726
+1 726
-1 363
cfi=(110)
cfn=(1096)
calls=363 1548 
* 7260

fn=(8144)
1012 484
+1 726
fi=(110)
849 484
fe=(109)
1015 242
fi=(110)
847 121
+2 121
-2 121
+1 363
+1 242
fe=(109)
1013 242
+2 968
fi=(110)
847 484
+2 484
-2 484
+1 1452
+1 968
fe=(109)
1013 968
+4 726
cfi=(150) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/radixsort.h
cfn=(8146) void bx::radixSort<unsigned short>(unsigned long*, unsigned long*, unsigned short*, unsigned short*, unsigned int)
calls=121 213 
* 137093
+2 1089
+2 242
fi=(110)
888 121
+2 121
-2 121
+1 242
+1 242
fe=(109)
1019 242
+2 968
fi=(110)
888 484
+2 484
-2 484
+1 968
+1 968
fe=(109)
1019 968
+4 121
+1 121
-1 121
+1 242
-1 121
cfi=(150)
cfn=(8148) bx::radixSort(unsigned int*, unsigned int*, unsigned int)
calls=121 18 
* 127897

fn=(1064) bgfx::allocTransientVertexBuffer(bgfx::TransientVertexBuffer*, unsigned int, bgfx::VertexDecl const&)
2802 363
-1 2178
+1 1089
+1 726
+1 726
+1 726
+1 726
+1 1815
cfi=(110)
cfn=(1066)
calls=363 -48 
* 29403
+1 2178
+4 1452

fn=(1202) bgfx::Context::frame(bool)
1504 726
+1 363
+4 242
cfi=(112)
cfn=(908)
calls=121 130 
* 6534
fi=(110)
3997 121
fe=(109)
1512 242
fi=(110)
3997 121
fe=(109)
1524 242
cfn=(19196) bgfx::Context::swap()
calls=121 +7 
* 1428405
fi=(110)
3968 242
fe=(109)
1519 121
+1 605
fi=(138)
179 242
cob=(10)
cfi=(119)
cfn=(18306)
calls=121 0 
* 3010
* 121
+1 242
fi=(137)
39 363
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
+1 363
fi=(138)
196 242
cob=(10)
cfi=(119)
cfn=(1216)
calls=121 0 
* 14157
* 121
+2 242
+1 242
fi=(137)
39 242
fi=(110)
4003 121
fi=(137)
39 121
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
+1 242
fi=(110)
4003 242
+1 484
fe=(109)

fn=(3710) bgfx::Context::renderFrame()
1581 968
+3 242
+1 242
fi=(110)
3976 242
fe=(109)
1592 480
cfn=(3712)
calls=120 1884 
* 26040
+1 240
+5 480
cfn=(3712)
calls=120 1884 
* 9000
fi=(110)
3989 240
fe=(109)
1602 240
+1 240
+5 120
+1 960
fi=(138)
179 240
cob=(10)
cfi=(119)
cfn=(18306)
calls=120 0 
* 3120
* 120
+1 240
fe=(109)
1596 720
cfi=(142)
cfn=(3730)
calls=120 6020 
* 57280856
* 120
fi=(137)
39 484
cob=(2)
cfi=(7)
cfn=(1210)
calls=121 -39 
* 605
* 121
+1 363
fi=(138)
196 242
cob=(10)
cfi=(119)
cfn=(1216)
calls=121 0 
* 12432
* 121
+2 240
+1 240
fi=(137)
39 240
fi=(110)
3982 120
fi=(137)
39 120
cob=(2)
cfi=(7)
cfn=(1210)
calls=120 -39 
* 600
* 120
+1 240
fi=(110)
3982 240
+1 480
fe=(109)
1587 847
fi=(142)
2234 242
+2 363
+5 363
cfi=(156) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/src/hmd.cpp
cfn=(18314) bgfx::VR::flip()
calls=121 102 
* 484
+1 363
cfi=(156)
cfn=(18316) bgfx::VR::swap(bgfx::HMD&)
calls=121 123 
* 605
fi=(141)
280 121
fi=(142)
2245 121
fi=(141)
280 121
-10 363
cob=(13)
cfi=(157)
cfn=(18320)
calls=121 0 
* 3530927
* 121
* 121
fe=(109)

fn=(18308) bgfx::Context::renderThread(void*)
1037 242
+1 121
cfn=(3710)
calls=121 1581 
* 60877320
cfi=(141)
cfn=(3702)
calls=1 1608 
* 525600
* 242
fi=(110)
2173 121
fe=(109)
1030 242

fn=(19390) bgfx::setViewName(unsigned char, char const*)
3327 605
+1 484
+2 121
+1 121
-2 121
+1 121
+1 242
-1 121
cfi=(110)
cfn=(19392)
calls=121 3535 
* 17666

fn=(970)
2663 11737
+1 2420
+2 605
+1 3025
-1 1210
+1 605
-1 1815
+1 605
cfi=(110)
cfn=(972)
calls=605 2232 
* 1603231
+2 3630

fn=(1084)
3498 363
-1 2178
+1 1089
+1 726
+1 363
+1 726
+1 363
-1 363
-1 363
+1 1089
+1 726
-1 363
cfi=(110)
cfn=(1086)
calls=363 3738 
* 12705

fn=(1200)
2567 121
-1 242
+1 363
+1 242
+1 121
-1 121
cfn=(1202)
calls=121 1504 
* 1460213

fn=(19206) bgfx::Context::freeAllHandles(bgfx::Frame*)
1461 1089
+1 363
+5 484
+5 363
+5 363
+5 363
+5 363
+5 363
+5 363
+4 968

fn=(892) bgfx::setViewTransform(unsigned char, void const*, void const*, unsigned char, void const*)
3388 242
-1 2420
+1 726
+1 242
+1 484
+1 242
-1 726
+1 968
-1 242
cfi=(110)
cfn=(894)
calls=242 3603 
* 18271

fn=(896) bgfx::setViewRect(unsigned char, unsigned short, unsigned short, unsigned short, unsigned short)
3335 363
-1 3630
+1 1089
+2 726
-1 363
+1 1089
+1 1815
-1 363
cfi=(110)
cfn=(898)
calls=363 3544 
* 4356

fn=(918)
867 1210
+6 1815
-7 3630
+8 2420
+11 1210
-5 605
+5 2420
-3 1089
+6 363
-1 726
fi=(110)
785 1452
fe=(109)
889 1089
+1 363
-1 363
fi=(110)
788 363
fe=(109)
889 363
+1 363
fi=(110)
787 726
+1 1089
-1 726
+3 726
-1 363
+1 726
-1 363
+1 726
+2 726
fe=(109)
+90 726
+6 242
-1 484
fi=(110)
785 968
fe=(109)
889 726
+1 242
-1 242
fi=(110)
788 242
fe=(109)
889 242
+1 242
fi=(110)
787 484
+1 726
-1 484
+3 484
-1 242
+1 484
-1 242
+1 484
+2 484
fe=(109)
893 605
+1 605
fi=(121)
401 605
fe=(109)
901 605
-8 1210
+1 605
+3 605
-2 605
+3 605
-3 605
+2 605
+2 2420
+3 605
fi=(121)
401 605
fe=(109)
903 1936
+4 363
+1 1815
-4 363
-2 363
+2 363
-2 363
+1 726
+10 605
-2 605
+2 605
+8 605
+1 605
-1 3025
+3 605
-3 16940
+1 605
+2 605
+8 605
-1 605
+1 3025
fi=(110)
1239 605
+8 605
+2 605
-10 605
+8 605
+3 605
+1 605
+2 605
-29 605
+1 605
+31 605
+1 605
+1 605
+1 605
+5 1210
-15 605
+1 605
+1 605
+2 605
+11 605
-40 605
+1 605
+39 605
-8 605
+1 605
+7 605
-6 605
+1 605
+5 7260
-27 605
+1 605
+2 605
+24 605
-23 605
+1 605
+1 605
+1 605
+1 605
+1 605
+2 605
+4 605
+2 605
-31 605
+42 605
+1 605
-1 605
+1 605
-1 605
-1 1815
+2 605
-1 605
+1 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
-1 605
fe=(109)
927 605
fi=(110)
1266 605
-2 605
+1 605
+1 605
-2 605
+1 605
+1 605
fe=(109)
927 605
+1 1452
-43 484

fn=(1020) bgfx::setViewClear(unsigned char, unsigned short, unsigned int, float, unsigned char)
3359 1089
+1 484
+2 121
+1 121
-1 121
-1 121
+1 242
+1 484
-1 121
cfi=(110)
cfn=(1022)
calls=121 3562 
* 2057

fn=(1070) bgfx::allocTransientIndexBuffer(bgfx::TransientIndexBuffer*, unsigned int)
2789 1815
+1 1452
+1 726
+1 726
+1 1815
cfi=(110)
cfn=(1072)
calls=363 1733 
* 13068
+1 1452
+4 1452

fn=(1074) bgfx::setVertexBuffer(bgfx::TransientVertexBuffer const*)
3528 1089
cfn=(1076)
calls=363 +5 
* 30855

fn=(1098) bgfx::submit(unsigned char, bgfx::ProgramHandle, int, bool)
3579 363
+2 1815
cfn=(904)
calls=363 +5 
* 137577
+1 726

fn=(19196)
1531 605
+13 121
-13 121
+1 121
cfn=(19198) bgfx::Context::freeDynamicBuffers()
calls=121 -86 
* 3388
+1 242
+4 242
-4 363
+2 121
-1 121
+1 121
+2 5445
+1 121
+3 121
-3 9559
+1 63767
+1 32912
+1 1452
+1 121
-1 31339
+1 484
cob=(2)
cfi=(7)
cfn=(12)
calls=121 0 
* 404866
* 121
+1 605
cob=(2)
cfi=(7)
cfn=(12)
calls=121 0 
* 807554
* 121
+1 5687
+1 363
+5 121
fi=(110)
659 121
+52 121
1475 121
659 121
cfn=(19200)
calls=121 -12 
* 2420
+54 121
1476 121
659 121
+55 121
-1 121
-2 121
-52 121
cfn=(19200)
calls=121 -12 
* 2420
1478 121
713 121
1074 121
714 121
1074 121
713 121
1478 121
1074 121
1478 484
1074 121
cfn=(962)
calls=121 -13 
* 3993
1481 121
1110 121
1481 242
fi=(160) /home/desktop/code/REGoth/lib/bgfx-cmake/bx/include/bx/bx.h
45 484
fe=(109)
1554 5566
+3 242
+6 121
fi=(110)
1239 121
fe=(109)
1562 121
fi=(110)
1249 121
+1 121
+1 121
+2 121
-29 121
+1 121
+14 121
+8 121
+9 121
-9 121
+10 121
+1 121
-9 121
+10 121
+5 121
-14 121
+1 121
+13 121
-11 121
-29 121
+40 121
-39 121
+31 121
+8 121
-7 121
+1 121
+6 121
-5 121
+5 847
1452 121
+1 121
+1 121
1237 121
+1 121
+2 121
+1 121
+1 121
+1 121
+1 121
+1 121
+1 121
+2 121
+4 121
+2 121
-31 121
+42 121
-1 1815
+49 121
+1 121
+1 121
+1 121
+3 121
-55 121
+2 121
-1 121
+55 121
-54 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
-1 242
+57 121
-57 242
+61 121
-12 121
+1 121
+11 121
-10 121
+1 121
+9 121
-6 121
+6 726
-5 121
857 121
1321 121
+4 121
1460 121
1325 242
1461 121
1325 242
1462 121
1325 242
1463 121
1266 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
-1 121
+1 121
+44 121
+1 121
+1 121
+5 121
923 121
1104 121
1460 121
fe=(109)
1565 121
fi=(110)
857 121
+1 121
fe=(109)
1565 121
fi=(110)
859 121
1461 121
+1 121
+1 121
976 121
855 121
+1 121
1464 121
+1 121
705 121
+1 121
-1 121
+1 121
1104 121
1469 121
+1 121
fe=(109)
+95 8591
+1 363
cfn=(19206)
calls=121 1461 
* 5082
+3 121
-1 121
fi=(110)
1814 121
fe=(109)
1572 242
-3 121
+3 121
fi=(110)
1814 121
fe=(109)
1569 121
+3 121
cfi=(110)
cfn=(19208)
calls=121 404 
* 3267
+1 726

fn=(1102) bgfx::allocTransform(bgfx::Transform*, unsigned short)
3452 605
+1 484
+1 121
+1 121
-1 242
+1 242
-1 121
cfi=(110)
cfn=(1104)
calls=121 3698 
* 3872

fn=(3712)
1884 2178
+5 242
fi=(110)
700 242
fe=(109)
1889 484
fi=(110)
673 726
cfn=(3714)
calls=242 -11 
* 3872
* 363
cfn=(3714)
calls=121 -11 
* 1936
fe=(109)
1935 1815
2382 726
cfn=(3726)
calls=242 1650 
* 6534
+1 1936
fi=(110)
673 363
cfn=(3714)
calls=121 -11 
* 1936
+21 121
-21 242
+21 363
-21 121
cfn=(3718)
calls=121 -11 
* 1936
fe=(109)
2370 363
cfi=(110)
cfn=(3720)
calls=121 676 
* 1936
+2 847
fi=(142)
2506 484
fi=(143)
470 4356
-2 1210
fe=(109)

fn=(13920)
1612 6050
fi=(110)
1104 1210
fe=(109)
1635 363
fi=(110)
1051 726
fe=(109)
1633 363
+2 363
-2 363
+6 1089
fi=(142)
2514 1089
cob=(2)
cfi=(7)
cfn=(12)
calls=363 0 
* 105149
* 363
* 363
fe=(109)
1614 1936
fi=(110)
1079 1089
+2 363
-1 363
+1 363
+7 363
fe=(109)
1618 726
fi=(110)
1050 363
+29 363
-27 363
-2 363
+2 363
fe=(109)
1629 363
fi=(110)
1052 363
fe=(109)
1629 363
fi=(110)
1079 726
+1 363
+1 363
fe=(109)
1631 363
fi=(110)
1080 363
+1 363
fe=(109)
1631 363
+16 4840

fn=(19198)
1446 968
+1 484
+6 121
-2 242
+2 363
+4 242
+1 968

fn=(19406)
2652 605
+1 484
+1 121
+1 121
-1 242
+1 242
-1 121
cfi=(110)
cfn=(19408)
calls=121 2224 
* 335049

fl=(88)
fn=(706)
40 18777
+2 6259
-2 6259
+2 6259
+22 6259
fi=(13)
916 12518
fi=(16)
120 18732
fi=(13)
920 12488
fe=(88)
64 18777
fi=(13)
924 30
cfi=(28)
cfn=(20334)
calls=15 407 
* 23989
fe=(88)
64 15

fn=(458) Logic::EventManager::processMessageQueue()
74 135736
fi=(13)
656 101802
fe=(88)
77 16967
fi=(13)
656 16967
fe=(88)
77 16967
fi=(17)
2107 975
fe=(88)
77 1950
+2 20818
fi=(99)
859 1753
fe=(88)
82 5259
+12 5259
cob=(11)
cfi=(104)
cfn=(766)
calls=1753 -62 
* 217524
* 1753
fi=(11)
830 1753
-53 1753
+53 1753
fi=(28)
144 3506
fi=(30)
366 6276
+1 4891
fi=(28)
146 3506
fe=(88)
-56 39610
+2 11439
fi=(100)
-23 1753
+1 5259
fe=(88)
+7 13389
+13 18917
+13 50110
+11 1582
+3 1582
-49 2373
+39 791
-39 791
cfi=(45)
cfn=(226)
calls=791 -24 
* 41132
* 791
+2 5537
cfi=(44)
cfn=(774) Logic::PlayerController::onMessage(Logic::EventMessages::EventMessage&, Memory::GenericHandle<24, 8, 5>)
calls=791 904 
* 8445460
* 791
fi=(11)
805 6180
fi=(30)
368 1569
cob=(2)
cfi=(7)
cfn=(12)
calls=1569 0 
* 28274
* 1569
* 3138
fe=(88)
120 135736

fl=(156)
fn=(18314)
102 363
+17 121

fn=(18316)
123 121
+2 363
+35 121

fl=(167) /home/desktop/code/REGoth/lib/bullet3/src/BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp
fn=(19438) btDiscreteDynamicsWorld::internalSingleStepSimulation(float)
475 726
+4 121
-4 121
+4 242
+5 605
1128 242
490 121
-2 242
+1 363
fi=(61)
164 242
fe=(167)
490 121
+3 121
614 121
493 121
cfn=(19442) btDiscreteDynamicsWorld::createPredictiveContacts(float)
calls=121 882 
* 3872
+3 242
614 121
496 121
cfi=(55)
cfn=(19446)
calls=121 215 
* 121847
+2 363
cfn=(19490) btDiscreteDynamicsWorld::calculateSimulationIslands()
calls=121 743 
* 16214
+8 121
-5 242
fi=(196) /home/desktop/code/REGoth/lib/bullet3/src/BulletDynamics/Dynamics/btDynamicsWorld.h
134 121
fe=(167)
506 242
cfn=(19510) btDiscreteDynamicsWorld::solveConstraints(btContactSolverInfo&)
calls=121 712 
* 133584
+6 484
cfn=(19540) btDiscreteDynamicsWorld::integrateTransforms(float)
calls=121 978 
* 3025
614 363
-97 484
cfn=(19542) btDiscreteDynamicsWorld::updateActivationState(float)
calls=121 622 
* 2057
+2 363
+3 726

fn=(19542)
622 484
fi=(76) /home/desktop/code/REGoth/lib/bullet3/src/BulletDynamics/Dynamics/btRigidBody.h
445 121
fe=(167)
622 363
fi=(76)
445 121
fe=(167)
625 242
+30 726

fn=(19544) btDiscreteDynamicsWorld::synchronizeMotionStates()
376 363
+2 121
-2 121
+2 242
+13 484
+7 484

fn=(19432) btDiscreteDynamicsWorld::stepSimulation(float, int, float)
402 847
+7 121
-7 121
+7 121
+4 242
-1 121
+2 242
+2 121
+21 242
-21 121
+21 242
-21 121
+1 726
fi=(61)
164 121
fe=(167)
437 242
+2 363
fi=(61)
164 121
fe=(167)
440 242
cfi=(168) /home/desktop/code/REGoth/src/physics/DebugDrawer.h
cfn=(19436) Physics::DebugDrawer::getDebugMode() const
calls=121 37 
* 242
* 484
+2 242
+6 1089
267 1573
+2 484
fi=(76)
-58 484
fe=(167)
+60 484
-4 121
450 484
342 242
454 484
+2 242
-2 121
+2 121
cfn=(19438)
calls=121 +19 
* 288101
+1 363
cfn=(19544)
calls=121 -81 
* 1815
-3 363
+11 484
329 242
472 968

fn=(19510)
712 1331
fi=(59)
222 242
+8 121
+13 484
fe=(167)
717 726
fi=(59)
366 242
fe=(167)
728 968
+2 363
fi=(61)
164 121
fe=(167)
730 242
122 121
+1 242
-1 121
+2 121
+1 121
fi=(59)
230 242
+5 121
+8 121
-13 242
+5 121
+8 121
-13 242
fe=(167)
731 242
fi=(59)
243 121
fe=(167)
731 1089
+3 605
cfi=(175)
cfn=(19516)
calls=121 355 
* 8833
+2 121
188 605
+1 484
+1 363
+2 847
cfi=(179) /home/desktop/code/REGoth/lib/bullet3/src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp
cfn=(19524) btSequentialImpulseConstraintSolver::solveGroup(btCollisionObject**, int, btPersistentManifold**, int, btTypedConstraint**, int, btContactSolverInfo const&, btIDebugDraw*, btDispatcher*)
calls=121 1926 
* 110352
* 121
fi=(59)
+38 363
+5 121
+8 121
-13 242
+5 121
+8 121
-13 242
fe=(167)
738 121
fi=(59)
243 121
fe=(167)
738 484
+1 968

fn=(19540)
978 1452
+3 363
1084 242
+34 968

fn=(19442)
882 1210
+6 121
-6 121
+6 242
fi=(59)
117 363
+2 121
-25 121
+1 121
+1 121
+1 121
fe=(167)
897 242
+79 968

fn=(19490)
743 363
+3 484
cfi=(175)
cfn=(19492)
calls=121 74 
* 9922
* 121
+4 363
+18 242
+18 242
+3 121
-3 242
cfi=(175)
cfn=(19506)
calls=121 106 
* 3872
* 242

fl=(77) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btTriangleIndexVertexArray.h
fn=(366) btTriangleIndexVertexArray::unLockReadOnlyVertexBase(int) const
105 125048

fl=(97)
fn=(542) std::_Deque_iterator<unsigned long, unsigned long&, unsigned long*> std::uninitialized_copy<std::_Deque_iterator<unsigned long, unsigned long const&, unsigned long const*>, std::_Deque_iterator<unsigned long, unsigned long&, unsigned long*> >(std::_Deque_iterator<unsigned long, unsigned long const&, unsigned long const*>, std::_Deque_iterator<unsigned long, unsigned long const&, unsigned long const*>, std::_Deque_iterator<unsigned long, unsigned long&, unsigned long*>)
107 43088
fi=(22)
354 10772
150 21544
+1 21544
354 118492
+1 43088
fi=(30)
-33 21544
fi=(22)
151 21544
fe=(97)
-24 10772
fi=(22)
+24 21544
fe=(97)
-24 21544

fn=(534)
107 43088
fi=(22)
354 10772
150 21544
+1 21544
354 118492
+1 43088
fi=(30)
-33 21544
fi=(22)
151 21544
fe=(97)
-24 10772
fi=(22)
+24 21544
fe=(97)
-24 21544

fl=(124) /home/desktop/code/REGoth/src/ui/PrintScreenMessages.cpp
fn=(20280) UI::PrintScreenMessages::printMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
58 184
fi=(99)
364 23
fe=(124)
59 46
fi=(16)
+45 69
cob=(11)
cfi=(95)
cfn=(510)
calls=23 -61 
* 2806
* 23
* 23
fi=(4)
+38 46
fi=(16)
-38 23
fi=(4)
+6 23
fi=(2)
211 115
+6 23
-2 23
+2 23
fi=(4)
+80 46
fi=(5)
-9 23
fi=(4)
142 23
fi=(5)
288 23
fi=(4)
132 23
fi=(99)
1771 23
fi=(5)
243 23
fi=(99)
1771 46
cob=(11)
cfi=(182)
cfn=(20298)
calls=23 131 
* 161
* 23
fe=(124)
64 23
fi=(99)
354 23
fe=(124)
64 23
+1 161
fi=(99)
1124 23
356 46
1781 46
cob=(11)
cfi=(182)
cfn=(20286)
calls=23 139 
* 115
* 23
* 23
fi=(4)
152 23
+28 46
fi=(16)
-70 46
cob=(11)
cfi=(41)
cfn=(200)
calls=23 -61 
* 2139
* 23
* 23
fe=(124)

fn=(1032) UI::PrintScreenMessages::update(double, Engine::Input::MouseState&, Render::RenderConfig&)
28 242
-1 968
+4 242
cfi=(123)
cfn=(1031) UI::View::update(double, Engine::Input::MouseState&, Render::RenderConfig&)'2
calls=121 +7 
* 2057
+3 121
+2 121
-2 121
+2 121
-2 121
+2 242
fi=(99)
859 121
fe=(124)
45 363
fi=(99)
162 605
fe=(124)
50 605
-5 1210
+2 1210
+7 484
cfn=(1036) UI::PrintScreenMessages::drawTimedMessages(double, Render::RenderConfig&)
calls=121 +14 
* 1815
+1 847
fi=(4)
+55 23
fe=(124)
-71 46
fi=(4)
+93 23
fi=(5)
243 23
fi=(4)
110 23
fe=(124)
-71 23
cfn=(20280)
calls=23 +19 
* 6670
* 23
fi=(4)
180 69
fe=(124)
40 69

fn=(1036)
68 484
fi=(99)
859 121
fe=(124)
68 242
+6 242
+32 726

fl=(149)
fn=(18302)
0 121

fn=(7368) _glfwPlatformWaitEvents
0 1214
cob=(9)
cfi=(146)
cfn=(7372)
calls=607 0 
0 226038
0 607
0 38848
cob=(2)
cfi=(7)
cfn=(7436)
calls=607 0 
0 23649
0 607
cob=(2)
cfi=(7)
cfn=(7362)
calls=1 0 
0 20
0 1214

fl=(179)
fn=(19536) btSequentialImpulseConstraintSolver::solveGroupCacheFriendlyFinish(btCollisionObject**, int, btContactSolverInfo const&)
1840 1089
+4 484
+2 363
+19 242
+5 242
+18 242
fi=(59)
211 363
+4 121
-4 363
+4 121
-4 363
+4 121
-4 363
+4 121
-4 242
+4 121
fe=(179)
1920 1089

fn=(19524)
1926 1573
+5 726
cfn=(19526) btSequentialImpulseConstraintSolver::solveGroupCacheFriendlySetup(btCollisionObject**, int, btPersistentManifold**, int, btTypedConstraint**, int, btContactSolverInfo const&, btIDebugDraw*)
calls=121 1185 
* 9922
+2 1573
cfn=(19530) btSequentialImpulseConstraintSolver::solveGroupCacheFriendlyIterations(btCollisionObject**, int, btPersistentManifold**, int, btTypedConstraint**, int, btContactSolverInfo const&, btIDebugDraw*)
calls=121 1820 
* 88572
+2 847
cfn=(19536)
calls=121 -95 
* 6050
+3 1089

fn=(19526)
1185 1089
+77 121
-76 121
-1 363
+5 121
+72 242
+6 121
fi=(59)
300 363
-70 242
fe=(179)
1277 121
fi=(59)
243 242
fe=(179)
1277 121
+33 363
fi=(59)
211 363
+4 121
fe=(179)
1503 605
1177 363
1503 484
fi=(59)
211 242
fe=(179)
1516 121
fi=(59)
215 121
fe=(179)
1516 242
fi=(59)
215 121
-4 242
fe=(179)
1524 121
fi=(59)
215 121
fe=(179)
1524 121
+4 242
+4 242
+8 1089
1382 121
fi=(59)
211 242
+4 242
315 121
211 242
+4 363
fe=(179)

fn=(19530)
1820 1089
+5 121
-5 726
+5 726
cfn=(19532) btSequentialImpulseConstraintSolver::solveGroupCacheFriendlySplitImpulseIterations(btCollisionObject**, int, btPersistentManifold**, int, btTypedConstraint**, int, btContactSolverInfo const&, btIDebugDraw*)
calls=121 -45 
* 2178
* 484
+4 1089
+3 968
-3 121
+3 484
cfn=(19534) btSequentialImpulseConstraintSolver::solveSingleIteration(int, btCollisionObject**, int, btPersistentManifold**, int, btTypedConstraint**, int, btContactSolverInfo const&, btIDebugDraw*)
calls=121 1544 
* 6171
* 8712
-3 1089
+3 4356
cfn=(19534)
calls=1089 1544 
* 55539
-3 3630
+8 1089

fn=(19532)
1780 363
+2 363
+2 121
+2 121
-2 242
+2 605
+31 363

fn=(19534)
1544 14520
+6 3630
+35 1210
-3 3630
1757 1210
+19 9680
1585 4840
+7 2420
+2 2420
+13 3630
1776 1210
1660 3630
+12 3630
+16 6050

fl=(80)
fn=(372)
45 109032

fl=(125) /home/desktop/code/REGoth/src/ui/SubtitleBox.cpp
fn=(1038) UI::SubtitleBox::update(double, Engine::Input::MouseState&, Render::RenderConfig&)
23 363

fl=(45)
fn=(226)
44 308510
fi=(12)
+94 925530
fe=(45)
-91 308510
+2 308510
fi=(12)
+89 308510
fe=(45)
-83 308510
-5 308510
fi=(12)
+88 617020
fe=(45)
-91 308510
+5 617020
fi=(12)
+86 254096
fe=(45)
-85 254096
fi=(12)
+85 508192
fe=(45)
-85 508192
+7 254096
-3 508192
-4 54414
+7 54414
-3 108828
fi=(12)
+81 253975
fe=(45)
-80 253975
fi=(12)
+80 507950
fe=(45)
-80 507950
+7 253975
-3 507950
-4 54535
+7 54535
-3 109070
fi=(12)
+76 1269875
fe=(45)
-75 507950
+7 253975
-3 507950
-4 54535
+7 54535
-3 109070
fi=(12)
+71 2159570
fe=(45)
-70 617020
+7 308510

fn=(390)
85 36629
fi=(51)
368 36629
fe=(45)
85 36629
fi=(51)
368 586064
fe=(45)
93 109887
+1 73258
cfi=(82)
cfn=(392)
calls=36629 -27 
* 36629
+2 109887
+1 36508
-8 36508
+8 73016
cfi=(47)
cfn=(394) Logic::ModelVisual::onTransformChanged()
calls=36508 401 
* 38420756
-8 242

fn=(866) Vob::getTransform(Vob::VobInformation&)
170 121
+1 121

fl=(135)
fn=(19348) ImVector<ImVec2>::push_back(ImVec2 const&)
890 5324

fl=(57)
fn=(19468) btDbvtBroadphase::collide(btDispatcher*)
491 605
+20 121
-20 242
+20 121
-20 242
+20 1210
cfi=(171)
cfn=(19470)
calls=121 -45 
* 15972
+1 363
+7 968
+1 242
+1 242
+25 242
+12 242
+29 121
-3 121
+1 121
+1 121
+1 242
+4 121
+1 242
-1 121
+1 121
+1 968
-5 1089

fn=(19476) btDbvtBroadphase::performDeferredRemoval(btDispatcher*)
418 968
+2 121
-2 121
+2 242
cfi=(172)
cfn=(19478) btSortedOverlappingPairCache::hasDeferredRemoval()
calls=121 -50 
* 242
* 242
+3 484
cfi=(172)
cfn=(19480) btSortedOverlappingPairCache::getOverlappingPairArray()
calls=121 -91 
* 242
* 242
fi=(59)
-57 242
243 242
fe=(57)
487 968
-2 121
-46 242

fn=(268)
228 373274
+3 67868
-3 67868
+3 33934
fi=(58)
1013 101802
fi=(59)
230 101802
+13 67868
fi=(60)
102 67868
fi=(58)
1021 67868
fi=(59)
243 169670
fi=(58)
1021 373274
+4 33934
+1 33934
fi=(60)
99 33934
fi=(58)
1027 33934
fi=(60)
99 33934
fi=(59)
+86 101802
fi=(58)
1025 33934
fi=(56)
799 33934
-1 33934
+1 33934
-2 33934
+1 33934
-1 33934
fi=(58)
1026 101802
fi=(56)
799 33934
-1 33934
+1 33934
-2 33934
+1 33934
-1 33934
fi=(58)
1027 101802
fi=(60)
99 33934
+3 67868
-3 33934
+3 101802
-3 33934
+3 33934
+2 33934
fi=(58)
1025 67868
+1 67868
fi=(60)
99 67868
fi=(58)
1027 67868
fi=(60)
99 67868
fi=(59)
+86 203604
fi=(58)
1025 67868
fi=(56)
799 67868
-1 67868
+1 67868
-2 67868
+1 67868
-1 67868
fi=(58)
1026 203604
fi=(56)
799 67868
-1 67868
+1 67868
-2 67868
+1 67868
-1 67868
fi=(58)
1027 203604
fi=(60)
99 67868
+3 135736
-3 67868
+3 203604
-3 67868
+3 67868
+2 169670
-4 407208
+1 203604
-1 101802
+1 203604
-1 101802
+1 101802
+3 203604
+9 203604
-14 101802
+1 101802
+13 101802
+1 101802
-1 101802
+1 610812
+2 203604
-3 407208
+3 203604
+2 101802
+4 101802
-2 101802
+2 407208
fi=(58)
1048 848350
fe=(57)
241 33934
fi=(58)
1013 67868
fe=(57)
251 271472
fi=(58)
1033 203604
+2 101802
+5 33934
+1 33934
-1 33934
+1 101802
fe=(57)
223 407208
cfi=(55)
cfn=(276)
calls=67868 955 
* 580644023
* 203604

fn=(19466)
391 605
+1 121
cfn=(19468)
calls=121 +99 
* 24200
+23 121
-2 242
+2 242
-2 121
cfn=(19476)
calls=121 +5 
* 4719

fn=(19460)
286 2662
+8 242
fi=(58)
428 1936
+1 484
fe=(57)
294 242
+9 242
-1 242
fi=(58)
551 484
-4 726
+1 484
+1 726
+1 484
+1 726
fe=(57)
66 1089
+1 726
333 242
-2 968
+1 484
+1 484
56 242
+1 242
332 484
57 242
+1 847
335 121
59 121
335 242
59 121
335 121
+11 1936
fi=(58)
828 242
fi=(56)
-29 968
-1 968
-1 726
+32 1936
fe=(57)
307 726
+1 242
-1 484
+1 242
+1 484
+1 484
+3 242
-2 968
cfi=(58)
cfn=(19464)
calls=242 475 
* 5566
* 484
66 363

fn=(19484)
611 242
+1 242

fl=(71)
fn=(324)
94 246984
fi=(56)
250 123492
+1 123492
-1 123492
+1 617460
-1 123492
+2 370476
-2 617460
+2 370476
-2 123492
+2 987936
fe=(71)
97 617460

fl=(29) /usr/include/c++/6.2.1/bits/deque.tcc
fn=(106) std::_Deque_iterator<unsigned long, unsigned long&, unsigned long*> std::move<unsigned long>(std::_Deque_iterator<unsigned long, unsigned long const&, unsigned long const*>, std::_Deque_iterator<unsigned long, unsigned long const&, unsigned long const*>, std::_Deque_iterator<unsigned long, unsigned long&, unsigned long*>)
1032 193896
fi=(22)
354 129264
fe=(29)
1032 43088
fi=(22)
354 107720
+1 86176
fe=(29)
1040 43088
fi=(22)
151 129264
fe=(29)
1051 193896
fi=(30)
368 86176
fe=(29)

fn=(102) std::deque<unsigned long, std::allocator<unsigned long> >::operator=(std::deque<unsigned long, std::allocator<unsigned long> > const&)
92 172352
+3 43088
fi=(22)
354 107720
+1 21544
-1 43088
+1 21544
-1 193896
+1 21544
-1 21544
+1 21544
-1 21544
+1 21544
-1 21544
+1 43088
-1 21544
+1 21544
-1 107720
+1 86176
fe=(29)
115 43088
+11 193896
fi=(22)
+25 323160
fe=(29)
-35 236984
cfn=(106)
calls=21544 1032 
* 1012568
fi=(22)
2053 64632
740 21544
2053 21544
740 43088
2055 193896
fe=(29)

fn=(526) void std::deque<Daedalus::DaedalusVM::VMState, std::allocator<Daedalus::DaedalusVM::VMState> >::_M_push_back_aux<Daedalus::DaedalusVM::VMState const&>(Daedalus::DaedalusVM::VMState const&)
462 96948
fi=(22)
2115 21544
-1 10772
+1 53860
-1 21544
fi=(16)
104 21544
cob=(11)
cfi=(95)
cfn=(510)
calls=10772 -61 
* 1346500
* 10772
fe=(29)
471 10772
+4 10772
fi=(16)
120 43088
cfi=(42)
cfn=(530)
calls=10772 +30 
* 13893444
fe=(29)
481 21544
fi=(22)
255 10772
fe=(29)
481 10772
fi=(22)
256 10772
-1 10772
fe=(29)
483 10772
fi=(22)
256 10772
fe=(29)
490 86176

fn=(118) std::_Deque_iterator<unsigned int, unsigned int&, unsigned int*> std::move<unsigned int>(std::_Deque_iterator<unsigned int, unsigned int const&, unsigned int const*>, std::_Deque_iterator<unsigned int, unsigned int const&, unsigned int const*>, std::_Deque_iterator<unsigned int, unsigned int&, unsigned int*>)
1032 193896
fi=(22)
354 129264
fe=(29)
1032 43088
fi=(22)
354 107720
+1 86176
fe=(29)
1040 43088
fi=(22)
151 129264
fe=(29)
1051 193896
fi=(30)
368 86176
fe=(29)

fn=(20662) std::deque<unsigned long, std::allocator<unsigned long> >::_M_reallocate_map(unsigned long, bool)
901 20
+4 4
+4 2
-4 8
+1 2
+3 6
+3 2
+1 4
-1 2
+1 6
-2 2
+3 4
+1 2
fi=(30)
366 6
+1 4
+1 6
cob=(2)
cfi=(7)
cfn=(12)
calls=2 0 
* 20
* 2
* 2
fi=(22)
255 2
-1 2
+1 2
+1 4
fe=(29)
942 2
fi=(22)
254 2
+1 4
+1 4
fe=(29)
943 16

fn=(114) std::deque<unsigned int, std::allocator<unsigned int> >::operator=(std::deque<unsigned int, std::allocator<unsigned int> > const&)
92 172352
+3 43088
fi=(22)
354 107720
+1 21544
-1 43088
+1 21544
-1 193896
+1 21544
-1 21544
+1 21544
-1 21544
+1 21544
-1 21544
+1 43088
-1 21544
+1 21544
-1 107720
+1 86176
fe=(29)
115 43088
+11 193896
fi=(22)
+25 323160
fe=(29)
-35 236984
cfn=(118)
calls=21544 1032 
* 1012568
fi=(22)
2053 64632
740 21544
2053 21544
740 43088
2055 193896
fe=(29)

fn=(20328) void std::deque<unsigned long, std::allocator<unsigned long> >::_M_push_back_aux<unsigned long>(unsigned long&&)
462 28
fi=(22)
2115 7
fe=(29)
462 7
fi=(22)
2115 35
-1 14
+2 6
cfi=(29)
cfn=(20662)
calls=2 901 
* 142
* 2
fi=(16)
104 4
cob=(11)
cfi=(95)
cfn=(510)
calls=2 -61 
* 449
* 2
* 10
cob=(11)
cfi=(95)
cfn=(510)
calls=5 -61 
* 1115
* 5
fe=(29)
471 7
+4 14
fi=(16)
120 21
fe=(29)
481 14
fi=(22)
255 7
fe=(29)
481 7
fi=(22)
256 7
-1 7
fe=(29)
483 7
fi=(22)
256 7
fe=(29)
490 28

fl=(112)
fn=(908)
130 2904
+1 1452
+1 1573
fi=(109)
-79 121
fe=(112)
+80 121
fi=(120)
-51 726
cfi=(109)
cfn=(942)
calls=121 +78 
* 23595
fi=(109)
-29 242
fe=(112)
+80 242
fi=(120)
-51 1452
cfi=(109)
cfn=(942)
calls=242 +78 
* 47190
fe=(112)
+50 1210
fi=(113)
+11 242
fe=(112)
-3 121
fi=(113)
+3 1331
fe=(112)
-3 605
fi=(113)
+3 605
-72 6534
cob=(2)
cfi=(7)
cfn=(914)
calls=726 -71 
* 18876
* 726
172 726
fe=(112)
-30 726
+1 2904

fn=(936)
153 3267
-5 363
fi=(117)
48 1089
-7 363
+7 363
fe=(112)
148 363
fi=(117)
41 726
fe=(112)
148 363
fi=(117)
41 15246
fi=(116)
226 726
+1 1815
fe=(112)
-40 363
fi=(109)
46 726
fi=(120)
+31 2541
cfi=(109)
cfn=(942)
calls=363 +83 
* 81312
* 363
fi=(116)
+20 363
fe=(112)
+67 726
-2 726
fi=(116)
-65 363
fi=(117)
-49 1089
-7 363
+7 363
-7 363
+7 363
-7 1452
fe=(112)
165 363
fi=(117)
41 14157
fe=(112)
164 1089
+1 726
cfi=(116)
cfn=(958) void tinystl::unordered_hash_node_insert<unsigned short, void>(tinystl::unordered_hash_node<unsigned short, void>*, unsigned long, tinystl::unordered_hash_node<unsigned short, void>**, unsigned long)
calls=363 -62 
* 21054
+2 363
+1 363
-1 363
+1 726
-1 363
+1 363
+19 363
-1 726
+1 2541

fn=(14768)
153 2904
-5 1452
fi=(117)
48 363
fe=(112)
148 363
fi=(117)
41 22869
fi=(116)
226 726
+1 1694
+1 242
fe=(112)
-41 121
-28 121
+28 1089
fi=(109)
46 484
fi=(120)
+31 1694
cfi=(109)
cfn=(942)
calls=242 +83 
* 52217
* 242
fi=(116)
+20 242
fe=(112)
+67 484
-2 242
+3 242
-3 242
fi=(116)
-65 242
fi=(117)
-49 484
-7 13068
fe=(112)
164 242
fi=(117)
41 484
fe=(112)
164 242
fi=(117)
41 484
fe=(112)
164 484
+1 484
fi=(117)
41 484
fe=(112)
165 242
cfi=(116)
cfn=(14776) void tinystl::unordered_hash_node_insert<unsigned int, void>(tinystl::unordered_hash_node<unsigned int, void>*, unsigned long, tinystl::unordered_hash_node<unsigned int, void>**, unsigned long)
calls=242 -62 
* 13772
+2 242
+1 242
-1 242
+1 484
-1 242
+1 242
+19 242
-1 484
+1 1694

fl=(136)
fn=(19276) ImDrawList::PushTextureID(void* const&)
263 2904
fi=(135)
890 2904
fe=(136)
211 2178
+1 1089
-47 2904
+2 726
fi=(135)
890 6534
fe=(136)
266 2541

fn=(19334) ImDrawList::PathArcToFast(ImVec2 const&, float, int, int)
681 11979
+1 3267
+3 2178
+11 2178
+1 3267
+6 1210
fi=(135)
880 605
fe=(136)
703 1210
fi=(135)
880 3630
+10 4840
fe=(136)
704 2420
fi=(135)
890 2420
fe=(136)
704 2420
fi=(135)
890 7260
fe=(136)
704 2420
+2 24200
fi=(135)
890 2420
fe=(136)
707 16940
fi=(135)
890 6776
fe=(136)
710 8712

fn=(19306)
232 484
+1 484
-1 1936
+1 484
-1 968
+1 1452
+1 484
-1 1936
+1 484
-1 1452
+1 1452
fi=(134)
122 484
fi=(135)
890 484
fi=(134)
122 4356
fi=(135)
890 2904
fe=(136)
192 484
fi=(135)
890 1936
fe=(136)
192 2420
+1 484
-1 968
+1 484
-1 968
+1 2904
+1 3146
+53 121
-51 121
+51 484
-51 121
cfn=(19370) ImDrawList::AddDrawCmd()
calls=121 -33 
* 6292
-2 484
cob=(2)
cfi=(7)
cfn=(22)
calls=121 0 
* 3267
* 121
* 242
+7 726
+35 1452
+1 242
-1 242
+2 242
-2 242
+3 242
+1 242
-3 242
+1 242
+1 242
+1 484
-35 1452
+42 2178

fn=(19330) ImDrawList::AddRectFilled(ImVec2 const&, ImVec2 const&, unsigned int, float, int)
820 968
-1 2178
+3 484
+2 484
cfn=(19332) ImDrawList::PathRect(ImVec2 const&, ImVec2 const&, float, int)
calls=242 -49 
* 122210
fi=(135)
1212 1452
cfi=(136)
cfn=(19340) ImDrawList::AddConvexPolyFilled(ImVec2 const*, int, unsigned int, bool)
calls=242 598 
* 281204
877 968
fe=(136)
-45 1452

fn=(19342) ImDrawList::PrimReserve(int, int)
357 5445
+1 605
+3 605
-3 605
+4 605
-4 1210
+1 605
fi=(135)
877 1815
+3 605
fe=(136)
363 605
fi=(135)
877 605
fe=(136)
365 605
-2 605
+3 605
-3 605
fi=(135)
877 1815
+3 605
fe=(136)
367 605
fi=(135)
877 605
fe=(136)
367 1210
+1 4840

fn=(19352) ImFont::CalcTextSizeA(float, float, float, char const*, char const*, char const**) const
1891 1331
+1 121
-1 121
+1 121
+4 121
+9 121
-9 121
+9 847
+2 1210
+30 605
+3 605
-2 605
-1 605
+1 605
+11 1210
+13 3025
+1 2420
+6 605
-64 1331
+70 484
+1 121
+2 242
+3 726
+1 1089

fn=(19362) ImDrawList::AddText(ImFont const*, float, ImVec2 const&, unsigned int, char const*, char const*, float, ImVec4 const*)
926 121
+1 121
-1 363
+1 121
-1 121
+1 121
-1 121
+1 121
+3 726
+2 242
+5 242
+2 363
fi=(135)
-68 121
fe=(136)
+73 242
+1 121
-1 484
+1 121
+7 1331
cfn=(19366) ImFont::RenderText(ImDrawList*, float, ImVec2, unsigned int, ImVec4 const&, char const*, char const*, float, bool) const
calls=121 2001 
* 82522
* 242
+1 726

fn=(19370)
163 968
+2 847
+1 121
-1 363
+1 605
+1 121
fi=(135)
890 121
fe=(136)
167 121
fi=(135)
890 2178
fe=(136)
171 847

fn=(19280) ImDrawList::PushClipRectFullScreen()
250 726
fi=(135)
890 121
fe=(136)
251 121
fi=(135)
890 121
fi=(134)
122 121
fe=(136)
251 242
fi=(134)
122 121
fe=(136)
251 121
fi=(134)
122 968
fi=(135)
890 726
fe=(136)
192 121
fi=(135)
890 484
fe=(136)
192 605
+1 121
-1 242
+1 121
-1 242
+1 726
+1 847
+7 242
+4 484
+48 726

fn=(19356) ImDrawList::AddTriangleFilled(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
886 484
-1 1452
fi=(135)
+5 2662
1212 363
890 242
1212 242
cfi=(136)
cfn=(19340)
calls=121 598 
* 55902
877 484
fe=(136)
+16 968

fn=(19340)
598 5324
+1 484
-1 484
+5 484
-4 968
+4 1452
+5 484
-1 484
+1 484
-1 1452
+1 484
+2 1452
-3 484
+3 968
cfn=(19342)
calls=484 357 
* 20328
+3 484
+2 1452
-2 968
+1 484
+1 484
-1 484
+1 4840
+2 2420
-2 968
+2 10285
-2 4114
+7 3388
+1 484
-1 484
+1 968
-1 1452
-24 10769
fi=(134)
133 21054
fe=(136)
623 3509
+6 3509
fi=(134)
114 7018
fe=(136)
630 3509
-1 3509
+1 7018
-7 3509
+2 3509
fi=(134)
109 3509
fe=(136)
625 3509
fi=(134)
109 7018
fe=(136)
625 3509
fi=(134)
109 7018
+24 24563
fe=(136)
678 3388
-35 5808
-20 3872
+20 1452
fi=(134)
108 2420
-2 968
fe=(136)
639 2420
+1 968
fi=(134)
108 15125
-2 6050
fe=(136)
639 15125
+1 6050
+2 10527
+1 17545
fi=(134)
114 10527
-5 3509
+5 3509
-5 3509
fe=(136)
649 3509
+5 7018
-5 3509
+5 7018
fi=(134)
109 7018
fe=(136)
649 3509
fi=(134)
109 10527
fe=(136)
649 7018
fi=(134)
108 10527
fe=(136)
650 21054
+4 3509
+1 14036
-1 10527
+1 3509
-22 12826
+25 1936
+20 3872

fn=(1182)
256 1936
fi=(135)
891 484
fe=(136)
192 242
fi=(135)
891 242
fe=(136)
192 1210
+1 242
-1 726
+1 242
-1 242
+1 1452
+1 1694
+66 847
-59 484
+1 1089
cob=(2)
cfi=(7)
cfn=(22)
calls=121 0 
* 2541
* 121
* 1573
fi=(135)
891 363
fe=(136)
205 484
+55 847

fn=(19272) ImDrawList::Clear()
121 1452
fi=(135)
877 4719
fe=(136)
125 363
+1 363
+1 363
fi=(135)
877 3993
fe=(136)
131 363
+1 363
+2 1452

fn=(19332)
775 484
+2 242
-2 484
+2 242
-2 1452
+2 2904
+1 1452
-1 242
+1 242
fi=(134)
121 484
fe=(136)
778 2178
fi=(134)
121 484
fe=(136)
780 1210
+9 847
+1 847
+1 847
+1 484
+1 1936
fi=(135)
92 726
fe=(136)
793 242
cfn=(19334)
calls=242 681 
* 22990
+1 2178
fi=(135)
92 242
fe=(136)
794 242
fi=(135)
92 242
fe=(136)
794 242
cfn=(19334)
calls=242 681 
* 22990
+1 2178
fi=(135)
92 242
fe=(136)
795 242
fi=(135)
92 242
fe=(136)
795 242
cfn=(19334)
calls=242 681 
* 22990
+1 2178
fi=(135)
92 242
fe=(136)
796 242
fi=(135)
92 242
fe=(136)
796 242
cfn=(19334)
calls=242 681 
* 22990
+2 1936
-6 242
-15 605

fn=(19366)
2001 2178
+1 484
+5 484
+3 242
+3 484
-7 121
+8 121
-1 121
+1 121
+6 363
+5 121
+2 121
+1 121
-3 242
+1 121
-1 363
+1 242
+1 484
+1 121
cfn=(19342)
calls=121 357 
* 5082
+3 121
+3 121
-4 121
+4 242
-3 121
+1 121
+2 242
-2 121
+2 363
-28 968
+30 1210
+27 605
+1 605
-1 605
+1 605
+2 605
+9 1210
+19 605
1784 1210
+2 605
fi=(135)
862 605
fe=(136)
1786 605
+1 1210
+1 1815
2094 1210
+2 605
+3 605
-3 605
+3 1815
+3 1210
+4 605
-4 605
+4 1210
-3 1210
+3 605
-3 605
+3 1210
-2 605
+11 605
-10 605
-1 605
+1 605
+4 1210
+2 605
+1 605
-8 605
+1 605
+5 605
+1 605
+1 605
+3 605
+32 605
+6 605
-6 605
+2 605
-2 605
+3 605
-3 1210
+1 605
-1 605
+8 605
-8 2420
+1 2420
+1 605
+1 605
+1 1210
-2 1210
+1 605
+1 605
-2 605
+3 605
+2 605
-5 605
+5 605
-5 605
+1 1815
+1 1815
+1 2420
+2 605
+1 1210
2034 605
2161 605
2034 605
2165 605
fi=(135)
877 242
fe=(136)
2165 121
fi=(135)
877 242
fe=(136)
2166 242
fi=(135)
877 121
fe=(136)
2166 121
fi=(135)
877 242
fe=(136)
2167 242
fi=(135)
877 121
fe=(136)
2167 242
fi=(135)
861 605
fe=(136)
2167 121
+2 121
-1 121
+2 121
-1 121
+2 968
2020 605

fl=(133)
fn=(1158)
4724 121
-1 121
+1 121
-2 242
-31 121
+31 242
-32 121
+32 242
-35 242
+2 121
-1 121
-1 121
-10 121
-1 121
-1 121
-1 121
-1 968
+54 121
-58 484
+8 242
+51 242
fi=(135)
891 242
fe=(133)
4724 121
fi=(135)
891 121
fe=(133)
4724 121
+10 847

fn=(1168) ImGui::PushID(int)
6137 484
+1 242
-1 726
fi=(134)
684 242
fe=(133)
984 242
6138 242
fi=(134)
684 242
fe=(133)
984 726
fi=(134)
684 242
fe=(133)
1798 242
984 242
+12 484
+8 9438
+16 242
1848 484
fi=(135)
890 1452
fe=(133)
6141 1936

fn=(1188) ImGui::LogFinish()
5776 726
+1 242
+1 484
+19 968

fn=(1194) AddWindowToRenderList(ImVector<ImDrawList*>&, ImGuiWindow*)
2564 847
+1 242
cfn=(1196) AddDrawListToRenderList(ImVector<ImDrawList*>&, ImDrawList*)
calls=121 -29 
* 2178
+1 363
+9 726

fn=(19296) ImGui::FindWindowByName(char const*)
3706 242
+2 242
+1 484
cfn=(19298) ImHash(void const*, int, unsigned int) [clone .constprop.173]
calls=242 984 
* 18150
+1 968
+1 1694
-1 242
+4 726

fn=(1172) ImGuiWindow::GetID(char const*, char const*) [clone .constprop.167]
1788 363
fi=(135)
871 363
fe=(133)
1790 363
-2 363
+3 1452
cfn=(1174) ImHash(void const*, int, unsigned int)
calls=363 984 
* 57717
+56 363
+1 726
-54 726

fn=(1196)
2536 121
+1 242
fi=(135)
871 605
fe=(133)
2542 605
fi=(135)
891 121
fe=(133)
2545 121
fi=(135)
891 121
fe=(133)
2545 242

fn=(19294) ImGui::Begin(char const*, bool*, ImVec2 const&, float, int)
3822 484
+8 242
-8 484
+8 242
-8 968
+8 242
-7 242
+7 242
-8 968
+12 242
cfn=(19296)
calls=242 3706 
* 22748
+1 242
-1 242
+1 726
-2 484
2079 242
3842 242
2079 242
3842 242
+1 484
+1 484
+5 605
fi=(135)
871 242
+19 121
fe=(133)
3849 242
fi=(135)
890 847
fe=(133)
3851 242
1818 242
-1 242
+1 242
fi=(134)
665 484
fe=(133)
1819 242
3668 484
+1 484
+1 484
+1 484
+1 484
+1 484
3855 484
+1 242
-1 242
+1 726
+10 242
+4 242
-4 242
+3 242
+1 242
-4 242
+4 242
+17 242
-18 242
+18 484
+2 484
+1 242
4883 121
3892 121
+2 726
+9 726
+6 484
+8 1089
fi=(135)
861 484
fe=(133)
3918 605
+5 242
+5 242
-5 484
+1 484
+1 484
+3 242
fi=(134)
666 968
-1 363
+1 363
fe=(133)
4340 121
fi=(134)
667 121
+1 121
fe=(133)
4340 363
-2 121
+3 121
fi=(134)
134 363
-12 605
fe=(133)
4340 242
fi=(134)
134 484
668 242
fe=(133)
4340 121
fi=(134)
667 121
+1 121
fe=(133)
4340 363
-2 121
+3 121
fi=(134)
134 363
-12 605
fe=(133)
4340 242
fi=(134)
134 484
668 242
fe=(133)
4343 484
-2 242
+1 242
-1 242
+2 242
-1 242
fi=(134)
134 242
fe=(133)
4343 242
fi=(134)
134 242
fe=(133)
4342 242
+1 242
fi=(134)
134 1452
fe=(133)
4344 242
fi=(134)
134 242
fe=(133)
4344 726
fi=(134)
134 726
fe=(133)
4344 242
cfi=(134)
cfn=(19304)
calls=242 684 
* 37873
+3 242
+1 242
-1 484
+1 242
+1 242
+5 242
-4 242
+4 242
+17 726
+2 1936
3899 484
+2 726
fi=(135)
890 605
fe=(133)
3849 242
fi=(135)
877 242
fe=(133)
3930 242
fi=(135)
877 242
fe=(133)
3933 242
-2 242
+1 242
fi=(135)
877 242
fe=(133)
3934 242
-1 242
fi=(135)
877 242
fe=(133)
3938 242
fi=(135)
877 484
fe=(133)
3938 242
cfi=(136)
cfn=(19272)
calls=242 121 
* 8954
+1 1210
cfi=(136)
cfn=(19276)
calls=242 263 
* 14520
3343 242
+1 1452
+2 968
3940 242
+1 484
-1 242
+1 484
-1 484
+1 242
+3 1210
cfi=(134)
cfn=(19304)
calls=242 684 
* 24200
* 242
+2 968
+10 484
fi=(134)
667 121
-1 242
+1 121
-1 121
+1 121
fe=(133)
3959 121
fi=(134)
667 121
fe=(133)
3959 121
fi=(134)
667 121
fe=(133)
3959 121
fi=(134)
667 121
fe=(133)
3958 121
fi=(134)
667 121
fe=(133)
3958 363
+1 121
+16 3388
+1 2904
+3 484
-3 242
+3 242
+2 484
+12 2178
+4 726
+46 1452
cfn=(19314) ApplySizeFullWithConstraint(ImGuiWindow*, ImVec2)
calls=242 3783 
* 7986
+1 1210
+10 968
+7 484
+1 2662
+6 484
+17 484
+11 1694
+7 726
+3 242
-3 1694
+3 726
+6 1210
+1 726
+5 242
-5 242
+5 242
-4 484
+1 484
+3 484
+5 968
fi=(134)
122 484
fe=(133)
4130 242
fi=(134)
122 968
fe=(133)
4130 242
fi=(134)
122 968
fe=(133)
4129 484
+1 726
+4 484
fi=(134)
666 726
-1 363
+1 363
+1 242
fe=(133)
4139 121
fi=(134)
667 363
fe=(133)
4139 121
fi=(134)
667 242
fe=(133)
4139 121
fi=(134)
667 363
fe=(133)
4139 121
+9 242
+1 242
-1 1452
fi=(134)
122 1452
fe=(133)
4149 242
+34 1694
+1 242
-1 242
+1 1452
+1 968
4367 484
+4 968
3921 242
4085 484
4186 242
-1 242
+1 242
-1 242
+1 484
+5 242
-5 242
+6 242
-1 242
+2 242
+1 242
-1 242
-3 968
+7 4114
+3 242
+1 242
-1 242
+1 242
+1 1331
cfi=(134)
cfn=(19326)
calls=121 128 
* 5929
fi=(134)
108 121
666 121
108 121
666 121
108 605
fe=(133)
4202 121
fi=(134)
666 121
fe=(133)
4202 121
fi=(134)
666 121
-1 363
+1 363
108 121
fe=(133)
4202 242
fi=(134)
108 121
fe=(133)
4202 363
fi=(134)
108 121
fe=(133)
4202 484
cfi=(136)
cfn=(19330)
calls=121 820 
* 205821
* 242
+3 484
+1 1210
cfn=(19324) ImGui::GetColorU32(int, float) [clone .constprop.171]
calls=121 1215 
* 7865
* 1936
cfi=(136)
cfn=(19330)
calls=121 820 
* 205579
* 242
+3 484
+9 484
+2 484
+5 726
+10 484
+10 242
fi=(134)
666 242
fe=(133)
4245 484
+1 242
-1 242
+1 484
fi=(134)
666 242
fe=(133)
4246 242
fi=(134)
666 242
fe=(133)
4245 242
fi=(134)
666 242
-1 363
+1 484
+2 121
fe=(133)
4246 121
fi=(134)
668 363
fe=(133)
4246 121
fi=(134)
668 242
fe=(133)
4246 242
+1 242
-1 242
+1 2904
+1 484
-1 242
+1 1694
fi=(135)
877 242
fe=(133)
4252 242
+2 242
-1 242
+7 242
-2 242
fi=(135)
877 484
fe=(133)
4258 242
-10 242
+3 242
+3 242
+5 242
-8 242
+8 242
-5 242
-3 242
fi=(134)
108 242
fe=(133)
4251 242
+3 242
fi=(134)
108 242
fe=(133)
4254 242
+8 242
-8 242
+1 242
+6 242
fi=(134)
122 242
fe=(133)
4262 242
-7 242
+1 242
fi=(134)
122 242
fe=(133)
4257 242
fi=(134)
122 726
fe=(133)
4261 242
fi=(135)
877 484
fe=(133)
4265 242
fi=(135)
877 484
fe=(133)
4264 242
+1 242
+1 242
+1 242
fi=(135)
877 242
fe=(133)
4268 242
fi=(135)
877 1694
fe=(133)
4271 242
fi=(135)
877 1452
fe=(133)
4272 242
fi=(135)
877 484
fe=(133)
4278 242
fi=(135)
877 484
fe=(133)
4275 242
-2 242
+5 242
fi=(135)
877 242
fe=(133)
4275 242
-1 242
+2 242
+1 242
-1 242
fi=(135)
877 484
fe=(133)
1617 242
4281 242
fi=(135)
877 242
fe=(133)
4280 242
1615 242
-1 242
+1 242
+1 242
+1 242
+6 242
-3 242
+3 242
-3 242
+2 242
+2 242
-1 242
-3 242
+2 484
+1 242
-3 484
+4 242
-1 242
-1 484
-2 242
+2 484
+1 242
+1 242
-1 242
-1 242
4283 484
1622 242
4283 242
+2 726
+4 484
+5 484
+2 242
+8 242
+1 242
-1 121
cfn=(19350) ImGui::CalcTextSize(char const*, char const*, bool, float) [clone .constprop.162]
calls=121 2981 
* 28919
+1 121
-1 121
+1 242
+3 121
fi=(134)
108 121
fe=(133)
4310 121
fi=(134)
108 726
fe=(133)
4309 121
fi=(134)
108 121
fe=(133)
4308 121
+1 363
-1 121
+2 121
-1 121
fi=(134)
108 242
fe=(133)
4309 242
+1 242
+3 121
fi=(135)
92 121
fe=(133)
4313 121
fi=(135)
92 121
fe=(133)
4313 121
-1 242
+2 726
+1 242
+2 363
fi=(135)
92 242
fe=(133)
4317 847
cfn=(19360) ImGui::RenderTextClipped(ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, int, ImVec2 const*, ImVec2 const*)
calls=121 2872 
* 112772
* 363
+4 363
fi=(134)
664 242
fe=(133)
4321 363
fi=(134)
664 121
226 121
664 121
226 121
fe=(133)
4321 363
fi=(134)
226 121
fe=(133)
4321 363
fi=(134)
664 242
fe=(133)
4321 363
fi=(134)
664 121
226 121
664 121
226 121
fe=(133)
4321 363
fi=(134)
226 2299
fe=(133)
4139 242
+1 242
-1 242
+1 242
fi=(134)
109 242
-1 242
+1 726
+15 242
-16 484
+14 1452
+2 242
-2 968
-14 484
+18 726
fe=(133)
4007 484
+2 484
+2 484
+4 242
-4 242
fi=(134)
122 1694
fe=(133)
4015 242
+11 484
-57 363
+75 242
+5 484
-5 242
+5 242
+58 1210
+42 1694
-2 242
+2 847
fi=(134)
664 484
fe=(133)
4153 121
+1 484
fi=(134)
109 121
+97 121
-97 121
+97 121
-97 242
+97 242
fe=(133)
4154 121
cfn=(1172)
calls=121 1788 
* 14520
+2 726
cfn=(19318) ImGui::ButtonBehavior(ImRect const&, unsigned int, bool*, bool*, int)
calls=121 5477 
* 7986
+1 847
fi=(134)
666 242
fe=(133)
4178 121
fi=(134)
667 242
fe=(133)
4178 121
fi=(134)
666 121
-1 363
+1 363
+1 847
fe=(133)
3975 726
fi=(134)
665 363
+1 484
126 484
fe=(133)
3976 726
fi=(134)
109 968
-1 484
+14 1694
-1 242
+1 484
fe=(133)
4131 242
fi=(134)
122 242
-1 242
fe=(133)
4131 484
-53 726
-16 1452
-32 726
fi=(134)
664 121
fi=(135)
1210 121
fi=(134)
664 363
fi=(135)
1210 363
fi=(134)
108 726
fe=(133)
4228 242
fi=(135)
1210 121
cfn=(19348)
calls=121 890 
* 2662
fi=(134)
108 121
fi=(135)
1210 121
fe=(133)
4229 121
fi=(134)
108 484
fi=(135)
1210 121
fi=(134)
108 121
fi=(135)
1210 121
fe=(133)
4229 121
fi=(134)
108 242
fe=(133)
4229 121
fi=(135)
1210 121
cfn=(19348)
calls=121 890 
* 2662
fe=(133)
4230 1573
fi=(135)
92 121
fe=(133)
4230 121
fi=(135)
92 121
fe=(133)
4230 121
cfi=(136)
cfn=(19334)
calls=121 681 
* 18392
+1 121
fi=(135)
1212 242
fe=(133)
4231 121
fi=(135)
1212 605
cfi=(136)
cfn=(19340)
calls=121 598 
* 92202
877 968
fe=(133)
4306 363
fi=(134)
108 121
fe=(133)
4306 121
fi=(134)
108 363
fe=(133)
4306 1210
cfn=(19354) ImGui::RenderCollapseTriangle(ImVec2, bool, float, bool)
calls=121 2924 
* 77924
* 242
4030 726
+66 2178
fi=(134)
124 242
-2 242
+2 484
-2 242
-14 484
+14 484
+2 242
-2 1936
-14 242
+14 242
-14 242
+14 968
-13 242
+13 484
fe=(133)
4099 242
fi=(134)
109 242
+13 242
-13 484
fe=(133)
4099 242
fi=(134)
109 968
+12 726
fe=(133)
4100 242
fi=(134)
121 242
fe=(133)
4100 484
4360 363
3917 242
+4 242
4157 363
cfn=(19324)
calls=121 1215 
* 7865
+5 121
-5 363

fn=(19314)
3783 1210
+1 726
+1 1210
+17 484
fi=(134)
124 242
-2 968
+2 242
-2 1452
fe=(133)
3804 484
+1 968

fn=(19320) ImGui::IsHovered(ImRect const&, unsigned int, bool)
1923 121
+1 363
fi=(134)
683 121
fe=(133)
1927 242
+5 121
-5 605
+6 121

fn=(19360)
2872 242
2746 121
2872 605
2746 242
2872 242
2748 1210
+1 605
-1 4477
2876 242
+3 121
+4 121
+1 121
fi=(134)
684 121
fe=(133)
2883 121
fi=(134)
684 121
fe=(133)
2884 363
+3 1573
+1 1089
+3 242
+2 242
+3 363
+7 726
cfi=(136)
cfn=(19362)
calls=121 926 
* 88693
+2 121
-2 242
+2 121
+2 968
-15 242
+11 363
cfn=(19324)
calls=121 1215 
* 7865
* 847

fn=(19270)
2083 847
+1 242
+9 363
+11 121
4580 121
2104 121
4580 121
2104 121
4579 121
-1 121
+1 363
+1 121
+1 121
-1 121
2109 121
-3 242
+3 242
4581 242
2107 121
+1 121
-2 121
+3 121
cfi=(136)
cfn=(19272)
calls=121 121 
* 4477
+1 363
cfi=(136)
cfn=(19276)
calls=121 263 
* 7260
+1 242
cfi=(136)
cfn=(19280)
calls=121 250 
* 8349
+8 121
-5 121
+5 121
-4 121
+4 121
-3 363
+3 121
+2 605
fi=(134)
109 363
fe=(133)
2125 121
+6 726
-6 121
+6 363
+8 121
-11 1210
+22 1815
-24 1210
+27 484
+2 121
-2 32307
+2 309760
-1 123904
+4 242
+3 121
-1 121
+1 121
-3 242
+2 121
-2 363
+3 121
-2 121
+1 121
+6 121
-6 968
+7 121
-3 121
-4 121
+5 121
-1 121
+3 121
-6 242
+6 605
+7 121
-5 121
+1 121
+1 121
+3 484
+24 121
+1 121
+4 363
+12 121
3425 121
+1 363
2228 121
+9 363
+2 121
-2 121
+3 484
-3 242
+2 121
+1 242
-3 363
+2 363
+1 242
-3 363
+2 121
+1 242
-3 363
+2 121
+1 242
+5 484
+4 121
+1 363
+6 121
-6 121
+1 121
+1 242
+1 242
+3 121
+33 847
fi=(135)
877 847
fe=(133)
3394 121
fi=(135)
877 242
fe=(133)
3395 363
4985 121
+1 121
3818 121
4985 121
3818 242
4985 121
3818 242
fi=(135)
92 242
fe=(133)
3818 121
cfn=(19294)
calls=121 +4 
* 995951
2319 968
2129 605
-1 605
+1 1210
2244 242
+4 847
+1 121
-1 121
+1 605
2129 605
+1 605
+1 605
+1 1210
2293 726
+2 242
-2 121
+3 121
+2 121
-1 121
-1 121
-3 121
+2 242
-2 121
+3 121
+2 121
-1 121
-1 121
-3 121
+9 484
-42 363
4580 363
2248 726
3097 484
cfn=(19290) ImGui::IsKeyPressed(int, bool)
calls=121 +19 
* 484
2289 121
+1 121
-1 242
-78 847
cfn=(19286) FindHoveredWindow(ImVec2, bool)
calls=121 3040 
* 3630
+1 121
-1 121
+1 363
+3 726
cfn=(19286)
calls=121 3040 
* 3872
* 363

fn=(19324)
1215 484
+2 3388
+2 484
-2 484
+1 1452
+1 484
cfi=(134)
cfn=(19326)
calls=484 128 
* 23716
+1 968

fn=(1128)
2058 484
+1 242

fn=(19286)
3040 242
-1 242
+2 726
fi=(134)
218 2299
fe=(133)
3043 121
+1 242
-1 121
+1 242
+2 363
fi=(134)
218 242
fe=(133)
3041 484
+15 242
+1 242
fi=(134)
218 242
fe=(133)
3041 484
+2 242
+1 484
+2 242

fn=(19354)
2924 242
fi=(135)
91 121
fe=(133)
2924 121
+1 121
fi=(134)
108 121
fe=(133)
2929 121
fi=(134)
108 242
fe=(133)
2933 121
-5 121
fi=(134)
684 121
fe=(133)
2929 121
+1 121
fi=(134)
684 121
fe=(133)
2929 121
+1 242
fi=(134)
108 484
fe=(133)
2933 121
+2 121
fi=(134)
108 121
fe=(133)
2935 121
fi=(134)
106 726
fe=(133)
2935 121
fi=(134)
108 484
fe=(133)
2936 121
fi=(134)
108 121
fe=(133)
2937 363
-1 121
+2 242
+9 484
+2 242
cfn=(19324)
calls=121 1215 
* 7865
* 726
cfi=(136)
cfn=(19356)
calls=121 886 
* 62799
+1 363

fn=(19350)
2981 242
+5 121
-3 121
+3 121
2748 847
+1 605
-1 4235
2993 121
-2 121
+1 121
+1 121
+2 968
cfi=(136)
cfn=(19352)
calls=121 1891 
* 18392
* 242
+3 121
-3 121
+5 242
-2 242
+3 121
+1 121
+2 121
-2 121
+2 726
+1 605

fn=(19404) ImGui::IsMouseHoveringAnyWindow()
3086 363
+1 121

fn=(1166) ImGui::End()
4376 968
+1 242
+1 242
9356 242
fi=(134)
684 242
fe=(133)
9356 242
4556 484
9403 484
cfn=(1168)
calls=242 6137 
* 17908
+1 726
cfn=(1172)
calls=242 1788 
* 47916
fi=(134)
684 242
fe=(133)
9404 242
+8 242
fi=(134)
684 242
fi=(135)
891 242
fi=(134)
684 242
fe=(133)
9412 242
-4 242
+1 242
+1 242
+2 726
+2 242
-1 484
+1 847
+4 121
-1 121
-3 121
+3 121
-3 121
+4 121
-3 242
+1 242
+2 363
fi=(135)
877 242
fe=(133)
9418 121
fi=(135)
877 121
fe=(133)
9418 121
-1 121
-3 121
+3 121
-3 121
+4 121
-3 242
+1 242
+2 363
fi=(135)
877 242
fe=(133)
9418 121
fi=(135)
877 363
fe=(133)
4381 242
cfi=(134)
cfn=(1180)
calls=242 684 
* 20449
+3 484
fi=(135)
891 726
fe=(133)
4390 484
+3 242
3666 242
4393 363
fi=(135)
871 121
fe=(133)
4393 121
1818 121
-1 121
+1 121
fi=(134)
665 242
fe=(133)
1819 121
4394 605
1817 121
4394 605
-9 242
cfn=(1188)
calls=242 5776 
* 2420
* 242

fn=(19266)
920 363
-68 121
+1 242
-1 121
+1 242
+67 121
-1 242

fn=(19298)
984 726
+25 242
-13 242
+13 2420
+8 6050
-8 1210
+8 1210
-8 3146
+6 2420
+5 242
+1 242

fn=(1160)
2665 847
+1 121
+3 363
+1 121
cfn=(1162) ImGui::EndFrame()
calls=121 -76 
* 71027
* 121
+5 242
-4 121
+4 484
+3 484
fi=(135)
877 1815
fe=(133)
2679 726
+2 363
+10 121
-2 121
-8 1210
+2 484
+1 1210
+3 121
+1 242
+2 242
+8 121
+3 121
fi=(135)
877 121
fe=(133)
2701 242
fi=(135)
877 242
+3 121
-3 121
fe=(133)
2706 605
+7 242
+13 363
+5 121
-1 121
+1 242
+1 121
+1 121
-2 121
+2 121
+1 242
+6 968
-47 242
cfn=(1194)
calls=121 2564 
* 4356
* 242

fn=(1162)
2594 847
+1 121
+5 242
+8 363
fi=(134)
109 726
+22 363
fe=(133)
2608 242
+8 605
+2 121
cfn=(1166)
calls=121 4376 
* 55781
+3 726
fi=(135)
877 121
fe=(133)
2645 121
fi=(135)
877 242
fe=(133)
2646 121
fi=(135)
880 121
-3 121
+3 242
fe=(133)
2647 605
+2 121
+1 363
-1 121
+1 605
fi=(135)
890 968
fe=(133)
2521 242
fi=(135)
890 484
fe=(133)
2521 242
+2 121
+1 242
fi=(135)
873 484
fe=(133)
2658 121
+1 121
fi=(135)
873 242
fe=(133)
2659 121
fi=(135)
873 121
fe=(133)
2659 242
fi=(135)
873 121
fe=(133)
2659 242
+2 242
+1 1452
2521 121
2647 363
2526 968
2647 242
-30 242
+4 242

fn=(1174)
984 1089
+12 363
+4 363
-4 363
+4 363
+9 5808
+8 21780
-8 7260
+8 2178
-8 7986
+6 9075
+2 363
+3 363
+1 363

fn=(19290)
3116 484

fn=(19318)
5477 1331
+1 121
+3 121
fi=(134)
684 242
fe=(133)
5481 121
+73 1089
-64 605
+3 121
-3 121
+3 484
cfn=(19320)
calls=121 1923 
* 1694
+1 121
-1 121
+1 242
+37 242
+17 363
+2 363
+1 484

fn=(19378)
4697 726
-28 121
+29 121
-29 363
+8 242
fi=(135)
890 363
fe=(133)
4703 121
fi=(135)
890 1210
fe=(133)
4705 121
+1 847

fl=(161) /home/desktop/code/REGoth/src/engine/Platform.cpp
fn=(19210) Engine::Platform::mainLoop(std::promise<int>&&, int, char**)
63 363
cfi=(122)
cfn=(1028)
calls=121 319 
* 1772665218
cfi=(1)
cfn=(444)
calls=1 409 
* 3206105
* 242

fl=(126)
fn=(1112)
1767 726
878 363
+6 605
+20 242
+14 121
-7 121
+2 363
+5 121
-4 121
-1 121
+5 121
-3 121
+3 121
+1 242
-1 121
+4 121
fi=(111)
256 121
+1 121
-1 121
+1 121
+1 242
+26 847
157 242
fe=(126)
923 121
+1 121
-1 121
+1 242
+2 242
-2 121
+2 121
+1 121
-1 121
+1 363
1769 847
1597 121
906 363
+1 1089

fn=(1042)
1852 1089
731 121
1852 121
1304 121
1852 242
731 121
1852 121
732 121
-1 121
+1 605
1304 121
732 847
1304 121
739 121
+1 1089
+1 363
+4 242
1854 968
1595 121
1342 605
1595 121
809 121
1595 121
848 121
+1 121
-1 121
+1 121
-3 121
+4 121
+7 121
-8 121
+2 121
+3 121
+1 121
+29 121
1344 121
855 121
1344 121
849 121
+1 121
+1 121
+4 121
+29 242
+22 726
+1 605
+11 121
-5 121
-2 121
+2 121
+5 121
-5 121
+5 121
-4 121
+5 121
-4 121
-2 121
+5 121
-3 242
+4 121
+3 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 726
157 363
fe=(126)
923 121
+1 121
-1 121
+1 121
809 121
924 121
+2 242
-2 121
+2 121
+1 121
-1 121
1346 121
927 484
1346 363
809 121
1595 121
809 121
1595 121
848 121
+1 121
-1 121
+1 121
-3 121
+5 121
+6 121
-8 121
+35 121
-30 121
+1 121
-6 121
+1 121
+5 242
1348 121
850 121
1348 121
851 121
+33 121
+22 242
+1 242
-1 1089
+12 121
-5 121
-2 121
+2 242
+5 121
fi=(111)
256 121
fe=(126)
913 121
+5 121
-4 121
+5 121
-6 242
+2 121
+3 121
+1 121
+3 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 726
157 242
fe=(126)
923 121
+1 121
+3 121
-4 121
+1 242
+2 242
809 121
924 121
+2 121
+1 121
-1 121
1350 121
927 242
1350 121
927 121
1350 242
809 121
1595 121
809 121
1595 121
848 121
+1 121
-1 121
+1 121
-3 121
+4 121
+7 121
-8 121
+2 121
+3 121
+1 121
+29 121
-35 121
+6 121
-5 121
+1 121
+4 121
+29 242
+22 484
+1 726
1352 121
911 121
+7 121
-5 121
fi=(111)
256 121
fe=(126)
918 121
-5 121
+5 121
-5 121
+1 121
+1 121
+4 242
-1 121
+4 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 847
157 242
fe=(126)
923 121
+1 121
-1 121
+1 242
+2 242
-2 121
+2 121
+1 121
-1 121
+1 484

fn=(1116)
1603 363
1707 121
1605 121
1707 121
1605 242
cfi=(109)
cfn=(1054)
calls=121 2781 
* 10648
* 242
+27 121
+1 121
+1 121
-2 121
+1 121
+1 121
725 121
1709 363
1608 484
cfi=(109)
cfn=(1064)
calls=121 2802 
* 13794
+1 847
cob=(2)
cfi=(7)
cfn=(12)
calls=121 0 
* 2178
* 121
+3 363
cfi=(109)
cfn=(1070)
calls=121 2789 
* 7502
+1 605
cob=(2)
cfi=(7)
cfn=(12)
calls=121 0 
* 1452
* 121
+2 121
+2 242
cfi=(109)
cfn=(1074)
calls=121 3528 
* 10648
+1 242
cfi=(109)
cfn=(1082)
calls=121 3493 
* 7502
+4 121
-3 121
+6 121
-3 242
-3 121
+6 121
cfi=(109)
cfn=(1090)
calls=121 3414 
* 4598
+1 363
cfi=(109)
cfn=(1094)
calls=121 3458 
* 4356
+1 121
+1 363
-1 121
+1 121
cfi=(109)
cfn=(1098)
calls=121 3579 
* 46827
* 121

fn=(1046)
731 242
+1 121
-1 121
+1 1694

fn=(1106)
1782 968
1595 121
956 484
1595 363
854 121
-6 121
-2 121
+2 121
+1 121
+8 121
-8 121
+35 121
-30 121
-3 121
-1 121
+4 121
-5 121
957 121
854 121
+1 242
-1 121
+30 121
+22 242
+1 121
-1 1089
+12 121
-5 121
-2 121
+2 242
+5 121
-5 121
+5 121
+1 121
-6 121
+2 121
-1 121
+4 121
+1 121
+3 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 726
157 363
fe=(126)
923 121
+1 121
+3 121
+31 121
-35 121
+1 121
+34 242
-34 121
+2 242
-2 121
+2 121
+1 121
-1 121
-48 121
+49 363
-49 121
+40 121
-5 121
-2 121
+7 242
-5 121
+5 121
-3 121
-2 121
+5 121
-4 121
+5 121
fi=(111)
256 121
fe=(126)
919 121
-1 121
fi=(111)
256 121
+1 242
+1 242
+26 726
157 242
fe=(126)
923 121
+1 121
-1 121
+1 242
+2 242
-2 121
+2 121
+1 121
-1 121
+1 363
+21 242
+1 242
-71 121
+71 363
-71 121
+84 121
1595 121
962 121
-11 121
+11 121
1595 363
854 121
-6 121
-2 121
+2 121
+1 121
+8 121
-8 121
+35 121
-30 121
-3 121
-1 121
+4 121
-5 121
963 121
854 121
+1 242
-1 121
+30 121
+22 242
+1 121
-1 1089
+12 121
-5 121
-2 121
+2 242
+5 121
-5 121
+5 121
+1 121
-6 121
+2 121
-1 121
+4 121
+1 121
+3 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 726
157 363
fe=(126)
923 121
+1 121
+3 121
+37 121
-41 121
+1 121
+40 242
-40 121
+2 242
-2 121
+2 121
+1 121
-1 121
-48 121
+49 363
-49 121
+40 121
-5 121
-2 121
+7 242
-5 121
+5 121
-3 121
-2 121
+5 121
-4 121
+5 121
fi=(111)
256 121
fe=(126)
919 121
-1 121
fi=(111)
256 121
+1 242
+1 242
+26 726
157 242
fe=(126)
923 121
+1 121
-1 121
+1 242
+2 242
-2 121
+2 121
+1 121
-1 121
+1 363
+21 242
+1 242
-71 121
+71 363
-71 121
+90 121
1595 121
968 121
-17 121
+17 121
1595 363
854 121
-6 121
-2 121
+2 121
+1 121
+8 121
-8 121
+35 121
-30 121
-4 121
-1 121
+5 121
-3 121
+3 121
+1 242
-1 121
969 121
-85 121
+22 242
+1 121
-1 1089
+12 121
-5 121
-2 121
+2 242
+5 121
-5 121
+5 121
-3 121
+4 121
-6 121
+1 121
+4 121
+1 121
+3 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 726
157 242
fe=(126)
923 121
+1 121
+3 121
+44 121
-48 121
+1 121
+47 121
1595 121
924 121
+2 242
-2 121
+2 121
+1 121
-1 121
+45 121
-44 121
1595 121
927 242
1595 242
854 121
-6 121
-2 121
+2 121
+1 121
+8 121
-8 121
+35 121
-30 121
-4 121
-1 121
+5 121
-3 121
+3 121
+1 242
-1 121
972 121
-88 121
+22 242
+1 121
-1 1089
+12 121
-5 121
-2 121
+2 242
+5 121
-5 121
+5 121
-3 121
+4 121
-6 121
+1 121
+4 121
+1 121
+3 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 726
157 242
fe=(126)
923 121
+1 121
+3 121
+47 121
-51 121
+1 121
+50 121
1595 121
924 121
+2 242
-2 121
+2 121
+1 121
-1 121
+48 121
-47 121
1595 121
927 242
1595 242
854 121
-6 121
-2 121
+2 121
+1 121
+8 121
-8 121
+35 121
-30 121
-4 121
-1 121
+5 121
-3 121
+3 121
+1 242
-1 121
975 121
-91 121
+22 242
+1 121
-1 1089
+12 121
-5 121
-2 121
+2 242
+5 121
-5 121
+5 121
-3 121
+4 121
-6 121
+1 121
+4 121
+1 121
+3 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 726
157 242
fe=(126)
923 121
+1 121
+3 121
+50 121
-54 121
+1 121
+53 242
-53 121
+2 242
-2 121
+2 121
+1 121
-1 121
1595 121
927 363
1595 605
854 121
-5 121
-3 121
+3 121
+8 121
-8 121
+35 121
-30 121
-4 121
-1 121
+5 121
-3 121
+3 121
+1 242
-1 121
978 121
-94 121
+22 242
+1 968
+11 121
-7 121
+2 121
fi=(111)
256 242
fe=(126)
918 121
-5 121
+2 121
+3 121
+1 121
-6 121
+1 121
+5 121
-1 121
+4 121
fi=(111)
256 121
+1 121
-1 121
+2 121
-1 121
+1 121
+26 726
157 242
fe=(126)
923 121
+1 121
-1 121
+1 242
+2 242
-2 121
+2 121
+1 121
-1 121
+1 363
1784 968
884 484
+20 1331
+9 121
+5 121
-7 121
+2 363
+5 121
-5 121
+1 121
+4 121
-3 121
+3 121
+1 242
-1 121
+4 121
fi=(111)
256 121
+1 121
-1 121
+1 121
+1 242
+26 726
157 242
fe=(126)
923 121
+1 121
+35 121
-36 121
+1 121
+35 121
-35 121
+2 242
-2 121
+2 121
+1 121
-1 121
-48 121
+49 363
+32 121
-81 121
+40 121
-5 121
-2 121
+7 242
-5 121
+5 121
-3 121
-2 121
+5 121
-4 121
+5 121
fi=(111)
256 121
fe=(126)
919 121
-1 121
fi=(111)
256 121
+1 242
+1 242
+26 726
157 242
fe=(126)
923 121
+1 121
-1 121
+1 242
+2 242
-2 121
+2 121
+1 121
-1 121
+1 484
-43 484
+20 1331
+9 121
+5 121
-7 121
+2 363
+5 121
-5 121
+1 121
+4 121
-3 121
+3 121
+1 242
-1 121
+4 121
fi=(111)
256 121
+1 121
-1 121
+1 121
+1 242
+26 726
157 242
fe=(126)
923 121
+1 121
+41 121
-42 121
+1 121
+41 121
-41 121
+2 242
-2 121
+2 121
+1 121
-1 121
-48 121
+49 363
+38 121
-87 121
+40 121
-5 121
-2 121
+7 242
-5 121
+5 121
-3 121
-2 121
+5 121
-4 121
+5 121
fi=(111)
256 121
fe=(126)
919 121
-1 121
fi=(111)
256 121
+1 242
+1 242
+26 726
157 242
fe=(126)
923 121
+1 121
-1 121
+1 242
+2 242
-2 121
+2 121
+1 121
-1 121
+1 484
1628 121
884 242
+20 1694
-20 363
+20 1815
-20 363
+20 1815
-20 242
+20 1573

fn=(1114)
1717 242
738 121
+1 121
-1 121
+2 1089
+5 242
1719 363
741 363

fn=(1110)
1757 242
1595 484
854 121
-5 121
-3 121
+11 121
-8 242
+5 121
-4 121
+1 121
+3 242
+1 242
-1 121
1759 363

fn=(1040)
1747 1452
1603 1089
753 242
+7 363
cfi=(109)
cfn=(1102)
calls=121 3452 
* 5808
* 121
+1 2057
1749 484
1605 726
cfi=(109)
cfn=(1054)
calls=242 2781 
* 21296
* 484
+27 242
+1 242
+1 242
753 242
1631 242
+1 242
+1 242
+1 242
753 242
+2 242
1749 968
1608 968
cfi=(109)
cfn=(1064)
calls=242 2802 
* 27588
+1 1694
cob=(2)
cfi=(7)
cfn=(12)
calls=242 0 
* 14641
* 242
+3 726
cfi=(109)
cfn=(1070)
calls=242 2789 
* 15004
+1 1210
cob=(2)
cfi=(7)
cfn=(12)
calls=242 0 
* 3388
* 242
+2 242
+2 484
cfi=(109)
cfn=(1074)
calls=242 3528 
* 21296
+1 484
cfi=(109)
cfn=(1082)
calls=242 3493 
* 15004
+4 242
-3 242
+6 242
-3 484
-3 242
+6 242
cfi=(109)
cfn=(1090)
calls=242 3414 
* 9196
+1 726
cfi=(109)
cfn=(1094)
calls=242 3458 
* 8712
+1 242
+1 726
-1 242
+1 242
cfi=(109)
cfn=(1098)
calls=242 3579 
* 93654
* 242

fn=(19422)
709 363
-10 121
+1 121
+1 121
+1 121
+9 121
+1 121
-3 121
+4 121
+1 121
-9 121
+10 121
+1 242

fn=(1048)
809 968

fl=(123)
fn=(1030)
38 242
-1 605
fi=(11)
777 242
fe=(123)
42 968
+2 2178
cfi=(125)
cfn=(1038)
calls=121 -21 
* 363
cfi=(124)
cfn=(1032)
calls=121 -16 
* 18608
-2 605
+4 726

fn=(1031)
38 242
-1 605
fi=(11)
777 242
fe=(123)
42 242
+4 726

fl=(2)
fn=(19570)
206 2322
+5 774
fi=(3) /usr/include/c++/6.2.1/bits/stl_iterator_base_funcs.h
102 387
fe=(2)
217 387
fi=(3)
102 387
fe=(2)
215 387
+2 387
fi=(4)
+80 1161
fi=(5)
-9 774
fi=(4)
132 387
fi=(5)
243 387
fe=(2)
-10 1935
fi=(5)
+57 1161
cob=(2)
cfi=(7)
cfn=(12)
calls=387 0 
* 4332
* 387
* 1161
fe=(2)

fn=(130)
206 269724
+5 89908
fi=(3)
102 44954
fe=(2)
217 44954
fi=(3)
102 44954
fe=(2)
215 44954
+2 44954
fi=(4)
+80 132156
fi=(5)
-9 88104
fi=(4)
132 44954
fi=(5)
243 44954
fe=(2)
-10 224770
-14 3608
cob=(11)
cfi=(37)
cfn=(632)
calls=902 -82 
* 125246
* 902
* 902
fi=(4)
-91 902
+32 1804
fi=(5)
290 2706
cob=(2)
cfi=(7)
cfn=(12)
calls=902 0 
* 9980
* 902
* 113559
cob=(2)
cfi=(7)
cfn=(12)
calls=37853 0 
* 450868
* 37853
* 116265
fe=(2)

fn=(408) void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.237]
206 103980
+5 34660
fi=(3)
102 17330
fe=(2)
217 17330
fi=(3)
102 17330
fe=(2)
215 17330
+2 17330
fi=(4)
+80 51990
fi=(5)
-9 34660
fi=(4)
132 17330
fi=(5)
243 17330
fe=(2)
-10 86650
fi=(5)
+57 51990
cob=(2)
cfi=(7)
cfn=(12)
calls=17330 0 
* 174988
* 17330
* 51990
fe=(2)

fn=(2)
206 33034668
+5 11011556
fi=(3)
102 5505778
fe=(2)
217 5505778
fi=(3)
102 5505778
fe=(2)
215 5505778
+2 5505778
fi=(4)
+80 16517334
fi=(5)
-9 11011556
fi=(4)
132 5505778
fi=(5)
243 5505778
fe=(2)
-10 27528890
fi=(5)
+57 16517334
cob=(2)
cfi=(7)
cfn=(12)
calls=5505778 0 
* 62484100
* 5505778
* 16517334
fe=(2)

fl=(72)
fn=(332)
32 493968

fn=(352) btTriangleRaycastCallback::processTriangle(btVector3*, int, int)
40 625240
+8 1250480
fi=(56)
798 125048
-1 125048
+2 250096
-1 250096
+1 375144
-2 500192
+2 250096
412 125048
-2 250096
+2 250096
-1 375144
250 125048
410 250096
+2 250096
251 125048
411 125048
250 125048
410 125048
251 125048
412 250096
251 125048
fe=(72)
48 125048
fi=(56)
250 125048
fe=(72)
48 125048
fi=(56)
250 125048
fe=(72)
48 125048
fi=(56)
251 125048
-1 125048
+2 375144
-1 250096
-1 125048
+2 500192
fe=(72)
52 250096
fi=(56)
250 375144
+2 375144
fe=(72)
56 125048
-2 125048
+2 500192
+63 625240
-58 367200
+7 367200
+7 122400
-6 122400
+6 244800
fi=(56)
251 85505
-1 85505
509 85505
251 85505
-1 85505
511 85505
-1 85505
250 85505
+2 256515
508 171010
252 85505
fe=(72)
80 85505
fi=(56)
509 85505
+2 85505
-1 85505
-1 85505
+2 85505
798 85505
510 85505
fe=(72)
80 85505
fi=(56)
797 85505
+2 171010
-1 171010
-1 85505
410 85505
799 85505
-2 85505
410 85505
797 85505
410 342020
+1 171010
250 85505
411 85505
250 85505
411 256515
+1 85505
251 85505
412 85505
250 85505
412 256515
252 171010
fe=(72)
87 171010
fi=(56)
799 70762
410 70762
799 70762
fe=(72)
94 70762
fi=(56)
799 70762
-1 141524
-1 141524
410 212286
+1 70762
+1 70762
-2 70762
+1 70762
+1 70762
-1 70762
250 70762
412 70762
-1 70762
252 70762
-1 70762
-1 70762
+2 70762
fe=(72)
94 141524
fi=(56)
410 117316
+2 58658
-2 117316
+1 58658
+1 58658
-2 58658
+1 117316
+1 58658
250 58658
411 58658
252 58658
-1 58658
-1 58658
+2 58658
fe=(72)
99 117316
fi=(70)
447 334026
fi=(56)
229 37114
fe=(72)
106 37114
fi=(56)
229 37114
-23 37114
+1 37114
+1 37114
-2 37114
+1 37114
+1 37114
fe=(72)
106 148456
+6 11774
cfi=(55)
cfn=(358)
calls=1682 358 
* 188384
* 3364
fi=(56)
813 35432
fe=(72)
108 177160
fi=(56)
813 35432
fe=(72)
108 35432
fi=(56)
813 35432
fe=(72)
108 35432
fi=(56)
813 35432
fe=(72)
108 177160
cfi=(55)
cfn=(358)
calls=35432 358 
* 3964424
* 70864

fl=(62)
fn=(282)
21 218064
+2 109032
cfi=(63) /home/desktop/code/REGoth/lib/bullet3/src/BulletCollision/CollisionShapes/btCollisionShape.h
cfn=(284) btConvexShape::btConvexShape()
calls=109032 +15 
* 545160
fi=(56)
133 109032
fe=(62)
23 218064
fi=(56)
133 109032
fe=(62)
25 218064

fl=(168)
fn=(19436)
37 242

fl=(43) /home/desktop/code/REGoth/src/logic/NpcScriptState.cpp
fn=(602) Logic::NpcScriptState::startAIState(unsigned long, bool, bool)
40 72842
+1 26488
cfi=(89)
cfn=(460)
calls=6622 +61 
* 576114
+1 6622
+4 6622
fi=(42)
+48 6622
fi=(53)
204 6622
fi=(4)
-94 6622
fi=(5)
290 6622
fi=(4)
110 6622
fe=(43)
-64 6622
fi=(5)
290 6622
fi=(4)
132 6622
fi=(5)
243 6622
fe=(43)
46 6622
cfi=(18)
cfn=(604)
calls=6622 341 
* 2032954
* 13244
fi=(4)
180 19866
fi=(16)
-70 6622
fi=(5)
290 6622
fe=(43)
47 6622
fi=(5)
290 6622
fe=(43)
47 6622
fi=(4)
+63 6622
fi=(5)
290 6622
fi=(4)
132 6622
fi=(5)
243 6622
fe=(43)
47 6622
cfi=(18)
cfn=(604)
calls=6622 341 
* 2211748
* 13244
fi=(4)
180 19866
fi=(16)
-70 6622
fe=(43)
-62 13244
fi=(5)
290 6622
fi=(4)
132 6622
-22 6622
fi=(5)
243 6622
fe=(43)
48 6622
cfi=(18)
cfn=(608)
calls=6622 355 
* 1734964
* 13244
fi=(4)
180 19866
fe=(43)
50 19866
cfi=(13)
cfn=(86)
calls=6622 781 
* 33110
* 6622
fi=(4)
1181 13244
cob=(11)
cfi=(37)
cfn=(176)
calls=6622 254 
* 358010
* 6622
110 46354
fi=(2)
211 33110
fi=(4)
+86 13244
fi=(5)
-9 13244
fi=(4)
5086 13244
132 6622
fi=(5)
243 6622
fi=(4)
5086 6622
cob=(11)
cfi=(37)
cfn=(618)
calls=6622 1389 
* 470162
* 6622
* 6622
180 19866
fe=(43)
55 13244
+48 52968
-31 13244
fi=(4)
+38 13244
fe=(43)
-40 6622
fi=(4)
+40 6622
fe=(43)
-37 6622
fi=(2)
211 6622
fe=(43)
74 6622
fi=(2)
211 26488
+6 6622
-2 6622
+2 6622
fi=(4)
+80 844
fi=(5)
-9 1266
fi=(4)
132 6622
271 6622
fi=(5)
-28 6622
fi=(4)
+28 19866
1115 26488
cob=(11)
cfi=(37)
cfn=(640)
calls=6622 359 
* 2430760
* 6622
fe=(43)
76 19866
cfi=(19)
cfn=(658)
calls=6622 287 
* 5130524
* 13244
fi=(4)
180 19866
fi=(16)
-70 6622
cob=(11)
cfi=(41)
cfn=(200)
calls=6622 -61 
* 615846
* 6622
fe=(43)
-34 13666
fi=(4)
+34 1266
fi=(2)
211 2110
+6 422
-2 422
+2 422
fi=(4)
+80 844
fi=(5)
-9 1266
fi=(4)
132 422
fi=(5)
243 422
fi=(4)
+28 1688
1115 1688
cob=(11)
cfi=(37)
cfn=(640)
calls=422 359 
* 113518
* 422
fe=(43)
77 1266
cfi=(19)
cfn=(790)
calls=422 296 
* 311436
* 844
fi=(4)
180 1266
fi=(16)
-70 422
cob=(11)
cfi=(41)
cfn=(200)
calls=422 -61 
* 39246
* 422
* 26488
fi=(2)
211 33110
+6 6622
-2 6622
+2 6622
fi=(4)
+80 844
fi=(5)
-9 1266
fi=(4)
132 6622
271 6622
fi=(5)
-28 6622
fi=(4)
+28 19866
1115 26488
cob=(11)
cfi=(37)
cfn=(640)
calls=6622 359 
* 2357918
* 6622
fe=(43)
79 19866
cfi=(19)
cfn=(658)
calls=6622 287 
* 5370344
* 13244
fi=(4)
180 19866
fi=(16)
-70 6622
cob=(11)
cfi=(41)
cfn=(200)
calls=6622 -61 
* 615846
* 6622
fe=(43)
-31 13244
+6 6200
-2 6200
+2 6200
+2 6622
+15 19866
cfn=(222) Logic::NpcScriptState::doAIState(float)
calls=422 +34 
* 4887467
cfn=(223) Logic::NpcScriptState::doAIState(float)'2
calls=6200 +34 
* 125594690
* 6621
fi=(5)
290 160194
cob=(2)
cfi=(7)
cfn=(12)
calls=422 0 
* 4220
* 422
* 1266
fi=(2)
-71 24800
cob=(11)
cfi=(37)
cfn=(632)
calls=6200 -82 
* 892800
* 6200
* 6200
fi=(4)
-91 6200
+32 12400
fi=(5)
290 18600
cob=(2)
cfi=(7)
cfn=(12)
calls=6200 0 
* 62000
* 6200
* 1266
cob=(2)
cfi=(7)
cfn=(12)
calls=422 0 
* 4220
* 422
* 19866
fi=(2)
-71 24800
cob=(11)
cfi=(37)
cfn=(632)
calls=6200 -82 
* 824600
* 6200
* 6200
fi=(4)
-91 6200
+32 12400
fi=(5)
290 18600
cob=(2)
cfi=(7)
cfn=(12)
calls=6200 0 
* 62000
* 6200
* 1266
cob=(2)
cfi=(7)
cfn=(12)
calls=422 0 
* 4220
* 422
* 20288
fi=(4)
110 1266
fi=(2)
211 2110
+6 422
-2 422
+2 422
fi=(4)
+80 844
fi=(5)
-9 1266
fi=(4)
132 422
fi=(5)
243 422
fi=(4)
+28 1688
1115 1688
cob=(11)
cfi=(37)
cfn=(640)
calls=422 359 
* 113518
* 422
fe=(43)
80 1266
cfi=(19)
cfn=(790)
calls=422 296 
* 320298
* 844
fi=(4)
180 1266
fi=(16)
-70 422
cob=(11)
cfi=(41)
cfn=(200)
calls=422 -61 
* 39246
* 422
fe=(43)
-25 422
-2 422
+2 422
fi=(5)
290 1266
cob=(2)
cfi=(7)
cfn=(12)
calls=422 0 
* 4220
* 422
* 1266
-2 1688
fe=(43)

fn=(222)
136 121723
+1 52167
-1 17389
+1 17389
cfi=(89)
cfn=(460)
calls=17389 -35 
* 1512843
+5 17389
-4 17389
+4 49327
+1 12105
+4 21292
fi=(82)
-75 34778
fe=(43)
+99 17389
cfi=(11)
cfn=(476) Logic::EventManager::isEmpty()
calls=17389 777 
* 126810
* 52167
+6 34164
-2 2532
296 2
177 2
cfi=(44)
cfn=(480) Logic::PlayerController::isPlayerControlled()
calls=1 1405 
* 10
* 2
277 4
cfi=(89)
cfn=(460)
calls=1 102 
* 87
+3 2
cfi=(44)
cfn=(480)
calls=1 1405 
* 10
* 2
+4 1
+3 3
cfn=(598) Logic::NpcScriptState::activateRoutineState(bool)
calls=1 +13 
* 152
+1 3
180 34164
+3 13486
+94 25284
cfi=(89)
cfn=(460)
calls=6321 102 
* 549927
+3 12642
cfi=(44)
cfn=(480)
calls=6321 1405 
* 63452
* 12642
+4 6200
+3 18600
cfn=(598)
calls=6200 +13 
* 153135076
+1 18597
-87 12398
cfi=(44)
cfn=(480)
calls=6199 1405 
* 61990
* 20920
cfi=(44)
cfn=(480)
calls=10460 1405 
* 104842
* 33318
-86 363
+92 16960
fi=(53)
-3 16960
fe=(43)
+3 16960
cfi=(89)
cfn=(482) VobTypes::getScriptObject(VobTypes::NpcVobInformation&)
calls=16960 +71 
* 322240
+1 33920
cfi=(89)
cfn=(482)
calls=16960 +70 
* 322240
* 33920
fi=(4)
-98 16960
fe=(43)
+98 16960
fi=(5)
+82 16960
fi=(4)
132 16960
-22 16960
fi=(5)
243 16960
fe=(43)
-35 16960
cfi=(18)
cfn=(486)
calls=16960 -70 
* 4952320
* 16960
fi=(4)
-28 50880
fi=(16)
-70 16960
fe=(43)
211 33920
fi=(5)
+79 16960
fe=(43)
-79 16960
fi=(4)
110 16960
fi=(5)
290 16960
fi=(4)
132 16960
fi=(5)
243 16960
fe=(43)
-32 16960
cfi=(94)
cfn=(494)
calls=16960 41 
* 5512000
* 16960
fi=(4)
-31 50880
fi=(16)
-70 16960
fi=(5)
290 33920
fe=(43)
-78 33920
fi=(4)
110 16960
fi=(5)
290 16960
fe=(43)
-78 16960
fi=(4)
-80 16960
fi=(5)
243 16960
fe=(43)
-31 16960
cfi=(94)
cfn=(494)
calls=16960 41 
* 5969920
* 16960
fi=(4)
-32 50880
fe=(43)
+33 16960
fi=(4)
110 16960
fe=(43)
213 33920
fi=(5)
+77 16960
fi=(4)
132 16960
-22 16960
fi=(5)
243 16960
fe=(43)
-30 16960
cfi=(94)
cfn=(498)
calls=16960 41 
* 4884480
* 16960
fi=(4)
-33 50880
fe=(43)
+35 50880
+15 33076
+7 19854
+15 6199
+20 12398
-68 33920
+68 4036
+1 139112
147 13486
+3 6988
fi=(53)
+82 3494
fe=(43)
-82 3494
cfi=(91)
cfn=(464) Content::Sky::getTimeOfDay(int&, int&)
calls=3494 349 
* 202652
+2 13976
fi=(13)
781 10482
fi=(93) /home/desktop/code/REGoth/src/logic/NpcScriptState.h
211 6988
+2 6988
-13 3494
+14 3494
-14 4574
+4 7714
fi=(11)
777 363
fe=(43)
156 726
fi=(93)
+48 1815
-4 2911
+14 740
-14 383
+4 728
fe=(43)
-46 2185
+7 731
-9 1462
fi=(93)
+55 1464
+2 1464
-13 362
+17 362
-17 1444
+4 720
-4 360
+18 360
-18 360
+4 1080
fe=(43)
+91 6988
186 422
fi=(93)
25 1266
fe=(43)
186 422
fi=(93)
25 3376
fi=(4)
1181 422
cob=(11)
cfi=(37)
cfn=(176)
calls=422 254 
* 23210
* 422
fi=(93)
25 422
fe=(43)
201 422
-11 422
+2 422
fi=(93)
25 1266
fe=(43)
201 422
cfi=(44)
cfn=(480)
calls=422 1405 
* 4220
* 1266
+94 2
160 1
+1 1
+1 1
+92 13222
+5 13222
+7 6611
+1 6611
+5 13222
-33 7456
cfi=(18)
cfn=(502)
calls=3728 51 
* 29851898
+1 11184
cfi=(18)
cfn=(564)
calls=3728 92 
* 628426100
cfi=(18)
cfn=(58)
calls=1 89 
* 24374
+11 7458
-30 844
+3 844
cfi=(18)
cfn=(502)
calls=422 51 
* 3435133
+1 1266
cfi=(18)
cfn=(564)
calls=422 92 
* 5072633
+4 422
+43 844
-11 844
cfi=(18)
cfn=(502)
calls=422 51 
* 3450739
+1 1266
cfi=(18)
cfn=(564)
calls=422 92 
* 783466
* 422

fn=(223)
136 43400
+1 18600
-1 6200
+1 6200
cfi=(89)
cfn=(460)
calls=6200 -35 
* 539400
+5 6200
-4 6200
+4 6200
fi=(82)
-70 12400
fe=(43)
+99 6200
cfi=(11)
cfn=(476)
calls=6200 777 
* 37200
* 18600
+6 12400
+3 12400
+3 12400
+24 6200
fi=(53)
-3 6200
fe=(43)
+3 6200
cfi=(89)
cfn=(482)
calls=6200 +71 
* 117800
+1 12400
cfi=(89)
cfn=(482)
calls=6200 +70 
* 117800
* 12400
fi=(4)
-98 6200
fe=(43)
+98 6200
fi=(5)
+82 6200
fi=(4)
132 6200
-22 6200
fi=(5)
243 6200
fe=(43)
-35 6200
cfi=(18)
cfn=(486)
calls=6200 -70 
* 1810400
* 6200
fi=(4)
-28 18600
fi=(16)
-70 6200
fe=(43)
211 12400
fi=(5)
+79 6200
fe=(43)
-79 6200
fi=(4)
110 6200
fi=(5)
290 6200
fi=(4)
132 6200
fi=(5)
243 6200
fe=(43)
-32 6200
cfi=(94)
cfn=(494)
calls=6200 41 
* 2015000
* 6200
fi=(4)
-31 18600
fi=(16)
-70 6200
fi=(5)
290 12400
fe=(43)
-78 12400
fi=(4)
110 6200
fi=(5)
290 6200
fe=(43)
-78 6200
fi=(4)
-80 6200
fi=(5)
243 6200
fe=(43)
-31 6200
cfi=(94)
cfn=(494)
calls=6200 41 
* 2182400
* 6200
fi=(4)
-32 18600
fe=(43)
+33 6200
fi=(4)
110 6200
fe=(43)
213 12400
fi=(5)
+77 6200
fi=(4)
132 6200
-22 6200
fi=(5)
243 6200
fe=(43)
-30 6200
cfi=(94)
cfn=(498)
calls=6200 41 
* 1785600
* 6200
fi=(4)
-33 18600
fe=(43)
+35 18600
-11 12400
+69 49592
147 12400
+39 6200
fi=(93)
25 18600
fe=(43)
186 6200
fi=(93)
25 49600
fi=(4)
1181 6200
cob=(11)
cfi=(37)
cfn=(176)
calls=6200 254 
* 334800
* 6200
fi=(93)
25 6200
fe=(43)
201 6200
-11 6200
+2 6200
fi=(93)
25 18600
fe=(43)
201 6200
cfi=(44)
cfn=(480)
calls=6200 1405 
* 62000
* 18600
+20 12400
+3 12400
cfi=(18)
cfn=(502)
calls=6200 51 
* 50205616
+1 18600
cfi=(18)
cfn=(564)
calls=6200 92 
* 65531085
+4 6199
+43 12398

fn=(598)
300 31005
+1 24804
cfi=(89)
cfn=(460)
calls=6201 102 
* 539487
+3 12402
cfi=(44)
cfn=(480)
calls=6201 1405 
* 62010
* 12402
+48 24800
-44 12402
cfi=(44)
cfn=(600) Logic::PlayerController::isNpcReady()
calls=6201 1538 
* 12402
* 12402
+3 12403
+3 2
+3 2
fi=(82)
72 2
fe=(43)
319 1
cfi=(11)
cfn=(476)
calls=1 777 
* 6
* 2
+75 3
+2 3
+3 1
fi=(13)
781 3
fe=(43)
323 2
+64 24800
cfi=(89)
cfn=(460)
calls=6200 102 
* 539400
+2 12400
cfi=(89)
cfn=(482)
calls=6200 278 
* 117800
-55 18600
+3 12400
+11 12400
cfi=(89)
cfn=(482)
calls=6200 -70 
* 117800
* 31000
cfn=(602)
calls=6200 40 
* 151454881
* 6199
-3 31000
-21 2

fl=(63)
fn=(284)
38 327096
fi=(80)
+3 218064
fe=(63)

fl=(130) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/examples/common/nanovg/nanovg_bgfx.cpp
fn=(19386) nvgViewId(NVGcontext*, unsigned char)
1121 242
+1 121
cfi=(129) /home/desktop/code/REGoth/lib/bgfx-cmake/bgfx/examples/common/nanovg/nanovg.cpp
cfn=(19388) nvgInternalParams
calls=121 376 
* 242
+2 242
+1 242

fn=(19384) (anonymous namespace)::nvgRenderViewport(void*, int, int, float)
547 121
+1 121
-1 121
+2 121
-1 121
+1 121
-2 121
+2 121
-1 121
+1 847
cfi=(109)
cfn=(896)
calls=121 3335 
* 4598

fn=(1122) (anonymous namespace)::nvgRenderFlush(void*, NVGcompositeOperationState)
735 968
+3 363
+46 121
+1 121
+1 121
+1 121
+1 968

fl=(69)
fn=(306) btAlignedAllocDefault(unsigned long, int)
67 135736
+3 271472
cfn=(308) btAllocDefault(unsigned long)
calls=67868 -46 
* 25711206
+1 135736
fi=(70)
777 67868
-2 67868
+3 67868
fe=(69)
73 135736
+5 135736

fn=(308)
24 67868
cob=(2)
cfi=(7)
cfn=(312)
calls=67868 -24 
* 25575470
* 67868

fn=(376)
258 135978
+5 67868
+2 67868
cfn=(378) btAlignedFreeDefault(void*)
calls=67868 84 
* 8989744
* 121

fn=(378)
84 135736
+2 135736
cfn=(380) btFreeDefault(void*)
calls=67868 -57 
* 8718272

fn=(380)
29 67868
cob=(2)
cfi=(7)
cfn=(204)
calls=67868 -29 
* 8582536
* 67868

fn=(304)
249 67868
+2 67868
cfn=(306)
calls=67868 67 
* 26729226

fl=(166)
fn=(19410)
229 363
fi=(4)
-87 121
fe=(166)
+87 726
fi=(4)
110 363
fi=(2)
211 605
+6 121
-2 121
+2 121
fi=(4)
-85 121
fi=(5)
243 121
fi=(4)
142 242
-32 242
+32 121
fi=(2)
+69 605
+6 121
-2 121
+2 121
fi=(4)
+80 242
fi=(5)
-9 121
fi=(4)
142 121
fi=(5)
288 121
fi=(4)
142 121
-10 121
fi=(5)
243 242
fi=(4)
110 242
fi=(2)
211 605
+6 121
-2 121
+2 121
fi=(4)
+80 242
fi=(5)
-9 121
fi=(4)
142 121
fi=(5)
288 121
fi=(4)
142 121
-10 121
fi=(5)
243 242
fi=(4)
110 242
fi=(2)
211 605
+6 121
-2 121
+2 121
fi=(4)
+80 242
fi=(5)
-9 121
fi=(4)
142 121
fi=(5)
288 121
fi=(4)
132 121
fi=(5)
243 121
fi=(189)
16 484
fe=(166)
231 1089
fi=(2)
-12 484
cob=(11)
cfi=(37)
cfn=(632)
calls=121 -82 
* 17424
* 121
* 121
fi=(4)
-91 121
+32 242
fi=(5)
290 363
cob=(2)
cfi=(7)
cfn=(12)
calls=121 0 
* 2178
* 121
* 726
cob=(2)
cfi=(7)
cfn=(12)
calls=121 0 
* 1210
* 121
* 363
fi=(4)
142 242
fe=(166)

fn=(19424)
153 484
cfi=(106)
cfn=(858) Engine::GameEngine::onFrameUpdate(double, unsigned short, unsigned short)
calls=121 -91 
* 1767053817

fl=(91)
fn=(966) Content::Sky::getFogValues(Math::t_vector<Math::t_float3, float, float, float> const&, float&, float&, Math::t_vector<Math::t_float3, float, float, float>&)
317 121
+1 121
+4 121
-9 121
+4 121
-3 121
+3 242
-4 242
+5 121
+1 121
-5 121
+4 121
+1 121
-1 121
+4 484
fi=(30)
200 242
fe=(91)
324 121
+2 121
fi=(52)
674 121
fe=(91)
326 121
+16 121
-16 121
+19 121
-19 121
fi=(30)
201 121
fe=(91)
345 121
-19 121
+5 242
fi=(52)
674 121
fe=(91)
337 121
fi=(52)
674 242
-18 121
fi=(86)
59 121
fi=(52)
674 242
fi=(86)
59 121
fi=(30)
201 605
fi=(52)
656 605
-72 363
fi=(51)
239 363
fe=(91)
346 121

fn=(19546)
82 121
-1 242
+1 121
+2 363
fi=(83) /usr/include/c++/6.2.1/cmath
303 121
fe=(91)
89 242
+1 242
fi=(83)
303 121
cob=(14)
cfi=(92)
cfn=(19550) fmodf
calls=121 0 
* 3388
* 121
fe=(91)
98 242
-8 121
+8 484
+12 1089
+3 121
+3 242
-3 121
fi=(52)
628 121
-1 121
fe=(91)
117 121
-4 121
fi=(52)
629 121
fe=(91)
113 121
fi=(52)
629 242
+27 121
-72 121
+45 242
+27 121
-72 121
+45 242
fi=(51)
239 121
fe=(91)
117 121
fi=(51)
239 121
fi=(52)
656 121
-72 121
fi=(51)
239 121
fi=(52)
629 363
-1 121
-1 121
+29 121
-72 121
+45 242
+27 121
-72 121
+45 242
fe=(91)
118 121
fi=(51)
239 121
fe=(91)
118 121
fi=(51)
239 121
fi=(52)
656 121
-72 121
fi=(51)
239 121
fe=(91)
118 363
+1 242
-1 121
+1 121
-1 605
fi=(52)
629 363
-1 121
-1 121
+29 121
-72 121
+45 242
+27 121
-72 121
+45 242
fi=(51)
239 121
fe=(91)
55 242
+1 121
fi=(51)
239 121
fi=(52)
656 121
fe=(91)
57 121
fi=(52)
584 121
fi=(51)
239 121
fi=(197) /home/desktop/code/REGoth/src/utils/Utils.h
33 1452
fe=(91)
+40 242
+3 121
-3 484
+1 363
-1 242
+1 242
+1 363
-1 242
+1 484
-16 242
+14 61710
+3 30855
-3 123420
+1 92565
-1 61710
+1 61710
+1 92565
-1 61710
+1 123420
-16 61710
+70 242
-29 242
+1 1694
+1 121
-7 242

fn=(464)
349 18075
+1 7230
fi=(83)
-34 3615
fe=(91)
+34 3615
fi=(83)
-34 7230
cob=(14)
cfi=(92)
cfn=(468) fmod
calls=3615 0 
* 119295
* 3615
fe=(91)
+34 3615
+1 3615
+1 7230
-1 3615
+1 14460
+1 14460

fl=(89)
fn=(460)
102 305145
+4 122058
cfi=(45)
cfn=(226)
calls=61029 -62 
* 3173508
* 244116
+3 61029
-3 488232
+3 244116
cfi=(90) /home/desktop/code/REGoth/src/logic/PlayerController.h
cfn=(462) Logic::PlayerController::getControllerType()
calls=61029 -65 
* 122058
* 122058
+8 61029
+3 366174

fn=(482)
278 117440
fi=(53)
-74 176160
fe=(89)
+75 58720
cfi=(42)
cfn=(484)
calls=58720 99 
* 176160
* 58720
fi=(94)
146 176160
fe=(89)
280 58720
fi=(94)
146 234880
fe=(89)
280 58720

fl=(107)
fn=(19226) std::_Function_handler<void (bool, float), Logic::CameraController::CameraController(World::WorldInstance&, Memory::GenericHandle<24, 8, 5>)::{lambda(bool, float)#19}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
213 363

fn=(862)
262 242
-1 484
+4 726
fi=(49)
60 121
fe=(107)
367 242
fi=(51)
-33 121
fe=(107)
+33 121
cfi=(81)
cfn=(388)
calls=121 18 
* 10164
+4 484
270 605
cfi=(89)
cfn=(460)
calls=121 102 
* 10527
fi=(12)
41 242
fe=(107)
272 242
+2 242
cfi=(45)
cfn=(866)
calls=121 170 
* 242
* 847
+5 242
fi=(12)
41 121
fe=(107)
279 242
+19 1210
cfi=(12)
cfn=(246) Logic::Controller::getEntityTransform()
calls=121 138 
* 1573
fi=(52)
638 363
-9 242
+9 363
-9 121
-45 121
+54 121
-9 121
fe=(107)
300 242
fi=(52)
584 121
+45 242
fe=(107)
300 121
fi=(52)
629 242
fi=(51)
278 121
fi=(52)
629 121
-45 121
fi=(51)
278 121
fi=(52)
656 242
-72 121
fi=(51)
278 121
fi=(52)
656 121
-72 363
+72 242
-72 121
+72 484
-72 121
+72 363
-72 121
+72 363
-72 121
+72 363
-72 121
fi=(51)
239 121
fi=(52)
629 121
-45 242
fi=(51)
239 121
fi=(52)
629 121
fi=(51)
239 121
fi=(52)
629 121
+45 484
fi=(86)
59 121
fi=(52)
674 242
fi=(86)
59 242
fi=(83)
487 363
fi=(84) /home/desktop/code/REGoth/lib/glm/glm/detail/../detail/func_exponential.inl
132 242
fi=(52)
638 363
fi=(86)
82 121
+1 121
-1 242
+1 121
-1 121
+1 605
fi=(52)
674 484
fi=(86)
59 121
fi=(52)
674 242
fi=(86)
59 242
fi=(83)
487 363
fi=(84)
132 121
fi=(52)
638 121
fi=(84)
132 121
fi=(108)
-83 363
fi=(84)
+83 121
fi=(108)
-83 1089
fi=(51)
334 1210
fi=(52)
638 363
fi=(86)
83 121
fi=(51)
334 121
fi=(86)
83 121
fi=(51)
334 121
fi=(86)
83 121
-1 121
+1 121
-2 121
+1 121
fi=(51)
334 121
fi=(86)
81 121
fi=(52)
674 121
fi=(86)
83 121
-1 121
fi=(52)
674 121
fi=(86)
82 121
fi=(52)
674 121
fi=(51)
334 121
fi=(52)
674 121
fi=(51)
334 121
fi=(86)
59 121
fi=(127)
570 121
fi=(86)
83 121
-2 121
fi=(52)
674 121
fi=(51)
334 121
fi=(86)
81 121
fi=(52)
674 121
fi=(51)
334 121
fi=(52)
674 121
fi=(51)
334 121
fi=(86)
83 121
-24 121
fi=(51)
334 242
fi=(52)
674 121
fi=(51)
334 121
fi=(127)
570 121
fi=(51)
334 121
fi=(86)
59 121
fi=(51)
334 121
fi=(86)
59 121
fi=(127)
571 121
fi=(51)
334 121
fi=(52)
674 121
fi=(51)
334 121
fi=(52)
674 121
fi=(51)
334 121
fi=(86)
59 242
fi=(127)
572 121
fi=(51)
334 363
+34 242
fi=(85) /home/desktop/code/REGoth/lib/glm/glm/detail/func_matrix.inl
-67 242
fi=(51)
+67 121
fi=(85)
-67 121
fi=(51)
+67 121
fi=(85)
-67 121
fi=(51)
+67 121
fi=(85)
-67 121
fi=(51)
+67 121
fi=(85)
-67 363
+1 242
fi=(51)
+66 121
fi=(85)
-66 242
+3 121
fi=(51)
+63 121
fi=(85)
-67 121
+1 121
+3 121
-3 121
+4 121
+5 121
-5 121
+5 121
-9 121
+1 242
-1 121
+1 847
+2 242
+6 121
-6 484
+1 121
-1 121
+1 242
+5 121
-5 121
+1 121
+4 121
+2 121
-6 121
-1 121
+1 121
+4 121
-4 121
+6 121
-6 121
+2 242
-2 121
+2 484
+1 242
-1 121
+1 605
+3 242
-3 121
+4 242
-4 121
+3 121
+2 121
-2 242
+1 363
+3 121
+1 121
-1 121
-3 121
+1 363
fi=(49)
60 242
fi=(85)
315 121
+2 121
+2 121
-2 242
+1 363
fi=(49)
60 121
fi=(85)
318 121
+1 363
+2 121
+1 121
-1 121
+2 121
-4 121
+2 121
+2 121
-2 121
+1 121
+1 121
-2 121
+1 242
fi=(49)
60 242
fi=(85)
332 121
+1 121
fi=(49)
60 121
fi=(85)
335 121
-12 121
+11 121
fi=(49)
51 121
+9 242
-18 121
+18 605
-9 121
+9 363
-18 121
+18 363
-9 121
+9 363
-9 121
+9 121
-18 121
+18 242
-18 121
+18 605
fi=(85)
349 121
fi=(49)
60 242
fi=(85)
349 242
+2 242
fi=(49)
60 847
fi=(51)
334 121
fi=(49)
60 242
fi=(51)
334 121
fi=(49)
60 242
fi=(51)
334 121
fi=(49)
60 242
-9 121
+9 242
-9 121
+9 363
-18 121
+18 242
-18 121
+18 363
fi=(51)
334 121
fi=(49)
60 242
fi=(51)
334 121
fi=(49)
51 121
+9 242
-18 121
+18 363
fi=(51)
334 121
fi=(49)
60 242
-9 121
+9 242
-18 121
+18 605
fi=(51)
334 121
fi=(49)
60 484
-9 121
+9 363
-18 121
+18 242
fi=(51)
334 121
fi=(49)
60 363
-9 121
+9 242
-18 121
+18 121
fi=(51)
334 121
fi=(49)
60 242
-9 121
+9 363
-18 121
+18 242
fi=(51)
334 121
fi=(49)
60 847
fi=(51)
334 121
fi=(49)
60 484
-9 121
+9 242
-18 121
+18 121
fi=(51)
334 121
fi=(49)
60 121
-9 121
+9 363
-18 121
+18 484
fi=(51)
334 121
fi=(49)
60 363
-9 121
-9 121
+18 121
fi=(51)
334 121
fi=(49)
60 363
-9 242
-9 242
+18 242
fi=(51)
334 242
fe=(107)
-50 363
fi=(51)
-6 242
fi=(52)
656 121
fi=(51)
278 121
fi=(52)
656 484
-72 121
+72 363
fi=(51)
239 121
fi=(52)
584 242
fi=(51)
239 363
fe=(107)

fn=(19228) std::_Function_handler<void (bool, float), Logic::CameraController::CameraController(World::WorldInstance&, Memory::GenericHandle<24, 8, 5>)::{lambda(bool, float)#20}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
229 242
+4 121

fn=(19224) std::_Function_handler<void (bool, float), Logic::CameraController::CameraController(World::WorldInstance&, Memory::GenericHandle<24, 8, 5>)::{lambda(bool, float)#18}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
199 363

fn=(19222) std::_Function_handler<void (bool, float), Logic::CameraController::CameraController(World::WorldInstance&, Memory::GenericHandle<24, 8, 5>)::{lambda(bool, float)#17}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
186 363

fl=(15)
fn=(70) Daedalus::DaedalusVM::pushVar(unsigned long, unsigned int)
337 306978
fi=(31)
219 153489
fe=(15)
337 613956
fi=(22)
1520 153489
fe=(15)
337 153489
fi=(22)
1519 153489
fe=(15)
337 153489
fi=(22)
1520 153489
-1 306978
fi=(16)
120 460467
fi=(22)
1524 306978
fi=(29)
152 306978
fi=(16)
-32 460467
fi=(29)
+38 306978
-6 306978
fi=(16)
-32 460467
fi=(29)
+38 306978
fe=(15)
341 920934

fn=(488)
439 469530
+1 93906
cfi=(19)
cfn=(138)
calls=93906 279 
* 26140000
fi=(26) /home/desktop/code/REGoth/lib/ZenLib/./utils/staticReferencedAllocator.h
56 93906
-21 93906
fe=(15)
441 93906
fi=(26)
56 93906
-21 93906
fe=(15)
442 93906
fi=(26)
35 93906
fe=(15)
441 93906
+2 375624

fn=(566)
279 64632
fi=(22)
1520 10772
-1 10772
+1 10772
-1 21544
fi=(16)
120 43088
fi=(22)
1524 21544
fi=(28)
94 21544
fe=(15)
281 21544
+1 10772
fi=(28)
94 10772
fi=(16)
+26 32316
fi=(28)
-22 21544
fe=(15)
283 53860

fn=(574)
381 101104
+2 12638
-2 25276
+2 25276
cfn=(80)
calls=12638 -39 
* 417054
497 37914
383 12638
497 12638
cfi=(25) /home/desktop/code/REGoth/lib/ZenLib/daedalus/DaedalusGameState.cpp
cfn=(88) Daedalus::GameState::DaedalusGameState::getByClass(ZMemory::GenericHandle<32, 32>, Daedalus::EInstanceClass)
calls=12638 154 
* 121622
385 12638
497 12638
385 37914
cfi=(13)
cfn=(86)
calls=12638 781 
* 63190
fi=(27)
189 46597
+1 1266
fi=(4)
-48 422
+54 422
-54 844
400 844
196 422
cfi=(2)
cfn=(130)
calls=422 +10 
* 76018
-54 12216
+54 12216
-54 24432
400 24432
196 12216
cfi=(2)
cfn=(130)
calls=12216 +10 
* 486915
fe=(15)
387 30448
fi=(4)
702 10344
fi=(32)
4176 10344
+1 94914
cob=(2)
cfi=(7)
cfn=(150)
calls=31638 0 
* 316380
* 31638
* 31638
-1 63276
fe=(15)
391 138174
fi=(13)
656 36648
fi=(27)
192 24432
fi=(13)
781 36648
fe=(15)

fn=(98)
521 43088
fi=(22)
150 10772
+38 21544
fe=(15)
522 10772
fi=(31)
99 21544
fe=(15)
522 10772
fi=(31)
99 10772
cfi=(29)
cfn=(102)
calls=10772 -7 
* 1583484
fi=(22)
+51 10772
+38 21544
fi=(31)
-89 32316
cfi=(29)
cfn=(114)
calls=10772 -7 
* 1583484
fi=(22)
+51 10772
+38 21544
fe=(15)
525 32316
cfi=(28)
cfn=(124)
calls=10772 167 
* 463196
fi=(22)
150 10772
+38 21544
fe=(15)
527 10772
fi=(4)
196 10772
fe=(15)
530 10772
fi=(4)
196 10772
fe=(15)
527 10772
+1 10772
fi=(4)
196 10772
fe=(15)
528 10772
fi=(4)
110 21544
+86 10772
cfi=(2)
cfn=(130)
calls=10772 +10 
* 473968
fe=(15)
530 32316
cfi=(19)
cfn=(138)
calls=10772 279 
* 2725316
* 32316
cfi=(27)
cfn=(172)
calls=10772 111 
* 2154400
* 10772
fi=(4)
180 32316
fi=(22)
1573 32316
fi=(16)
110 21544
cob=(11)
cfi=(41)
cfn=(200)
calls=10772 -61 
* 1281868
* 10772
fi=(29)
534 10772
fi=(22)
255 10772
fi=(29)
534 21544
fi=(22)
256 10772
-1 10772
fi=(29)
535 10772
fi=(22)
256 10772
fi=(16)
124 10772
cfi=(42)
cfn=(210)
calls=10772 +26 
* 5724626
fe=(15)
533 43088
fi=(22)
255 10772
+1 32316
-1 10772
+1 32316
-1 10772
+1 32316
-1 10772
+1 32316
fe=(15)

fn=(504)
501 75404
fi=(22)
-11 10772
fi=(26)
34 10772
+1 10772
fi=(22)
557 21544
147 86176
490 10772
cfn=(506) std::_Deque_base<unsigned int, std::allocator<unsigned int> >::_M_initialize_map(unsigned long) [clone .constprop.487]
calls=10772 679 
* 3471407
+22 10772
+58 21544
147 21544
512 10772
147 64632
512 10772
cfn=(506)
calls=10772 679 
* 4216926
+1 32316
fi=(96) /usr/include/c++/6.2.1/bits/move.h
191 10772
fi=(22)
-41 21544
+1 21544
fi=(96)
+40 21544
+1 10772
fi=(22)
-42 10772
fi=(96)
+42 10772
fi=(22)
-42 10772
fi=(96)
+41 21544
+1 10772
fi=(22)
-41 10772
fi=(96)
+40 21544
+1 10772
fi=(22)
-41 10772
fi=(96)
+40 21544
+1 10772
-1 21544
+1 10772
-1 21544
+1 10772
-1 21544
+1 10772
-1 10772
-1 10772
+1 10772
-1 10772
+2 10772
-1 10772
+1 10772
-1 10772
fi=(22)
1041 21544
cfn=(220)
calls=10772 658 
* 2619225
490 10772
+67 21544
147 86176
490 10772
cfn=(518) std::_Deque_base<unsigned long, std::allocator<unsigned long> >::_M_initialize_map(unsigned long) [clone .constprop.488]
calls=10772 679 
* 4394932
+22 10772
+58 21544
147 21544
512 10772
147 64632
512 10772
cfn=(518)
calls=10772 679 
* 4362222
+1 32316
fi=(96)
191 10772
fi=(22)
-41 21544
+1 21544
fi=(96)
+40 21544
+1 10772
fi=(22)
-42 10772
fi=(96)
+42 10772
fi=(22)
-42 10772
fi=(96)
+41 21544
+1 10772
fi=(22)
-41 10772
fi=(96)
+40 21544
+1 10772
fi=(22)
-41 10772
fi=(96)
+40 21544
+1 10772
-1 21544
+1 10772
-1 21544
+1 10772
-1 21544
+1 10772
-1 10772
-1 10772
+1 10772
-1 10772
+2 10772
-1 10772
+1 10772
-1 10772
fi=(22)
1041 21544
cfn=(218)
calls=10772 658 
* 2615801
fi=(4)
110 10772
fi=(31)
-11 10772
fi=(13)
-12 32316
fi=(4)
+23 10772
fe=(15)
503 10772
fi=(4)
132 10772
fi=(5)
243 10772
fi=(13)
87 21544
fe=(15)
503 10772
+1 10772
fi=(13)
87 43088
fe=(15)
504 10772
+1 10772
fi=(13)
87 32316
fi=(26)
-53 10772
fe=(15)
505 10772
fi=(31)
99 10772
fi=(26)
-64 10772
fi=(27)
+80 10772
+2 10772
fi=(31)
-18 21544
cfi=(29)
cfn=(102)
calls=10772 -7 
* 1583484
* 43088
cfi=(29)
cfn=(114)
calls=10772 -7 
* 1583484
fi=(4)
+11 10772
+86 32316
-86 10772
+86 10772
cfi=(2)
cfn=(130)
calls=10772 +10 
* 473968
fe=(15)
508 32316
cfi=(19)
cfn=(138)
calls=10772 279 
* 2725316
* 32316
cfi=(27)
cfn=(172)
calls=10772 111 
* 2154400
* 10772
fi=(4)
180 32316
fe=(15)
509 43088
cfi=(28)
cfn=(124)
calls=10772 167 
* 463196
fi=(22)
-19 10772
fe=(15)
+21 10772
fi=(22)
+46 21544
147 86176
490 10772
cfn=(518)
calls=10772 679 
* 4445879
+22 10772
+58 21544
147 86176
512 10772
cfn=(518)
calls=10772 679 
* 4858772
+1 32316
fi=(96)
191 10772
fi=(22)
-41 21544
+1 21544
fi=(96)
+40 21544
+1 10772
fi=(22)
-42 10772
fi=(96)
+42 10772
fi=(22)
-42 10772
fi=(96)
+41 21544
+1 10772
fi=(22)
-41 10772
fi=(96)
+40 21544
+1 10772
fi=(22)
-41 10772
fi=(96)
+40 21544
+1 10772
-1 21544
+1 10772
-1 21544
+1 10772
-1 21544
+1 10772
-1 10772
+1 10772
-1 10772
+1 32316
fi=(22)
-42 10772
fi=(96)
+41 21544
fi=(22)
-41 21544
+1 10772
-1 10772
+1 10772
fi=(96)
+40 43088
fi=(22)
2053 10772
151 10772
fi=(96)
+41 10772
-1 21544
fi=(22)
-40 10772
fi=(96)
+41 32316
-1 21544
+1 21544
fi=(22)
-42 10772
fi=(96)
+41 32316
fi=(22)
-40 10772
fi=(96)
+40 32316
+1 21544
-2 10772
+1 10772
-1 10772
+2 10772
fi=(22)
2053 10772
fi=(96)
192 10772
fi=(22)
740 10772
fi=(96)
192 10772
-1 10772
+1 10772
fi=(22)
740 10772
2055 43088
1041 10772
2055 43088
1041 10772
cfn=(218)
calls=10772 658 
* 2578555
* 21544
cfn=(218)
calls=10772 658 
* 2739495
490 10772
+67 21544
147 86176
490 10772
cfn=(506)
calls=10772 679 
* 4541005
+22 10772
+58 21544
147 86176
512 10772
cfn=(506)
calls=10772 679 
* 5189847
+1 32316
fi=(96)
191 10772
fi=(22)
-41 21544
+1 21544
fi=(96)
+40 21544
+1 10772
fi=(22)
-42 10772
fi=(96)
+42 10772
fi=(22)
-42 10772
fi=(96)
+41 21544
+1 10772
fi=(22)
-41 10772
fi=(96)
+40 21544
+1 10772
fi=(22)
-41 10772
fi=(96)
+40 21544
+1 10772
-1 21544
+1 10772
-1 21544
+1 10772
-1 21544
+1 10772
-1 10772
+1 10772
-1 10772
+1 32316
fi=(22)
-42 10772
fi=(96)
+41 21544
fi=(22)
-41 10772
+1 21544
-1 10772
fi=(96)
+41 10772
+1 10772
-1 10772
fi=(22)
-40 10772
fi=(96)
+41 10772
fi=(22)
2053 10772
fi=(96)
191 10772
+1 10772
-1 10772
fi=(22)
-41 10772
fi=(96)
+41 21544
fi=(22)
-40 10772
fi=(96)
+41 10772
-1 10772
fi=(22)
-41 10772
fi=(96)
+41 32316
+1 21544
-1 10772
fi=(22)
-40 10772
fi=(96)
+40 32316
+1 21544
-2 10772
+1 10772
-1 10772
+2 10772
fi=(22)
2053 10772
fi=(96)
191 10772
fi=(22)
740 10772
fi=(96)
192 21544
fi=(22)
740 10772
2055 43088
1041 10772
2055 43088
1041 10772
cfn=(220)
calls=10772 658 
* 2563001
* 21544
cfn=(220)
calls=10772 658 
* 2733647
fi=(13)
1437 10772
fi=(22)
+82 10772
fi=(26)
34 10772
+1 10772
fi=(13)
1437 10772
fi=(22)
+83 21544
-1 21544
fi=(42)
150 21544
cfi=(27)
cfn=(558)
calls=10772 -39 
* 258528
fi=(13)
426 10772
177 21544
fi=(22)
1041 21544
cfn=(218)
calls=10772 658 
* 2560380
* 21544
cfn=(220)
calls=10772 658 
* 2569968
fe=(15)
518 75404
fi=(31)
219 10772
fi=(22)
1527 21544
cfi=(29)
cfn=(526)
calls=10772 462 
* 15713912
* 10772
fe=(15)

fn=(54)
45 3424528
+1 1284198
+1 428066
272 1712264
cfi=(19)
cfn=(60)
calls=428066 +37 
* 20821195
* 2996462
+1 856132
55 1284198
+4 856132
+2 1284198
267 261298
+1 3852594
-11 58068
-1 116136
+1 58068
+2 116136
+8 58068
-8 58068
cfn=(84) Daedalus::DaedalusVM::setCurrentInstance(unsigned long)
calls=58068 489 
* 1625904
* 58068
-11 65346
cfn=(66)
calls=32673 +58 
* 980190
+1 32673
-1 32673
+1 32673
+1 26225
+2 98019
-8 12402
fi=(42)
64 2896
cfi=(15)
cfn=(80)
calls=724 344 
* 23892
* 2896
cfi=(15)
cfn=(80)
calls=724 344 
* 23892
* 724
fe=(15)
232 2172
fi=(42)
64 724
fe=(15)
232 724
cfi=(13)
cfn=(86)
calls=724 781 
* 3620
* 2896
cfi=(13)
cfn=(86)
calls=724 781 
* 3620
* 724
+1 1448
-1 724
+1 724
cfi=(13)
cfn=(86)
calls=724 781 
* 3620
* 2896
cfi=(13)
cfn=(86)
calls=724 781 
* 3620
+5 724
-5 1448
+5 724
-52 111690
cfn=(70)
calls=22338 337 
* 871182
+1 67014
-48 2770
cfn=(66)
calls=1385 306 
* 62052
* 4155
267 1385
139 2770
cfn=(44)
calls=1385 301 
* 42935
* 64632
267 32316
139 64632
cfn=(44)
calls=32316 301 
* 1001796
* 33701
-69 2896
cfn=(66)
calls=1448 306 
* 68056
* 4344
cfn=(66)
calls=1448 306 
* 43440
* 2896
267 1448
70 2896
cfn=(44)
calls=1448 301 
* 44888
* 1448
-1 5792
cfn=(66)
calls=2896 306 
* 136112
* 8688
cfn=(66)
calls=2896 306 
* 185344
* 5792
267 2896
69 5792
cfn=(44)
calls=2896 301 
* 89776
* 2896
-3 35455
+98 35455
fi=(34)
446 106365
fi=(23)
1413 70910
fi=(34)
446 35455
fi=(23)
1414 70910
+3 70066
+3 80658
+3 15888
fi=(34)
1178 5296
446 21184
fi=(23)
1423 10592
fe=(15)
166 844
fi=(17)
2134 70066
+2 105096
cfn=(20256)
calls=60 1740 
* 110753
cfn=(19592)
calls=124 1740 
* 15128
cfn=(836)
calls=422 1738 
* 365022
cfn=(818)
calls=422 1740 
* 164553
cfn=(814)
calls=422 1740 
* 51062
cfn=(810)
calls=2954 1740 
* 256998
cfn=(804)
calls=422 1740 
* 38824
cfn=(52)
calls=2586 1738 
* 603040082
cfn=(746)
calls=2586 1738 
* 1200811
cfn=(728)
calls=1204 1738 
* 154073
cfn=(680)
calls=6199 1738 
* 6334953
cfn=(676)
calls=12938 1740 
* 3648516
cfn=(594)
calls=2105 1740 
* 191555
cfn=(590)
calls=724 1740 
* 65884
cfn=(570)
calls=363 1740 
* 84942
cfn=(76)
calls=1501 1740 
* 70547
cfi=(14)
cfn=(40)
calls=1 1742 
* 20211
fe=(15)
267 70066
154 3136
fi=(22)
1520 1568
-1 1568
+1 1568
-1 3136
fi=(16)
120 6272
fi=(22)
1524 3136
fi=(28)
94 3136
fe=(15)
+63 1568
+2 1568
fi=(28)
-65 1568
fi=(16)
+26 4704
fi=(28)
-22 27816
fe=(15)
+47 46224
fi=(22)
+43 24680
fe=(15)
-40 12340
fi=(22)
1576 24680
fe=(15)
148 12340
fi=(13)
952 12340
fe=(15)
267 24680
-92 399115
cfn=(70)
calls=79823 337 
* 3113097
+2 239469
-4 137259
cfn=(44)
calls=45753 301 
* 1418343
* 137259
-63 1080
cfn=(66)
calls=540 306 
* 41580
* 1620
cfn=(66)
calls=540 306 
* 41580
* 2700
cfn=(44)
calls=540 301 
* 16740
* 49592
cfn=(44)
calls=12398 301 
* 384338
* 12938
-27 23856
cfn=(80)
calls=7952 344 
* 262416
+2 7952
-2 7952
+2 7952
497 31808
cfi=(25)
cfn=(88)
calls=7952 154 
* 99868
87 7952
497 7952
87 23856
cfi=(13)
cfn=(86)
calls=7952 781 
* 39760
fi=(27)
+93 36322
fe=(15)
-91 7952
-1 7952
+1 7952
cfn=(66)
calls=7952 306 
* 582964
+1 7952
-1 7952
+1 15904
+12 19734
cfn=(66)
calls=9867 306 
* 300124
+1 9867
-1 9867
+1 9867
cfn=(66)
calls=9867 306 
* 296010
+1 19734
267 9867
104 59202
cfn=(44)
calls=9867 301 
* 305877
* 9867
+7 1210
cfn=(66)
calls=605 306 
* 18150
* 1815
cfn=(66)
calls=605 306 
* 18150
* 2420
267 605
111 605
cfn=(44)
calls=605 301 
* 18755
* 605
-3 1076
cfn=(66)
calls=538 306 
* 16140
* 1614
cfn=(66)
calls=538 306 
* 16140
* 2152
267 538
108 538
cfn=(44)
calls=538 301 
* 16678
* 538
262 305436
cfn=(70)
calls=50906 +75 
* 1985334
+1 152718
72 3000
cfn=(66)
calls=1500 306 
* 45000
* 4500
cfn=(66)
calls=1500 306 
* 45000
* 6000
267 1500
72 1500
cfn=(44)
calls=1500 301 
* 46500
* 1500
+37 64632
cfn=(66)
calls=32316 306 
* 2393750
* 96948
cfn=(66)
calls=32316 306 
* 2447002
* 64632
-14 24796
cfn=(66)
calls=12398 306 
* 371940
+1 12398
-1 12398
+1 12398
cfn=(66)
calls=12398 306 
* 371940
+1 24796
+69 93922
cfi=(27)
cfn=(586)
calls=7952 +12 
* 119280
* 15904
-20 21544

fn=(826)
400 422
cfn=(828) Daedalus::DaedalusVM::pushString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
calls=422 +26 
* 63695

fn=(44)
301 280842
fi=(31)
-82 140421
fe=(15)
+82 702105
fi=(22)
1520 140421
-1 140421
+1 140421
-1 280842
fi=(16)
120 421263
fi=(22)
1524 280842
fi=(29)
152 280842
fi=(16)
-32 421263
fi=(29)
+38 280842
fe=(15)
303 842526

fn=(66)
306 240199
+2 480398
-2 1441194
fi=(22)
150 240199
+1 240199
+37 480398
fe=(15)
311 240199
fi=(22)
1576 240199
188 240199
1576 240199
188 240199
1576 240199
fe=(15)
314 240199
fi=(22)
1576 240199
fe=(15)
319 240199
+4 240199
-4 240199
+12 107605
-12 215210
fi=(22)
188 215210
1576 107605
fe=(15)
326 107605
fi=(22)
1576 107605
fe=(15)
497 430420
cfi=(25)
cfn=(88)
calls=107605 154 
* 1410610
328 107605
497 107605
328 215210
cfi=(13)
cfn=(86)
calls=107605 781 
* 538025
fi=(27)
198 509267
+1 13480
fe=(15)
334 936869
fi=(13)
656 302595
fi=(27)
201 201730
+1 100865
fe=(15)
334 605190

fn=(84)
489 290340
+1 58068
+1 58068
cfi=(13)
cfn=(86)
calls=58068 781 
* 290340
* 58068
+1 116136
-1 58068
+1 58068
cfi=(13)
cfn=(86)
calls=58068 781 
* 290340
* 116136
+1 232272

fn=(42)
395 20403
cfn=(44)
calls=20403 -94 
* 632493

fn=(808)
414 422
+1 422
cfn=(66)
calls=422 306 
* 12660
+1 844
+1 844

fn=(80)
344 48705
+1 97410
-1 194820
fi=(22)
150 48705
+1 48705
+37 97410
1576 48705
fe=(15)
353 48705
fi=(22)
1576 48705
188 97410
fe=(15)
357 48705
-1 48705
+1 133717
fi=(22)
1576 85012
188 85012
fe=(15)
362 42506
fi=(22)
1576 42506
fe=(15)
362 42506
fi=(22)
1576 42506
fe=(15)
377 170024
fi=(22)
1576 12398
fe=(15)
369 6199
+8 24796

fn=(828)
426 2532
+1 844
+2 844
cfi=(13)
cfn=(86)
calls=422 781 
* 2110
fi=(22)
1520 422
-1 422
150 422
1520 422
-1 844
fi=(16)
120 1660
fi=(22)
1524 830
+28 830
-1 830
+1 14
-1 14
+5 1245
fi=(13)
656 1245
fi=(27)
236 830
fi=(22)
1556 7
fi=(13)
656 21
fi=(27)
236 14
fi=(4)
1181 844
cob=(11)
cfi=(37)
cfn=(176)
calls=422 254 
* 23268
* 422
fe=(15)
436 422
-1 844
+1 1266
-1 844
cfn=(70)
calls=422 -98 
* 16458
fi=(16)
110 21
cob=(11)
cfi=(41)
cfn=(200)
calls=7 -61 
* 833
* 7
fi=(29)
552 21
fi=(22)
255 7
fi=(29)
552 7
fi=(22)
256 7
-1 7
fi=(29)
553 7
fi=(22)
256 14
fi=(183) /usr/include/c++/6.2.1/bits/stl_queue.h
-13 14
fi=(22)
1527 7
cfi=(29)
cfn=(20328)
calls=7 462 
* 1952
* 21
fe=(15)

fl=(78)
fn=(368)
18 41164

fl=(150)
fn=(8146)
213 605
+3 121
-3 363
+4 121
-4 121
+2 121
-2 121
+9 121
-9 1089
+12 363
+6 121
-2 121
-4 124025
+6 968
+2 121
+1 242
+1 242
+1 121
-5 121
+5 363
-5 242
+2 484
+1 968
+1 968
+1 484
-5 484
+5 1452
-5 968
+9 242
+34 242
+9 968

fn=(8148)
18 605
+1 121
-1 363
+2 121
+4 121
-6 605
+9 363
+6 121
-2 121
-4 124025
+6 121
+38 242
+5 968

fl=(90)
fn=(462)
44 122058

fl=(129)
fn=(19388)
376 121
+2 121

fn=(19382) nvgBeginFrame
404 242
669 121
+13 363
-29 121
-97 121
682 121
556 121
682 4356
-29 2178
-97 121
+97 121
-97 121
+97 242
-96 121
+96 121
-96 121
+96 121
-95 242
+97 121
+1 121
+1 484
+1 484
-5 1210
-97 242
+1 242
+1 242
+97 121
+1 121
+1 121
+31 121
-31 121
+32 121
-32 121
+33 121
-32 121
+39 121
-39 121
+43 121
-43 121
+44 121
556 121
+1 121
+1 242
698 121
+2 121
248 242
657 121
+1 121
+29 121
+4 121
556 121
+1 121
699 121
-13 242
+8 242
250 121
695 121
248 121
+1 363
415 121
251 121
-1 121
415 121
cfi=(130)
cfn=(19384)
calls=121 547 
* 6534
+2 242
+4 242

fn=(1120) nvgEndFrame
429 605
320 363
431 726
cfi=(130)
cfn=(1122)
calls=121 735 
* 2783
+1 363
+25 605

fl=(116)
fn=(958)
103 726
+2 1089
+2 363
-1 363
+1 363
+1 484
+1 242
+1 726
+1 242
+16 726
+2 363
-1 363
+1 1936
-1 1573
+1 1573
-2 5082
-13 4235
+3 121
+1 242
+3 242

fn=(14710)
103 242
+2 363
+2 121
-1 121
+1 121
+1 122
+1 61
+1 183
+1 122
+16 242
+2 121
-1 121
+1 242
-1 121
+1 121
-2 847
-13 1080
+4 240
+3 60
+2 120
-5 120

fn=(14776)
103 484
+2 726
+2 242
-1 242
+1 242
+20 484
+2 242
-1 242
+1 966
-1 724
+1 724
-2 2414
-13 4830
+3 242
+1 484
+3 484

fl=(181)
fn=(19560)
134 30492

fl=(11)
fn=(32)
fi=(1)
cfi=(1)
cfn=(0)
calls=1 605 
559 20128
777 2
fi=(1)
560 4
+28 2
fi=(12)
41 4
fi=(1)
589 2
fi=(13)
426 1
177 2
426 1
177 2
fi=(1)
592 9
fi=(13)
87 5
fe=(11)

fn=(476)
777 47422
fi=(88)
196 47422
+2 16806
-2 7788
+3 1
+4 307
-1 44996
fe=(11)

fn=(436) Logic::StaticMeshVisual::setShadowValue(float)
777 7710
fi=(87) /home/desktop/code/REGoth/src/logic/visuals/StaticMeshVisual.cpp
165 11565
-1 23130
fi=(51)
+27 15420
fi=(87)
-26 3855
fi=(51)
+26 15420
fi=(12)
-53 3855
fi=(51)
+53 3855
fi=(12)
-53 3855
fi=(51)
+53 3855
fi=(12)
-53 15420
fi=(87)
+27 3855
+4 3855
-4 11444
fi=(51)
+26 30356
fi=(12)
-53 7589
fi=(51)
+53 7589
fi=(12)
-53 7589
fi=(51)
+53 7589
fi=(12)
-53 30356
fi=(87)
+27 7589
+4 7589
-4 7589
+6 7710
fe=(11)

fn=(786) Logic::EventManager::clear()
777 844
fi=(88)
188 1266
+2 844
-2 422
+2 422
-2 422
+2 2534
-2 1267
+2 1267
-2 1689
fe=(11)

fl=(21)
fn=(64)
203 998355
+1 665570
fi=(20)
451 332785
fe=(21)

fl=(165)
fn=(19374)
617 121
+3 847
cfi=(133)
cfn=(19294)
calls=121 3822 
* 154880
fi=(134)
+64 363
fe=(165)
-63 242
+3 121
-1 121
cfi=(133)
cfn=(1166)
calls=121 4376 
* 51425

fl=(172)
fn=(19504)
355 121
+1 121

fn=(19478)
370 121
+1 121

fn=(19480)
332 121
+1 121

fl=(173)
fn=(19486)
241 121
+5 121
-5 121
-29 242
+34 121
-34 121
+34 363
cfi=(174)
cfn=(19488)
calls=121 514 
* 2662
+4 242

fl=(54)
fn=(262) Physics::PhysicsSystem::raytrace(Math::t_vector<Math::t_float3, float, float, float> const&, Math::t_vector<Math::t_float3, float, float, float> const&, Physics::CollisionShape::ECollisionType)
255 33934
fi=(61)
-28 33934
fe=(54)
+28 33934
fi=(61)
-28 33934
fe=(54)
+28 33934
fi=(56)
134 33934
fi=(61)
+93 33934
fe=(54)
327 33934
fi=(61)
227 33934
fe=(54)
327 33934
+7 33934
-4 33934
-3 33934
+2 33934
fi=(61)
227 33934
fi=(56)
-92 33934
fe=(54)
327 67868
+2 33934
+3 33934
fi=(61)
227 33934
fi=(56)
-93 33934
fe=(54)
334 33934
-7 33934
+5 33934
-3 33934
+5 33934
fi=(56)
135 33934
fe=(54)
328 33934
+6 33934
-6 33934
+1 33934
fi=(61)
227 33934
fe=(54)
+39 33934
+62 33934
+3 33934
-3 33934
+6 33934
-6 33934
+6 33934
cfi=(55)
cfn=(264)
calls=33934 991 
* 596796607
+3 33934
fi=(12)
36 67868
fi=(61)
218 33934
fi=(51)
+21 67868
fi=(12)
35 67868
fe=(54)
337 33934
+2 33934
fi=(51)
239 67868
fi=(12)
35 33934
+1 33934
fi=(51)
239 33934
fe=(54)
339 33934
fi=(12)
35 33934
fi=(51)
239 33934
fe=(54)
343 33934
fi=(12)
36 33934
fe=(54)
340 33934
+3 101802

fn=(362)
269 37114
fi=(76)
-64 148456
fe=(54)
+66 74228
+6 37114
fi=(12)
146 74228
fe=(54)
281 37114
fi=(12)
146 74228
fe=(54)
280 185570
+3 36994
+24 36994
+2 36994
-1 36994
-1 36994
+2 36994
+2 147976
fi=(56)
508 36994
fe=(54)
319 36994
fi=(56)
508 147976
fe=(54)
319 73988
fi=(56)
510 36994
-1 36994
+1 36994
-1 73988
fe=(54)
319 36994
fi=(56)
509 36994
+2 73988
-1 36994
-1 36994
+2 36994
-1 36994
-1 36994
+2 36994
fe=(54)
287 36994
+3 120

fn=(19430)
70 242
+1 121
-1 242
+1 121
-1 484
+1 484
cfi=(167)
cfn=(19432)
calls=121 402 
* 303710
+2 242
fi=(198) /home/desktop/code/REGoth/src/memory/AllocatorBundle.h
+37 726
fe=(54)
-27 27419205
+2 6854650
+2 13709542
+13 968

fl=(153)
fn=(8156)
49 31581
fi=(199) /usr/lib/gcc/x86_64-pc-linux-gnu/6.2.1/include/xmmintrin.h
743 157905
fe=(153)
41 31581
fi=(199)
743 63162
fe=(153)
39 31581
fi=(199)
195 31581
fe=(153)
38 31581
fi=(199)
195 31581
fe=(153)
40 31581
fi=(199)
195 94743
-12 31581
+12 94743
-12 63162
fe=(153)
49 31581
+1 31581
fi=(199)
743 221067
195 126324
-12 31581
+12 31581
-12 63162
fe=(153)
50 31581
+1 31581
fi=(199)
743 221067
195 126324
-12 31581
+12 31581
-12 63162
fe=(153)
52 31581
fi=(199)
743 63162
fe=(153)
51 31581
fi=(199)
743 157905
195 126324
-12 94743
fe=(153)
52 63162

fl=(44)
fn=(398) Logic::PlayerController::setDirection(Math::t_vector<Math::t_float3, float, float, float> const&)
1385 49458
fi=(86)
59 16486
fe=(44)
1385 32972
fi=(51)
239 49458
fi=(52)
672 16486
fe=(44)
1389 16486
fi=(52)
674 16486
fi=(51)
239 16486
fi=(52)
674 65944
fi=(86)
59 32972
fi=(83)
487 98916
fi=(84)
132 16486
fi=(4)
-22 16486
fe=(44)
544 16486
fi=(84)
132 16486
fe=(44)
544 32972
fi=(4)
110 16486
fi=(5)
290 65944
fi=(4)
132 16486
fi=(5)
243 16486
fi=(52)
638 49458
fi=(51)
264 49458
fi=(52)
638 49458
fe=(44)
-94 16486
cfi=(45)
cfn=(226)
calls=16486 44 
* 857272
1395 49458
cfi=(47)
cfn=(402) Logic::ModelVisual::isAnimPlaying(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
calls=16486 706 
* 613410
* 82430
fi=(52)
584 32972
-1 16486
-1 16486
+2 32972
+45 16486
-45 32972
+45 32972
+45 65944
fi=(86)
59 16486
fi=(52)
674 32972
fi=(86)
59 16486
fi=(83)
487 82430
fi=(84)
132 16486
fi=(86)
-50 16486
fi=(84)
+50 16486
fi=(86)
-49 16486
fi=(52)
638 49458
fi=(86)
82 32972
+1 16486
-1 16486
+1 49458
-1 16486
+1 49458
fi=(52)
674 65944
fi=(86)
59 16486
fi=(52)
674 32972
fi=(86)
59 16486
fi=(83)
487 82430
fi=(84)
132 16486
fi=(85)
303 16486
fe=(44)
1401 16486
fi=(84)
132 16486
fi=(52)
673 16486
+1 16486
fe=(44)
1401 16486
fi=(52)
674 16486
fi=(85)
303 16486
fi=(52)
638 65944
fi=(86)
83 32972
-1 16486
fi=(52)
674 16486
fi=(86)
83 32972
-1 16486
+1 16486
-1 32972
fi=(85)
305 16486
fi=(86)
83 16486
-2 65944
+2 16486
-2 16486
+2 32972
fi=(52)
672 16486
+2 32972
fi=(86)
59 16486
fi=(52)
674 32972
fi=(86)
59 16486
fi=(52)
674 49458
fi=(127)
570 16486
fi=(52)
674 65944
fi=(86)
59 16486
fi=(52)
674 16486
fi=(86)
59 16486
fi=(52)
674 32972
fi=(86)
59 16486
fi=(127)
571 16486
fi=(86)
59 16486
fi=(85)
301 16486
fi=(127)
571 16486
+1 16486
fi=(85)
302 16486
-1 16486
fi=(127)
572 16486
fi=(85)
301 16486
+1 16486
-1 16486
+4 32972
-3 16486
+3 32972
+1 32972
+1 32972
-1 16486
+1 65944
+2 32972
-2 16486
+2 65944
+1 32972
-1 16486
+1 82430
+1 32972
+6 16486
-7 16486
+1 49458
+3 16486
-3 32972
+2 32972
-2 16486
+2 16486
+1 16486
-1 16486
+2 32972
-1 16486
+1 65944
+2 16486
+1 16486
-1 16486
-2 16486
fi=(49)
60 16486
fi=(85)
317 16486
+1 49458
+1 32972
-1 16486
+3 16486
+2 16486
-2 16486
-2 16486
+3 16486
-1 16486
+1 16486
-1 16486
+2 16486
-1 16486
fi=(49)
60 16486
fi=(85)
321 16486
fi=(49)
60 16486
fi=(85)
323 16486
-1 16486
fi=(49)
60 49458
fi=(85)
323 16486
fi=(49)
60 65944
-9 16486
+9 16486
-18 16486
+18 32972
-18 16486
+18 115402
-9 16486
+9 65944
-18 16486
+9 16486
+9 65944
-9 16486
+9 16486
-18 32972
+18 115402
fi=(85)
349 16486
fi=(49)
60 65944
fi=(85)
349 32972
+2 16486
fi=(49)
60 32972
fi=(85)
351 16486
fi=(49)
60 65944
fi=(51)
334 16486
fi=(49)
60 16486
fi=(51)
334 16486
fi=(49)
60 16486
fi=(51)
334 16486
fi=(49)
60 82430
-9 16486
+9 32972
-18 16486
+18 65944
fi=(51)
334 16486
fi=(49)
60 32972
-9 16486
+9 32972
-18 16486
+18 49458
fi=(51)
334 16486
fi=(49)
60 49458
-9 16486
+9 16486
-18 16486
+18 65944
-9 16486
+9 49458
-18 16486
+18 16486
fi=(51)
334 16486
fi=(49)
60 82430
fi=(51)
334 16486
fi=(49)
60 32972
-9 16486
+9 32972
-18 16486
+18 82430
fi=(51)
334 16486
fi=(49)
60 49458
-9 16486
+9 32972
-18 16486
+18 32972
fi=(51)
334 16486
fi=(49)
60 32972
-9 16486
+9 49458
-18 16486
+18 32972
fi=(51)
334 16486
fi=(49)
60 32972
-9 16486
+9 32972
-18 16486
+18 16486
fi=(51)
334 16486
fi=(49)
60 32972
-9 16486
+9 32972
-18 16486
+18 32972
fi=(51)
334 16486
fi=(49)
60 49458
fi=(51)
334 16486
fi=(49)
60 82430
-9 32972
-9 16486
+9 16486
-9 16486
+18 16486
-18 16486
+18 49458
fi=(51)
334 49458
fe=(44)
1401 16486
cfi=(81)
cfn=(388)
calls=16486 18 
* 19025861
+1 82430
fi=(83)
487 65944
fi=(4)
110 16486
+86 49458
-86 16486
+86 16486
cfi=(2)
cfn=(408)
calls=16486 +10 
* 692412
fe=(44)
544 82430
cfi=(45)
cfn=(226)
calls=16486 44 
* 857272
1395 49458
cfi=(47)
cfn=(402)
calls=16486 706 
* 613410
* 32972
fi=(4)
180 49458
fi=(16)
-70 16486
fi=(4)
+70 65944
fe=(44)

fn=(19562) Logic::PlayerController::EV_Conversation(Logic::EventMessages::ConversationMessage&, Memory::GenericHandle<24, 8, 5>)
1258 3321
+1 1107
1376 306
+1 2952
544 1476
cfi=(45)
cfn=(226)
calls=369 44 
* 19188
1267 738
cfi=(12)
cfn=(232) Logic::ModelVisual::getAnimationHandler()
calls=369 138 
* 4428
* 738
cfi=(12)
cfn=(234) Components::AnimHandler::getActiveAnimationPtr()
calls=369 41 
* 4414
+2 738
+14 1105
fi=(4)
5061 860
fi=(12)
59 315
fi=(5)
260 612
+2 918
cob=(2)
cfi=(7)
cfn=(22)
calls=306 0 
* 6426
* 306
fi=(4)
5061 918
fe=(44)
1406 246
fi=(12)
59 300
fe=(44)
544 180
cfi=(45)
cfn=(226)
calls=60 44 
* 3120
1276 240
cfi=(12)
cfn=(20318) Logic::ModelVisual::setAnimation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
calls=60 138 
* 485870
544 240
cfi=(45)
cfn=(226)
calls=60 44 
* 3120
1277 120
cfi=(12)
cfn=(232)
calls=60 138 
* 720
* 120
cfi=(12)
cfn=(234)
calls=60 41 
* 706
+1 120

fn=(256) Logic::PlayerController::placeOnGround()
552 33934
-1 50901
+5 16967
cfi=(12)
cfn=(246)
calls=16967 138 
* 220571
fi=(52)
+28 16967
fe=(44)
-27 16967
fi=(52)
+27 84835
fe=(44)
-28 50901
+1 16967
cfi=(12)
cfn=(246)
calls=16967 138 
* 220571
fi=(52)
+27 16967
fi=(51)
230 16967
fi=(52)
584 16967
fi=(51)
230 16967
fi=(52)
584 16967
fi=(51)
230 16967
fi=(52)
584 50901
fe=(44)
-27 50901
fi=(51)
230 16967
cob=(2)
cfi=(7)
cfn=(22)
calls=16967 0 
* 458109
* 16967
fe=(44)
559 33934
+34 50901
fi=(53)
220 16967
fe=(44)
562 67868
fi=(53)
220 16967
fe=(44)
562 16967
cfi=(54)
cfn=(262)
calls=16967 255 
* 302609673
+3 33934
fi=(53)
220 16967
fe=(44)
584 67868
fi=(53)
220 16967
fe=(44)
584 16967
cfi=(54)
cfn=(262)
calls=16967 255 
* 296358710
+1 33934
fi=(53)
228 16486
fe=(44)
588 32972
fi=(53)
228 16486
fe=(44)
588 16486
cfi=(13)
cfn=(426)
calls=16486 781 
* 1731030
-44 49458
+44 16486
-44 16486
cfi=(45)
cfn=(226)
calls=16486 44 
* 857272
+46 32972
-46 65944
cfi=(45)
cfn=(226)
calls=16486 44 
* 857272
+3 16486
+44 49458
cfi=(47)
cfn=(430) Logic::ModelVisual::setShadowValue(float)
calls=16486 +86 
* 2549421
* 16486
-24 32972
cfi=(12)
cfn=(246)
calls=16486 138 
* 214318
* 16486
-23 32972
+23 214318
-23 16486
+23 32972
-23 16486
cfi=(45)
cfn=(226)
calls=16486 44 
* 857272
+25 32972
cfi=(47)
cfn=(384) Logic::ModelVisual::getModelRoot()
calls=16486 -40 
* 329720
+3 16486
-3 49458
+3 32972
+2 65944
fi=(52)
+10 32972
fe=(44)
-5 32972
fi=(52)
+5 49458
fi=(51)
239 32972
fi=(52)
584 16486
fi=(51)
397 32972
239 16486
397 16486
fe=(44)
579 16486
cfi=(81)
cfn=(388)
calls=16486 18 
* 19025861
+1 49458
cfn=(398)
calls=16486 1385 
* 30408057
* 16486

fn=(19236)
1659 121
fi=(12)
41 242
fe=(44)
1663 242
+14 242

fn=(774)
904 3164
+4 791
-4 791
+4 3427
+30 369
cfn=(19562)
calls=369 1258 
* 545968
* 369
+8 369
+1 1476
-15 422
cfn=(776) Logic::PlayerController::EV_State(Logic::EventMessages::StateMessage&, Memory::GenericHandle<24, 8, 5>)
calls=422 1146 
* 7885782
* 422
+14 422
+1 1688

fn=(600)
1538 12402

fn=(19240)
1680 121
fi=(12)
41 242
fe=(44)
1684 242
+14 242

fn=(776)
1146 1266
-1 2532
+5 844
fi=(53)
204 1688
fi=(94)
-58 422
fe=(44)
1427 422
cfi=(42)
cfn=(484)
calls=422 99 
* 1266
fi=(94)
146 422
fe=(44)
1157 422
fi=(94)
146 844
fe=(44)
1157 844
fi=(4)
110 422
fe=(44)
1157 422
fi=(4)
110 422
fi=(53)
+94 422
fi=(5)
+86 422
fi=(4)
132 422
fi=(5)
243 422
fi=(53)
-39 422
fe=(44)
1157 422
cfi=(18)
cfn=(486)
calls=422 138 
* 123224
* 422
fi=(4)
180 1266
fi=(16)
-70 422
fi=(4)
+86 1266
-86 422
+86 422
cfi=(2)
cfn=(408)
calls=422 +10 
* 18568
fi=(53)
+8 422
fe=(44)
1158 844
fi=(53)
204 422
fe=(44)
1158 422
cfi=(94)
cfn=(494)
calls=422 41 
* 137150
* 422
fi=(4)
180 1266
fi=(16)
-70 422
fi=(4)
+86 1266
-86 422
+86 422
cfi=(2)
cfn=(408)
calls=422 +10 
* 18568
fi=(53)
+8 422
fe=(44)
1159 844
fi=(53)
204 422
fe=(44)
1159 422
cfi=(94)
cfn=(494)
calls=422 41 
* 148544
* 422
fi=(4)
180 1266
fi=(82)
72 422
fe=(44)
1161 422
cfi=(11)
cfn=(786)
calls=422 777 
* 10977
+2 1266
+2 1688
cfi=(43)
cfn=(602)
calls=422 40 
* 7393303
+27 422
-20 422
+20 1688

fn=(19252)
1727 121
-2 121
+2 121
1855 121
1729 242

fn=(480)
1405 71610
fi=(12)
59 251119
fe=(44)
1407 35805

fn=(224)
92 67868
fi=(82)
-20 16967
fe=(44)
+20 33934
+2 16967
cfi=(88)
cfn=(458)
calls=16967 -20 
* 9384941
+2 50901
cfi=(43)
cfn=(222)
calls=16967 +40 
* 846082777
cfi=(43)
cfn=(222)
calls=1 272 
* 24385
544 67868
cfi=(45)
cfn=(226)
calls=16967 44 
* 882284
fi=(12)
41 16967
fe=(44)
547 16967
fi=(12)
41 16967
fe=(44)
+60 33934
+12 50901
+14 33934
+3 33934
cfi=(12)
cfn=(232)
calls=16967 +8 
* 203604
* 33934
cfi=(12)
cfn=(234)
calls=16967 -89 
* 110147
* 33934
+6 50901
cfi=(47)
cfn=(238)
calls=16967 535 
* 3324517
+3 33934
cfn=(256)
calls=16967 552 
* 658834039
+3 33934
+26 67155
544 50901
142 16967
544 16967
cfi=(45)
cfn=(226)
calls=16967 44 
* 882284
142 33934
cfi=(12)
cfn=(232)
calls=16967 -4 
* 203604
* 33934
+3 7072
cfi=(12)
cfn=(246)
calls=3536 -7 
* 45968
544 35360
cfi=(45)
cfn=(226)
calls=3536 44 
* 183872
146 7072
cfi=(12)
cfn=(232)
calls=3536 -8 
* 42432
fi=(48) /home/desktop/code/REGoth/src/components/AnimHandler.h
-56 7072
fe=(44)
+56 14144
fi=(48)
-56 3536
fe=(44)
+56 3536
fi=(48)
-56 3536
fe=(44)
+56 17680
cfi=(12)
cfn=(246)
calls=3536 -8 
* 45968
fi=(49)
-86 3536
fe=(44)
+88 3536
fi=(49)
-88 21216
725 10608
42 3536
+18 7072
-18 7072
+18 10608
fi=(52)
239 3536
fi=(49)
60 10608
fi=(52)
209 3536
fi=(49)
42 3536
+18 10608
-18 7072
fi=(52)
209 3536
fi=(49)
42 10608
fi=(52)
240 3536
+1 3536
-31 3536
+1 3536
-1 3536
+1 3536
fe=(44)
-63 3536
cfi=(12)
cfn=(246)
calls=3536 -10 
* 45968
* 3536
+2 7072
fi=(51)
397 7072
fe=(44)
148 7072
fi=(51)
397 3536
fe=(44)
148 42432
fi=(51)
397 7072
fe=(44)
148 3536
fi=(51)
397 3536
fe=(44)
150 3536
cfi=(81)
cfn=(388)
calls=3536 18 
* 3910310
544 14144
cfi=(45)
cfn=(226)
calls=3536 44 
* 183872
152 7072
cfi=(12)
cfn=(232)
calls=3536 -14 
* 42432
* 7072
+16 17680
-55 67868
+19 53404
cfi=(47)
cfn=(712) Logic::ModelVisual::setAnimation(Logic::ModelVisual::EModelAnimType, bool)
calls=13351 325 
* 2534472
* 13351

fn=(848)
602 484
-58 363
+58 121
-58 121
cfi=(45)
cfn=(226)
calls=121 44 
* 6292
+3 121
+59 242
+3 363
825 484
fi=(82)
72 121
fe=(44)
612 121
cfi=(11)
cfn=(476)
calls=121 777 
* 726
* 363
fi=(12)
41 242
fe=(44)
612 242
+51 242
+14 242
+6 121
-1 121
+1 242
783 242
-98 363
+1 121
+2 242
-2 121
+5 121
+2 242
-2 121
+5 242
+5 242
+86 242
544 484
cfi=(45)
cfn=(226)
calls=121 44 
* 6292
711 242
cfi=(12)
cfn=(232)
calls=121 138 
* 1452
* 242
cfi=(12)
cfn=(234)
calls=121 41 
* 1452
+1 242
544 484
cfi=(45)
cfn=(226)
calls=121 44 
* 6292
712 242
cfi=(12)
cfn=(232)
calls=121 138 
* 1452
* 242
cfi=(12)
cfn=(234)
calls=121 41 
* 1452
* 121
fi=(4)
5061 242
fi=(12)
41 242
fe=(44)
781 242
+14 363

fl=(114) /home/desktop/code/REGoth/src/render/WorldRender.cpp
fn=(924) Render::drawWorld(World::WorldInstance&, Render::RenderConfig const&, Render::RenderSystem&)
67 121
+2 121
cfn=(926) Render::setupSky(World::WorldInstance&, Render::RenderConfig const&)
calls=121 -49 
* 1525686
+34 363
fi=(11)
777 242
fe=(114)
107 242
378 242

fn=(926)
20 242
fi=(200) /home/desktop/code/REGoth/src/content/Sky.h
+77 121
fe=(114)
-77 363
+6 121
-6 121
+3 121
fi=(200)
127 121
fe=(114)
26 363
cfi=(109)
cfn=(928)
calls=121 3465 
* 186582
+7 363
-1 121
+1 484
-1 363
+1 121
cfi=(91)
cfn=(966)
calls=121 317 
* 7381
+6 121
+4 121
fi=(51)
+64 121
fe=(114)
-64 242
fi=(51)
+65 121
+2 121
-2 121
+1 242
fe=(114)
-68 121
fi=(51)
+66 121
+1 242
+1 242
+1 121
fe=(114)
-67 121
cfi=(109)
cfn=(928)
calls=121 3465 
* 79618
+1 484
cfi=(109)
cfn=(928)
calls=121 3465 
* 78892
+3 484
cfi=(91)
cfn=(464)
calls=121 349 
* 7018
+1 1210
cfi=(109)
cfn=(970)
calls=121 2663 
* 351623
+1 968
cfi=(109)
cfn=(970)
calls=121 2663 
* 340252
+1 968
cfi=(109)
cfn=(970)
calls=121 2663 
* 337227
fi=(51)
188 121
+3 121
-3 121
fe=(114)
58 121
fi=(51)
188 121
fe=(114)
58 121
fi=(51)
188 121
+1 242
+2 121
-2 121
+1 242
+1 121
-1 121
+1 363
fe=(114)
58 121
fi=(51)
191 363
fe=(114)
58 121
fi=(51)
191 242
fe=(114)
58 121
cfi=(109)
cfn=(1020)
calls=121 3359 
* 4961
+3 242
cfi=(109)
cfn=(902)
calls=121 4551 
* 118822
+1 605

fl=(128)
fn=(19260)
3310 121
+1 1936
cfn=(19262) Imgui::beginFrame(int, int, unsigned char, int, unsigned short, unsigned short, unsigned short, unsigned short, char, unsigned char)
calls=121 840 
* 1850816
+1 242

fn=(1118)
3315 121
918 242
+3 363
+6 121
-4 121
708 121
+1 121
+1 121
927 121
cfi=(129)
cfn=(1120)
calls=121 429 
* 5445
3317 121
928 121
cfi=(131)
cfn=(1124)
calls=121 -90 
* 118217

fn=(19262)
840 968
+8 242
-8 242
+8 121
-8 242
+10 121
-10 242
+8 121
-8 242
+8 242
-8 121
+4 121
+5 121
+1 121
-4 121
+3 121
-4 121
-3 121
+1 121
+10 121
-5 242
+5 242
-5 484
+2 121
-1 121
+1 121
-1 363
+1 242
-1 121
+2 242
+2 121
-2 484
+2 605
cfi=(131)
cfn=(19264)
calls=121 -20 
* 1761276
+1 847
cfi=(129)
cfn=(19382)
calls=121 404 
* 24442
+1 363
cfi=(130)
cfn=(19386)
calls=121 1121 
* 1089
+2 363
cfi=(109)
cfn=(19390)
calls=121 3327 
* 19602
+1 363
cfi=(109)
cfn=(19398)
calls=121 3373 
* 2541
+2 121
cfi=(109)
cfn=(886)
calls=121 2578 
* 968
+1 242
+26 363
fi=(111)
+38 121
-7 121
+7 121
-7 121
+7 121
fe=(128)
-38 242
+1 242
-1 121
fi=(111)
+38 1210
fe=(128)
-37 242
fi=(111)
+40 121
+3 121
+1 121
-14 121
+8 121
-7 242
+2 121
-2 121
+2 121
-2 121
+8 121
-6 363
+8 121
-7 121
+7 121
-7 121
+8 121
fe=(128)
-42 121
cfi=(109)
cfn=(892)
calls=121 3388 
* 12947
+1 726
cfi=(109)
cfn=(896)
calls=121 3335 
* 4598
+3 121
cfi=(133)
cfn=(19404)
calls=121 3086 
* 484
* 242
-64 121
-2 242
+2 121
+1 242
+1 363
+1 121
-1 121
+1 484
+5 121
-4 121
+1 121
+3 121
-1 363
+62 121
+3 121
3159 121
898 121
+3 121
3160 121
909 121
-12 121
3186 121
-81 363
904 121
+1 121
+1 121
3158 121
+1 121
-1 121
+2 121
909 121
+1 121
+1 121
+2 121
+1 968

fl=(25)
fn=(88)
154 256390
+2 223864
fi=(26)
-10 111932
fe=(25)
+10 111932
fi=(26)
-10 111932
fe=(25)
+10 111932
fi=(26)
-10 447728
fe=(25)
+13 223864
+18 16263
+3 16263

fl=(100)
fn=(698)
307 62590
+6 18777
+3 12518
+4 50072
fi=(99)
1338 12518
fe=(100)

fl=(162)
fn=(19258)
281 726
+1 484
+1 242
fi=(163) /usr/include/c++/6.2.1/bitset
847 363
fe=(162)
284 121
fi=(163)
847 968
fe=(162)

fn=(19212)
197 968
+1 726
fi=(163)
768 121
fe=(162)
198 121
fi=(163)
768 242
96 121
+12 363
fe=(162)
+93 242
fi=(163)
96 3993
+12 11979
fe=(162)
+93 7986
+4 14278
fi=(8)
1720 12100
fe=(162)
205 1089
fi=(8)
1720 19602
+2 41987
-2 12342
fi=(163)
96 4114
fi=(8)
209 4114
fi=(163)
825 8228
fi=(8)
209 4114
cob=(11)
cfi=(9)
cfn=(28)
calls=4114 0 
* 51909
* 4114
fe=(162)
-11 28193
fi=(163)
768 3993
fe=(162)
198 3993
fi=(163)
768 3993
fi=(8)
1724 19360
+1 23474
fe=(162)
203 16456
fi=(8)
1685 10285
+1 3509
+1 3509
-2 7018
+1 7018
-33 15004
+1 6776
fe=(162)
208 12342
+1 8228
fi=(17)
2134 8470
+2 6776
cfn=(19250)
calls=121 1740 
* 968
cfn=(19248)
calls=121 1740 
* 484
cfn=(19246)
calls=121 1740 
* 484
cfn=(19244)
calls=121 1740 
* 484
cfn=(19242)
calls=121 1740 
* 484
cfn=(19238)
calls=121 1740 
* 1089
cfn=(19234)
calls=121 1740 
* 1089
cfn=(19232)
calls=121 1740 
* 484
cfn=(19230)
calls=121 1740 
* 484
cfi=(107)
cfn=(19228)
calls=121 229 
* 363
cfi=(107)
cfn=(19226)
calls=121 213 
* 363
cfi=(107)
cfn=(19224)
calls=121 199 
* 363
cfi=(107)
cfn=(19222)
calls=121 186 
* 363
cfi=(106)
cfn=(19220) std::_Function_handler<void (bool, float), Engine::GameEngine::initEngine(int, char**)::{lambda(bool, float)#1}>::_M_invoke(std::_Any_data const&, bool&&, float&&)
calls=121 56 
* 484
fi=(8)
209 8228
cob=(11)
cfi=(9)
cfn=(28)
calls=4114 0 
* 50336
* 4114
fe=(162)
-1 4114
fi=(8)
+1 4114
fe=(162)
-1 15004
-7 121
+16 726
fi=(163)
768 121
fe=(162)
217 121
fi=(163)
768 242
403 242
fe=(162)
219 242
fi=(163)
403 242
fe=(162)
219 242
+4 968
fi=(8)
1720 1210
+2 2178
-2 968
209 242
fi=(163)
825 484
fi=(8)
209 242
cob=(11)
cfi=(9)
cfn=(28)
calls=242 0 
* 2662
* 242
fe=(162)
+8 1089
fi=(163)
768 121
fe=(162)
217 121
fi=(163)
768 121
fi=(8)
1724 484
+1 726
fe=(162)
221 968
fi=(8)
1685 605
+1 363
+1 363
-2 726
+1 726
-33 1210
+1 726
fe=(162)
226 726
+1 484
fi=(8)
-18 484
cob=(11)
cfi=(9)
cfn=(28)
calls=242 0 
* 4114
* 242
fe=(162)
+17 242
fi=(8)
-17 242
fe=(162)
+17 1210
+8 484
+7 121
-3 121
-2 121
-1 363
+4 121
-3 121
+5 605
fi=(163)
768 121
fe=(162)
241 121
fi=(163)
768 242
403 121
fe=(162)
244 121
fi=(163)
403 121
fe=(162)
244 242
fi=(163)
403 726
fe=(162)
244 726
fi=(163)
403 726
fe=(162)
244 2541
+5 1694
+7 242
+3 2662
fi=(8)
1720 968
fe=(162)
259 605
fi=(8)
1720 5566
+2 7744
-2 1936
209 847
fi=(163)
825 1694
fi=(8)
209 847
cob=(11)
cfi=(9)
cfn=(28)
calls=847 0 
* 10527
* 847
fe=(162)
+32 5324
fi=(163)
768 726
fe=(162)
241 726
fi=(163)
768 726
fi=(8)
1724 3993
+1 4840
-40 2178
+1 605
+1 605
-2 1210
+1 1210
-33 3146
+1 1452
fe=(162)
262 2541
+1 1694
fi=(8)
-54 1694
cob=(11)
cfi=(9)
cfn=(28)
calls=847 0 
* 9559
* 847
fe=(162)
+53 847
fi=(8)
-53 847
fe=(162)
+53 3146
-10 2904
+16 968

fl=(20)
fn=(62)
463 1436916
+1 957944
+2 478972

fl=(117)
fn=(14546)
48 484
-7 14278
fi=(116)
226 484
fe=(117)
41 484
fi=(116)
226 242
+1 968
+1 363
+3 121
+1 242
fe=(117)

fl=(16)
fn=(19428)
102 121

fl=(47)
fn=(384)
529 16486
fi=(12)
138 16486
fe=(47)
396 16486
fi=(12)
138 148374
fe=(47)
530 16486
cfi=(46)
cfn=(386)
calls=16486 425 
* 49458
+2 65944

fn=(712)
325 26702
+1 13351
-1 53404
+1 13351
fi=(4)
110 13351
456 13351
110 13351
456 26702
fi=(5)
267 40053
cob=(2)
cfi=(7)
cfn=(622)
calls=13351 0 
* 213616
* 13351
fi=(2)
-50 13351
fi=(5)
+50 26702
fi=(2)
-52 13351
+2 13351
fi=(4)
+80 26702
fi=(5)
-9 40053
fi=(4)
132 13351
fi=(5)
243 13351
fi=(33)
851 13351
fi=(12)
138 13351
fe=(47)
396 13351
fi=(12)
138 120159
fi=(33)
851 26702
cfi=(23)
cfn=(722)
calls=13351 1287 
* 1279478
* 26702
fi=(4)
180 40053
fe=(47)
328 26702
+4 93457
fi=(5)
-42 40053
cob=(2)
cfi=(7)
cfn=(12)
calls=13351 0 
* 160212
* 13351
* 40053
-2 26702
fe=(47)

fn=(402)
706 164860
fi=(12)
138 32972
fe=(47)
396 32972
fi=(12)
138 296748
fe=(47)
707 32972
cfi=(12)
cfn=(234)
calls=32972 41 
* 213790
+1 65944
fi=(12)
138 6990
fe=(47)
396 6990
fi=(12)
138 62910
fe=(47)
708 6990
cfi=(12)
cfn=(234)
calls=6990 41 
* 83880
* 6990
fi=(4)
5061 13980
fe=(47)
708 32972
+1 164860

fn=(430)
677 115402
fi=(11)
777 32972
fe=(47)
-96 82430
+2 16486
fi=(12)
138 214318
fe=(47)
687 32972
-4 35999
fi=(12)
138 467987
fe=(47)
687 71998
fi=(12)
138 3855
fe=(47)
687 3855
fi=(12)
138 7710
fe=(47)
687 11565
+1 19275
cfi=(11)
cfn=(436)
calls=3855 +89 
* 248639
* 11565
+2 104970
fi=(51)
189 48630
+2 48630
-2 48630
+2 48630
-2 48630
+2 389040
fe=(47)
691 194520
-10 97260
+10 3855
-10 7710
+12 131888

fn=(394)
401 73016
+1 36508
cfi=(50) /home/desktop/code/REGoth/src/logic/VisualController.cpp
cfn=(252) Logic::VisualController::onTransformChanged()
calls=36508 25 
* 5942284
-16 36508
fi=(12)
138 109524
fi=(201) /home/desktop/code/REGoth/src/components/Entities.h
341 36508
fi=(12)
138 109524
fe=(47)
388 73016
fi=(12)
138 36508
fe=(47)
389 36508
+17 36508
fi=(12)
138 219048
fi=(48)
-17 36508
fe=(47)
389 36508
cfn=(244) Logic::ModelVisual::updateAttachmentTransforms(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&)
calls=36508 -36 
* 31602280

fn=(244)
353 120132
-1 200220
+9 40044
-9 160176
+4 40044
cfi=(12)
cfn=(246)
calls=40044 138 
* 520572
* 80088
fi=(13)
656 80088
fe=(47)
356 640704
fi=(13)
656 160176
fe=(47)
361 120132
fi=(13)
781 80088
fi=(11)
-4 80088
fe=(47)
366 80088
fi=(13)
781 2831736
fi=(11)
-4 2831736
fe=(47)
366 3039324
fi=(13)
796 69196
fi=(108)
603 69196
+5 207588
-5 69196
+5 138392
-5 69196
fi=(49)
60 69196
fi=(108)
603 69196
fi=(49)
60 69196
fi=(108)
608 138392
fi=(49)
42 69196
fi=(108)
608 276784
fi=(49)
60 138392
-18 138392
fi=(108)
608 138392
fi=(51)
334 138392
fi=(108)
608 69196
fi=(51)
368 69196
fi=(49)
60 69196
fi=(108)
608 69196
fi=(51)
368 69196
fi=(49)
60 69196
fi=(51)
368 69196
fi=(49)
42 69196
fi=(108)
608 207588
fi=(49)
60 138392
-18 138392
fi=(108)
608 138392
fi=(51)
334 138392
fi=(108)
608 69196
fi=(51)
368 69196
fi=(49)
60 69196
fi=(108)
608 69196
fi=(51)
368 69196
fi=(49)
60 69196
fi=(51)
368 69196
fi=(49)
42 69196
fi=(108)
608 207588
fi=(49)
60 138392
-18 138392
fi=(108)
608 138392
fi=(51)
334 138392
fi=(108)
608 69196
fi=(51)
368 69196
fi=(49)
60 69196
fi=(108)
608 138392
fi=(51)
368 69196
fi=(108)
608 138392
fi=(49)
60 69196
fi=(51)
368 69196
fi=(49)
60 138392
-18 207588
fi=(51)
334 69196
+34 207588
fe=(47)
+9 345980
cfi=(45)
cfn=(226)
calls=69196 44 
* 2727568
* 69196
+1 138392
+1 29564
cfi=(50)
cfn=(252)
calls=14782 25 
* 2268946
* 69196
-13 207588
+3 69196
-3 138392
fi=(12)
138 761156
fe=(47)
371 138392
fi=(51)
-3 138392
fi=(13)
656 69196
fe=(47)
361 69196
fi=(13)
656 207588
fe=(47)
361 138392
fi=(13)
656 1386716
fe=(47)
361 1386716
fi=(13)
656 4160148
fe=(47)
361 2773432
+21 320352

fn=(238)
535 96639
396 32213
fi=(12)
138 354343
fe=(47)
537 64426
fi=(12)
138 10608
fi=(201)
341 3536
fi=(12)
138 3536
fe=(47)
388 7072
540 3536
+2 128852
fi=(48)
121 3536
fe=(47)
389 3536
cfn=(244)
calls=3536 -36 
* 2929314
* 3536

fl=(12)
fn=(234)
41 57600
fi=(46)
326 115200
+68 18263
fe=(12)
138 127841
fi=(46)
329 18263
-2 39337
+3 39337
fe=(12)

fn=(232)
138 41677
fi=(47)
396 41677
fe=(12)
138 375093
fi=(47)
398 41677
fe=(12)

fn=(448)
41 33602
fi=(46)
326 67204
+68 3674
fe=(12)
138 22044
fi=(46)
+4 7348
-1 11022
+6 3674
-6 3674
+6 3674
-1 11022
+2 3674
+1 3674
-1 3674
-1 3674
+2 22044
+1 3674
-1 3674
+1 13541
+30 6578
+3 3203
+2 3203
+3 6406
fi=(51)
334 9609
fi=(46)
188 98597
+5 197194
-8 98597
fi=(13)
796 492985
fi=(51)
495 1084567
+1 98597
334 98597
499 98597
-4 197194
+1 98597
334 98597
496 98597
334 98597
497 98597
334 98597
496 98597
+1 98597
-2 98597
+2 197194
+2 98597
+1 197194
-5 98597
+5 98597
334 98597
498 98597
-2 98597
+2 197194
334 98597
501 98597
-4 98597
+4 197194
334 98597
496 197194
334 98597
499 197194
+4 98597
-4 98597
+4 98597
334 98597
502 98597
334 98597
502 98597
-2 98597
+2 98597
-2 98597
334 98597
497 98597
334 98597
497 98597
334 98597
219 295791
fi=(46)
-19 98597
fi=(51)
+19 98597
fi=(13)
781 197194
fi=(51)
368 98597
+29 591582
-29 1478955
fe=(12)
41 98597
fi=(46)
326 197194
fe=(12)
41 3203
fi=(46)
326 6406
+68 101800
fe=(12)
138 1018000
fi=(13)
656 305400
fi=(46)
185 203600
+3 98597
+2 98597
-2 200397
fi=(13)
656 16015
fi=(46)
204 6406
fi=(51)
397 3203
fi=(46)
204 9609
+3 336315
fi=(51)
+32 9609
397 16015
fi=(46)
213 6406
fi=(51)
397 211398
fi=(46)
213 211398
fi=(13)
781 317097
fi=(108)
608 105699
fi=(46)
204 105699
fi=(108)
608 105699
fi=(13)
781 105699
fi=(108)
608 211398
-5 105699
+5 105699
-4 105699
fi=(49)
60 105699
fi=(108)
605 105699
fi=(49)
60 105699
fi=(108)
606 105699
+2 105699
fi=(49)
42 105699
fi=(108)
608 528495
fi=(13)
781 211398
fi=(49)
60 211398
-18 211398
fi=(108)
608 211398
fi=(51)
334 211398
fi=(108)
608 105699
fi=(49)
60 105699
fi=(108)
608 105699
fi=(49)
60 105699
-18 105699
fi=(108)
608 317097
fi=(49)
60 211398
-18 211398
fi=(108)
608 211398
fi=(51)
334 105699
fi=(108)
608 105699
fi=(49)
60 105699
fi=(108)
608 105699
fi=(49)
60 105699
-18 105699
fi=(108)
608 317097
fi=(49)
60 211398
-18 211398
fi=(51)
334 105699
fi=(108)
608 211398
fi=(49)
60 105699
fi=(108)
608 211398
fi=(49)
60 105699
-18 105699
fi=(108)
608 317097
fi=(49)
60 211398
-18 211398
fi=(51)
334 105699
+34 1691184
fi=(13)
656 422796
fi=(46)
204 211398
+17 9609
326 3203
221 3203
326 9609
fe=(12)
138 28827
fi=(46)
+87 6406
-77 12812
+77 12696
fi=(13)
656 15725
796 15725
fi=(51)
219 12580
fi=(13)
796 15725
fi=(51)
219 9435
fi=(52)
629 3145
fi=(46)
236 3145
fi=(52)
629 6290
fi=(51)
219 3145
fi=(52)
629 9435
fi=(51)
239 9435
fi=(46)
+2 44624
fi=(4)
110 385
+86 385
-86 770
400 770
196 385
cfi=(2)
cfn=(19570)
calls=385 +10 
* 16632
fi=(46)
-42 770
fi=(13)
781 9609
fi=(51)
368 3203
fi=(46)
204 6406
fi=(51)
368 51248
fi=(13)
656 12812
fi=(46)
204 6406
-44 770
-1 385
+1 385
cfn=(19578)
calls=385 -84 
* 3436818
+3 770
fi=(4)
+17 1155
fe=(12)

fn=(449)
41 385
fi=(46)
326 770
+68 385
fe=(12)
138 2310
fi=(46)
+4 770
-1 1155
+6 385
-6 385
+6 385
-1 1155
+2 385
+1 385
-1 385
-1 385
+2 2310
+1 385
-1 385
+1 1540
+30 770
+3 385
+2 385
+3 770
fi=(51)
334 1155
fi=(46)
188 11704
+5 23408
-8 11704
fi=(13)
796 58520
fi=(51)
495 128744
+1 11704
334 11704
499 11704
-4 23408
+1 11704
334 11704
496 11704
334 11704
497 11704
334 11704
496 11704
+1 11704
-2 11704
+2 23408
+2 11704
+1 23408
-5 11704
+5 11704
334 11704
498 11704
-2 11704
+2 23408
334 11704
501 11704
-4 11704
+4 23408
334 11704
496 23408
334 11704
499 23408
+4 11704
-4 11704
+4 11704
334 11704
502 11704
334 11704
502 11704
-2 11704
+2 11704
-2 11704
334 11704
497 11704
334 11704
497 11704
334 11704
219 35112
fi=(46)
-19 11704
fi=(51)
+19 11704
fi=(13)
781 23408
fi=(51)
368 11704
+29 70224
-29 175560
fe=(12)
41 11704
fi=(46)
326 23408
fe=(12)
41 385
fi=(46)
326 770
+68 12089
fe=(12)
138 120890
fi=(13)
656 36267
fi=(46)
185 24178
+3 11704
+2 11704
-2 23793
fi=(13)
656 1925
fi=(46)
204 770
fi=(51)
397 385
fi=(46)
204 1155
+3 40425
fi=(51)
+32 1155
397 1925
fi=(46)
213 770
fi=(51)
397 25410
fi=(46)
213 25410
fi=(13)
781 38115
fi=(108)
608 12705
fi=(46)
204 12705
fi=(108)
608 12705
fi=(13)
781 12705
fi=(108)
608 25410
-5 12705
+5 12705
-4 12705
fi=(49)
60 12705
fi=(108)
605 12705
fi=(49)
60 12705
fi=(108)
606 12705
+2 12705
fi=(49)
42 12705
fi=(108)
608 63525
fi=(13)
781 25410
fi=(49)
60 25410
-18 25410
fi=(108)
608 25410
fi=(51)
334 25410
fi=(108)
608 12705
fi=(49)
60 12705
fi=(108)
608 12705
fi=(49)
60 12705
-18 12705
fi=(108)
608 38115
fi=(49)
60 25410
-18 25410
fi=(108)
608 25410
fi=(51)
334 12705
fi=(108)
608 12705
fi=(49)
60 12705
fi=(108)
608 12705
fi=(49)
60 12705
-18 12705
fi=(108)
608 38115
fi=(49)
60 25410
-18 25410
fi=(51)
334 12705
fi=(108)
608 25410
fi=(49)
60 12705
fi=(108)
608 25410
fi=(49)
60 12705
-18 12705
fi=(108)
608 38115
fi=(49)
60 25410
-18 25410
fi=(51)
334 12705
+34 203280
fi=(13)
656 50820
fi=(46)
204 25410
+17 1155
326 385
221 385
326 1155
fe=(12)
138 3465
fi=(46)
+87 770
-77 1540
+77 770
+16 1540
fi=(13)
781 1155
fi=(51)
368 385
fi=(46)
204 770
fi=(51)
368 6160
fi=(13)
656 1540
fi=(46)
204 770
fe=(12)

fn=(246)
138 260743
fi=(81)
25 260743
fe=(12)
138 2607430
fi=(81)
26 260743
fe=(12)

fn=(690)
138 71118
fi=(166)
+88 11853
fe=(12)

fn=(20318)
138 60
fi=(47)
312 60
fe=(12)
138 540
fi=(47)
314 120
+1 120
+3 60
cfi=(46)
cfn=(19578)
calls=60 76 
* 484910
fe=(12)

fl=(61)
fn=(278)
233 67868
+1 407208
+2 67868

fl=(50)
fn=(252)
25 256450
fi=(11)
777 102580
fe=(50)
29 256450
+1 153870
cfi=(12)
cfn=(246)
calls=51290 138 
* 666770
-1 108260
+1 324780
cfi=(12)
cfn=(246)
calls=108260 138 
* 1407380
* 159550
-1 159550
fi=(12)
138 1276400
fe=(50)
29 159550
fi=(12)
138 159550
fi=(51)
368 2552800
fe=(50)
29 159550
+2 307740

fl=(22)
fn=(518)
679 172352
+6 43088
fi=(16)
104 86176
cob=(11)
cfi=(95)
cfn=(510)
calls=43088 -61 
* 5484436
* 43088
fe=(22)
695 43088
-8 43088
fi=(16)
104 43088
fe=(22)
695 129264
fi=(16)
104 43088
cob=(11)
cfi=(95)
cfn=(510)
calls=43088 -61 
* 11284729
* 43088
fe=(22)
256 43088
725 43088
254 43088
+1 43088
-1 43088
+2 43088
-1 43088
+1 43088
710 43088
+1 43088
+3 172352

fn=(218)
658 215440
+3 161580
+2 161580
+77 161580
fi=(16)
110 53860
fe=(22)
740 53860
fi=(16)
110 53860
cob=(11)
cfi=(41)
cfn=(200)
calls=53860 -61 
* 6879055
* 53860
fe=(22)
740 161580
-73 161580
fi=(16)
110 53860
cob=(11)
cfi=(41)
cfn=(200)
calls=53860 -61 
* 5008980
* 53860
fe=(22)

fn=(540)
943 96948
354 96948
+1 21544
562 10772
147 53860
355 10772
147 21544
355 10772
147 21544
682 21544
+1 10772
+3 32316
-1 10772
fi=(16)
104 21544
cob=(11)
cfi=(95)
cfn=(510)
calls=10772 -61 
* 1314184
* 10772
fe=(22)
695 10772
-8 10772
+8 32316
+1 10772
+28 43088
fi=(16)
104 21544
cob=(11)
cfi=(95)
cfn=(510)
calls=10772 -61 
* 3582224
* 10772
fe=(22)
725 10772
-1 32316
-15 10772
255 10772
713 10772
254 10772
151 10772
709 10772
255 10772
+1 10772
-1 10772
710 10772
151 21544
255 10772
+1 10772
712 10772
256 10772
150 10772
256 10772
712 10772
150 10772
+1 10772
-1 10772
+1 53860
fi=(97)
281 118492
cfn=(542)
calls=10772 107 
* 355476
fe=(22)
948 96948

fn=(506)
679 172352
+6 43088
fi=(16)
104 86176
cob=(11)
cfi=(95)
cfn=(510)
calls=43088 -61 
* 5484436
* 43088
fe=(22)
695 43088
-8 43088
fi=(16)
104 43088
fe=(22)
695 129264
fi=(16)
104 43088
cob=(11)
cfi=(95)
cfn=(510)
calls=43088 -61 
* 10642109
* 43088
fe=(22)
256 43088
725 43088
254 43088
+1 43088
-1 43088
+2 43088
-1 43088
+1 43088
710 43088
+1 43088
+3 172352

fn=(220)
658 215440
+3 161580
+2 161580
+77 161580
fi=(16)
110 53860
fe=(22)
740 53860
fi=(16)
110 53860
cob=(11)
cfi=(41)
cfn=(200)
calls=53860 -61 
* 6791523
* 53860
fe=(22)
740 161580
-73 161580
fi=(16)
110 53860
cob=(11)
cfi=(41)
cfn=(200)
calls=53860 -61 
* 5008980
* 53860
fe=(22)

fl=(106)
fn=(858)
62 1089
+13 121
-13 121
+13 121
fi=(11)
777 242
fe=(106)
80 363
fi=(12)
+58 484
fe=(106)
-54 242
fi=(12)
+54 2420
fe=(106)
-54 121
cfi=(1)
cfn=(444)
calls=121 387 
* 1765329029
-4 240
fi=(12)
+58 120
fe=(106)
-50 240
fi=(12)
+50 1080
fi=(190)
-98 120
fi=(12)
+98 240
fe=(106)
-50 240
cfi=(107)
cfn=(862)
calls=120 262 
* 89880
+4 120
-1 240
+1 120
-1 120
+1 480
-1 120
cfn=(880)
calls=120 +4 
* 1626104

fn=(880)
95 1089
fi=(12)
+43 2057
fi=(85)
301 605
+8 121
-8 363
+1 484
+1 121
+2 121
-4 121
+1 121
+1 121
+2 121
-3 121
+4 121
+5 121
+3 121
-12 121
+1 242
-1 121
+4 121
-3 121
+2 121
+1 121
-1 121
-2 121
+2 242
+4 121
-4 121
+1 242
+5 121
-6 121
+1 121
+1 242
-1 121
+1 363
+2 242
-2 121
+2 121
+1 121
-1 121
+1 363
-1 121
+4 121
-3 121
+1 242
-1 121
+3 121
-2 121
+2 242
-2 121
+2 242
+1 121
-1 121
+1 242
fi=(49)
60 121
fi=(85)
315 121
-1 121
+1 242
-1 121
+1 121
+2 121
+2 121
-2 121
-2 121
+2 121
+1 121
-1 242
+1 363
+1 242
-1 121
+1 121
+2 121
+1 121
-1 121
+2 121
-4 121
+2 121
+2 121
-2 121
fi=(49)
60 121
fi=(85)
321 121
fi=(49)
60 121
fi=(85)
322 121
+1 121
+12 121
-14 121
+12 121
fi=(49)
60 121
fi=(85)
322 121
fi=(49)
60 242
fi=(85)
332 121
-9 121
+11 121
-12 121
fi=(49)
60 121
-9 121
+9 363
-18 121
+18 484
-9 121
+9 363
-18 121
+18 605
-9 121
+9 363
-9 121
+9 121
-18 121
+18 121
-18 121
+18 605
fi=(85)
349 121
fi=(49)
60 242
fi=(85)
349 121
+2 121
-2 121
+2 242
fi=(49)
60 605
fi=(51)
334 121
fi=(49)
60 484
fi=(51)
334 121
fi=(49)
60 363
-9 121
+9 363
-18 121
+18 242
-9 121
+9 605
-18 121
fi=(51)
334 121
fi=(49)
60 363
-9 121
+9 242
fi=(51)
334 121
fi=(49)
60 242
-18 121
+18 363
fi=(51)
334 121
fi=(49)
60 242
-9 121
+9 242
-18 121
+18 242
fi=(51)
334 121
fi=(49)
60 363
-9 121
+9 484
fi=(51)
334 121
fi=(49)
60 121
fi=(51)
334 121
fi=(49)
42 121
+18 242
-9 121
+9 726
-18 121
fi=(51)
334 121
fi=(49)
60 363
-9 121
+9 363
-18 121
+18 242
fi=(51)
334 121
fi=(49)
60 484
fi=(51)
334 121
fi=(49)
60 242
-9 121
+9 363
-18 121
+18 363
fi=(51)
334 121
fi=(49)
60 121
-9 121
+9 363
-18 121
+18 242
fi=(51)
334 121
fi=(49)
60 242
-9 121
-9 121
+18 484
fi=(51)
334 121
fi=(49)
60 363
-9 242
-9 242
+18 363
fi=(51)
334 242
fe=(106)
100 121
cfi=(109)
cfn=(886)
calls=121 2578 
* 968
+1 242
+15 484
fi=(111)
707 363
fe=(106)
117 121
-1 121
fi=(111)
707 121
fe=(106)
117 121
-1 121
fi=(111)
707 1089
fe=(106)
117 242
fi=(111)
714 121
fe=(106)
116 121
fi=(111)
739 242
-30 121
+30 121
-29 242
-2 121
fe=(106)
117 121
cfi=(109)
cfn=(892)
calls=121 3388 
* 11616
+3 726
cfi=(109)
cfn=(896)
calls=121 3335 
* 4598
fi=(12)
+18 2057
fi=(51)
368 1815
fe=(106)
124 121
+1 121
+1 121
+1 121
fi=(51)
368 121
fe=(106)
132 484
cfi=(109)
cfn=(902)
calls=121 4551 
* 43802
fi=(11)
777 242
fe=(106)
135 363
fi=(12)
+3 121
fe=(106)
-2 363
fi=(12)
+2 605
fe=(106)
-2 121
cfi=(114)
cfn=(924)
calls=121 -69 
* 1527017
-1 242
+4 847

fn=(19220)
56 363
+1 121

fl=(73)
fn=(336)
94 41164
+63 41164
+2 41164
-57 41164
+57 41164
-57 82328
+57 41164
cfi=(74)
cfn=(338)
calls=41164 777 
* 273601911
+1 82328

fn=(348)
106 875336
+12 125048
+9 1750672
cfi=(59)
cfn=(350)
calls=125048 +51 
* 3001152
+2 1250480
+3 375144
+13 250096
-6 125048
+2 125048
-2 250096
+2 625240
-2 250096
+2 500192
-2 125048
+2 125048
-2 250096
+2 875336
-2 250096
+2 1625624
+11 750288
cfi=(72)
cfn=(352)
calls=125048 40 
* 25624267
+1 500192
cfi=(77)
cfn=(366)
calls=125048 -48 
* 125048
+1 625240

ob=(15)
fl=(147)
fn=(7146)
0 2025

ob=(14)
fl=(92)
fn=(19552) __fmodf_finite
0 1936

fn=(470) __fmod_finite
0 75915

fn=(19550)
0 1452
cfn=(19552)
calls=121 0 
0 1936

fn=(468)
0 43380
cfn=(470)
calls=3615 0 
0 75915

fn=(16430)
0 1452

totals: 1837568013
